import{_ as n,V as e,W as t,Z as a,X as s}from"./framework-8eb1d601.js";const p={},i=s(`<h1 id="逻辑备份与恢复" tabindex="-1"><a class="header-anchor" href="#逻辑备份与恢复" aria-hidden="true">#</a> 逻辑备份与恢复</h1><h2 id="_1-上节回顾" tabindex="-1"><a class="header-anchor" href="#_1-上节回顾" aria-hidden="true">#</a> 1. 上节回顾</h2><br><h3 id="_1-1-日志" tabindex="-1"><a class="header-anchor" href="#_1-1-日志" aria-hidden="true">#</a> 1.1 日志</h3><p><strong>binlog</strong> 如何开启?</p><p><code>binlog_format=row</code> SBR 模式参数</p><br><p><strong>RBR 与 SBR 模式之间的区别</strong>：</p><p>例如要更新大于2000的数据行 ，此时需要更新1000行数据，RBR记录每一行的变化，SBR则只记录这一条命令，但是SBR有可能会记录错误的日志，如在函数 now 当前时间的命令会有错误。</p><br><br><p><strong>双一标准的其中一个</strong>：</p><p><code>sync_binlog=1</code> 每次事务提交都立即刷写binlog到磁盘</p><br><p><strong>双一标准的另一个：</strong></p><p><code>innodb_flush_log_at_trx_commit=1</code> 在事务提交时刷写 redo 到磁盘策略</p><p><strong>查看日志：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> master <span class="token keyword">status</span> <span class="token punctuation">;</span>
<span class="token keyword">show</span> binlog events <span class="token operator">in</span> <span class="token string">&#39;日志名称&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>非GTID 截取日志</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqlbinlog --start-position  --stop-position  <span class="token comment">#截取日志</span>
--base64-output<span class="token operator">=</span>decode-rows  <span class="token parameter variable">-vvv</span>  <span class="token comment">#(--help可以查到)   翻译成人话</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,20),l=s(`<br><br><p><strong>GTID</strong> 5.6版本出现 <strong>5.7版本</strong> 推荐使用</p><br><p><strong>GTID的开启和配置</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/my.cnf
gtid-mode<span class="token operator">=</span>on
enforce-gtid-consistency<span class="token operator">=</span>true <span class="token comment">#强制gtid一致性</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=s(`<br><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>不知道参数的情况下：
mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%gtid%&#39;</span><span class="token punctuation">;</span> <span class="token comment">--查看GTIT有有关的参数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),r=s(`<br><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># mysqlbinlog --help |grep gtid 帮助</span>
 --skip-gtids  跳过GTIP检查 导出日志时不记录日志  
 --include-gtids<span class="token operator">=</span><span class="token string">&#39;&#39;</span>   想截取哪一段日志
 --exclude-gtids<span class="token operator">=</span><span class="token string">&#39;&#39;</span>  想排除哪一段日志
 
<span class="token builtin class-name">set</span> <span class="token assign-left variable">sql_log_bin</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    临时关闭当前窗口的二进制日志
<span class="token builtin class-name">source</span> <span class="token punctuation">..</span>             恢复命令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),c=s(`<br><p><strong>幂等性</strong>：在数据恢复时检查幂等性功能做过的事情就不会再做了</p><br><br><h3 id="_1-2-二进制日志清理" tabindex="-1"><a class="header-anchor" href="#_1-2-二进制日志清理" aria-hidden="true">#</a> 1.2 二进制日志清理</h3><br><h3 id="_1-2-1-自动清理" tabindex="-1"><a class="header-anchor" href="#_1-2-1-自动清理" aria-hidden="true">#</a> 1.2.1 自动清理</h3><p><strong>设置的依据</strong>: 至少1轮全备周期长度的过期时间. 7天一个全备 两轮加一天</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show variables like <span class="token string">&#39;%expire%&#39;</span>；
<span class="token assign-left variable">expire_logs_days</span><span class="token operator">=</span><span class="token number">15</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1.png" alt="日志清理1" tabindex="0" loading="lazy"><figcaption>日志清理1</figcaption></figure><br><br><h3 id="_1-2-2-手动清理" tabindex="-1"><a class="header-anchor" href="#_1-2-2-手动清理" aria-hidden="true">#</a> 1.2.2 手动清理</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> help <span class="token keyword">purge</span> <span class="token comment">--手工</span>
<span class="token keyword">PURGE</span> <span class="token keyword">BINARY</span> LOGS <span class="token keyword">TO</span> <span class="token string">&#39;mysql-bin.000032&#39;</span><span class="token punctuation">;</span> <span class="token comment">--删除到那个日志为止</span>
<span class="token keyword">PURGE</span> <span class="token keyword">BINARY</span> LOGS BEFORE <span class="token string">&#39;2008-04-02 22:46:26&#39;</span><span class="token punctuation">;</span> <span class="token comment">--按照时间删除</span>
mysql<span class="token operator">&gt;</span> reset master <span class="token punctuation">;</span> <span class="token comment">--全清了 主从主库绝对不能删</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-1.png" alt="日志清理2" tabindex="0" loading="lazy"><figcaption>日志清理2</figcaption></figure><br><br><h3 id="_1-3-日志如何滚动" tabindex="-1"><a class="header-anchor" href="#_1-3-日志如何滚动" aria-hidden="true">#</a> 1.3 <strong>日志如何滚动</strong></h3><br><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> flush logs<span class="token punctuation">;</span> <span class="token comment">--重新的一个文件开始记录日志</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>数据库重启</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%max%&#39;</span>
max_binlog_size<span class="token operator">=</span><span class="token number">1073741824</span>  <span class="token comment">--二进制文件的最大大小</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,22),d=s(`<br><br><h3 id="_1-4-slow-log-慢语句分析" tabindex="-1"><a class="header-anchor" href="#_1-4-slow-log-慢语句分析" aria-hidden="true">#</a> 1.4 slow log 慢语句分析</h3><br><p>慢语句开关</p><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-2.png" alt="慢语句开关" tabindex="0" loading="lazy"><figcaption>慢语句开关</figcaption></figure><br><p>文件位置</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;slow_query_log%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-3.png" alt="慢语句位置" tabindex="0" loading="lazy"><figcaption>慢语句位置</figcaption></figure><br><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-4.png" alt="慢语句位置" tabindex="0" loading="lazy"><figcaption>慢语句位置</figcaption></figure><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-5.png" alt="慢语句位置" tabindex="0" loading="lazy"><figcaption>慢语句位置</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;long%&#39;</span><span class="token punctuation">;</span> <span class="token comment">--时间阈值超过这个时间就算慢语句</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%using_indexes%&#39;</span><span class="token punctuation">;</span> <span class="token comment">--是否记录不走索引的语句</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysqldumpslow <span class="token operator">-</span>s c <span class="token operator">-</span>t <span class="token number">10</span> <span class="token operator">/</span>xxxxx <span class="token comment">--分析慢语句</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),u=s(`<br><br><h3 id="_1-5-innodb-核心参数" tabindex="-1"><a class="header-anchor" href="#_1-5-innodb-核心参数" aria-hidden="true">#</a> 1.5 innodb 核心参数</h3><p><strong>双一参数</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">innodb_flush_log_at_trx_commit</span><span class="token operator">=</span><span class="token number">1</span>  <span class="token comment">#最安全模式 为1时每次提交事务都刷新到磁盘</span>
<span class="token assign-left variable">innodb_flush_method</span><span class="token operator">=</span>o_direct      <span class="token comment">#数据刷新到磁盘绕过系统缓存由于不走缓存性能较慢 直通模式</span>
<span class="token assign-left variable">innodb_flush_log_at_trx_commit</span><span class="token operator">=</span><span class="token number">0</span>  <span class="token comment">#最高性能模式</span>
<span class="token assign-left variable">innodb_flush_method</span><span class="token operator">=</span>fsync         <span class="token comment">#为0 时事务每秒刷写到磁盘不管提交没提交</span>
                                  <span class="token comment">#但是每秒发生无数事务断电可能导致事务丢失。 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),k=s(`<br><br><h2 id="_2-在备份恢复中的职责" tabindex="-1"><a class="header-anchor" href="#_2-在备份恢复中的职责" aria-hidden="true">#</a> 2. 在备份恢复中的职责</h2><br><h3 id="_2-1-备份策略的设计" tabindex="-1"><a class="header-anchor" href="#_2-1-备份策略的设计" aria-hidden="true">#</a> 2.1 备份策略的设计</h3><p>通过三个方面设计</p><p><strong>(1) 备份周期:</strong></p><p>根据数据量设计备份周期</p><p><strong>例如</strong>：</p><p>60G数据大小所需备份时间大约为30分钟尽量每天备份一次</p><p>而到达 9T 数据量就应该是按照每周备份一次了。</p><br><p><strong>(2)备份工具</strong>:</p><ul><li><p>mysqldump (MDP) 用于每天</p></li><li><p>XBK (PBK) percona Xtrabackup 用于每周</p></li><li><p>MEB(MySQL Enterprise BACKUP MEB官方企业版工具)</p></li><li><p>MySQL binlog 二进制日志截取恢复</p><br></li></ul><p><strong>(3)备份方式</strong>:</p><p><strong>逻辑备份</strong>:</p><ul><li>全备 mysqldump 整个备份</li><li>增量 binlog (flush logs 滚动日志拷贝最后一个文件之前的日志 ,cp靠走) 增量备份</li></ul><br><p><strong>物理备份</strong>:</p><ul><li>全备 : XBK</li><li>增量 : XBK</li></ul><br><h3 id="_2-2-检查备份可用性" tabindex="-1"><a class="header-anchor" href="#_2-2-检查备份可用性" aria-hidden="true">#</a> 2.2 检查备份可用性</h3><br><p>一般晚上11点执行</p><p><strong>检查流程</strong>：</p><ul><li><p>crontab -l</p></li><li><p>备份脚本</p></li><li><p>备份路径</p></li><li><p>看备份日志,检查备份文件(大小,内容)</p></li><li><p>定期的恢复演练</p><br></li></ul><br><h3 id="_2-3-数据恢复" tabindex="-1"><a class="header-anchor" href="#_2-3-数据恢复" aria-hidden="true">#</a> 2.3 数据恢复</h3><p>只要备份和日志是完整的,恢复到故障之前的时间点(快速)</p><br><br><h3 id="_2-4-数据迁移" tabindex="-1"><a class="header-anchor" href="#_2-4-数据迁移" aria-hidden="true">#</a> 2.4 数据迁移</h3><p><strong>操作系统不同的迁移</strong></p><ul><li><p>mysql 同平台迁移</p></li><li><p>其他操作系统数据库软件 迁移到 mysql 异构平台</p></li><li><p>mysql 迁移到 其他操作系统数据库软件</p><br></li></ul><br><h3 id="_2-5-备份情况介绍" tabindex="-1"><a class="header-anchor" href="#_2-5-备份情况介绍" aria-hidden="true">#</a> 2.5 备份情况介绍</h3><br><ul><li>热备 : 对于业务影响最小 InnoDB</li><li>温备 : 长时间锁表备份 MyISAM</li><li>冷备 : 业务关闭情况下备份</li></ul><br><h2 id="_3-逻辑备份操作" tabindex="-1"><a class="header-anchor" href="#_3-逻辑备份操作" aria-hidden="true">#</a> 3 . 逻辑备份操作</h2><h3 id="mysqldump-参数介绍" tabindex="-1"><a class="header-anchor" href="#mysqldump-参数介绍" aria-hidden="true">#</a> mysqldump 参数介绍</h3><h3 id="_3-1-连接数据库参数" tabindex="-1"><a class="header-anchor" href="#_3-1-连接数据库参数" aria-hidden="true">#</a> 3.1 <strong>连接数据库参数</strong></h3><br><ul><li>-u 指定用户登录</li><li>-p 账户密码</li><li>-S 使用Soket文件登录</li><li>-h 登录网段</li><li>P 指定端口</li></ul><br><h3 id="_3-2-基础备份参数" tabindex="-1"><a class="header-anchor" href="#_3-2-基础备份参数" aria-hidden="true">#</a> 3.2 基础备份参数</h3><p><strong>-A</strong> <strong>全备</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123</span> <span class="token parameter variable">-A</span> <span class="token operator">&gt;</span>/backup/full.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,48),b=s(`<br><p>-<strong>B</strong> <strong>单库</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123</span> <span class="token parameter variable">-B</span> world oldguo wordpress <span class="token operator">&gt;</span>/backup/db.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),m=s(`<br><p><strong>分库分表备份</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123</span> world city country <span class="token operator">&gt;</span> /backup/tab.sql
<span class="token comment"># 第一个是库名 其他都是表名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),g=s(`<br><br><h3 id="_3-3-特殊备份参数" tabindex="-1"><a class="header-anchor" href="#_3-3-特殊备份参数" aria-hidden="true">#</a> 3.3 特殊备份参数</h3><br><ul><li><p><code>-R</code> 存储过程和函数 类型与shell脚本</p></li><li><p><code>-E</code> 事件 类似Linux中计划任务</p></li><li><p><code>--triggers</code> 触发器</p></li><li><p><code>--master-data=2</code> 自动记录日志起点</p><br></li></ul><p><strong>案例模拟</strong>：</p><p>备份计划每天全备，大约60G数据。有一次周三下午数据库损坏。</p><br><p><strong>恢复思路</strong>：</p><p><strong>1.首先找到周二的全备恢复</strong></p><p><strong>2.截取全备到损坏之前的 binlog</strong></p><p><strong>找起点问题</strong>：</p><p><code>--master-data=2</code> 参数会自动把全备结束时二进制日志起点记下来但是他会自动锁表</p><p><strong>终点：</strong></p><p>查询二进制文件最后的位置</p><br><br><h3 id="_3-4-恢复-binlog" tabindex="-1"><a class="header-anchor" href="#_3-4-恢复-binlog" aria-hidden="true">#</a> 3.4 恢复 binlog</h3><br><p>(1) 记录备份时刻的binlog信息</p><p>(2) 自动锁表</p><p>不加<code>--single-transaction</code> ,全局锁表温备份，长时间锁表备份。</p><p>加了<code>--single-transaction</code>,对于InnoDB存储引擎的表不锁表备份，(快照备份)但是其他引擎锁表。</p><p><code>--single-transaction</code> 对于InnoDB的表,进行一致性快照备份,不锁表. 备份的是快照的数据</p><br><br><h2 id="_4-恢复案例" tabindex="-1"><a class="header-anchor" href="#_4-恢复案例" aria-hidden="true">#</a> 4. 恢复案例</h2><br><h3 id="_4-1-背景环境" tabindex="-1"><a class="header-anchor" href="#_4-1-背景环境" aria-hidden="true">#</a> 4.1 背景环境</h3><p>正在运行的网站系统，mysql-5.7.20 数据库，数据量50G，日业务增量1-5M。</p><br><h3 id="_4-2-备份策略" tabindex="-1"><a class="header-anchor" href="#_4-2-备份策略" aria-hidden="true">#</a> 4.2 备份策略</h3><p>每天23:00点，计划任务调用mysqldump执行全备脚本</p><br><h3 id="_4-3-故障时间点" tabindex="-1"><a class="header-anchor" href="#_4-3-故障时间点" aria-hidden="true">#</a> 4.3 故障时间点</h3><p><strong>年底故障演练</strong>: 模拟周三上午10点误删除数据库.</p><br><h3 id="_4-4-思路" tabindex="-1"><a class="header-anchor" href="#_4-4-思路" aria-hidden="true">#</a> 4.4 思路</h3><br><ol><li>停业务，挂维护页,避免数据的二次伤害</li><li>找一个临时库，恢复周二 23：00 点的全备</li><li>截取周二23：00 到 周三10点误删除之间的 binlog，恢复到临时库</li><li>测试可用性和完整性</li><li><strong>方法一</strong> 直接使用临时库顶替原生产库，前端应用割接到新库</li><li><strong>方法二</strong> 将误删除的表导出，导入到原生产库</li><li>开启业务</li><li>经过20分钟的处理，最终业务恢复正常</li></ol><br><h3 id="_4-5-故障模拟演练" tabindex="-1"><a class="header-anchor" href="#_4-5-故障模拟演练" aria-hidden="true">#</a> 4.5 故障模拟演练</h3><br><h4 id="_4-5-1-准备数据" tabindex="-1"><a class="header-anchor" href="#_4-5-1-准备数据" aria-hidden="true">#</a> 4.5.1 准备数据</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">backup</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token keyword">backup</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t1 <span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> t1 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
rm <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span><span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-5-2-准备周二-23-00点的全备" tabindex="-1"><a class="header-anchor" href="#_4-5-2-准备周二-23-00点的全备" aria-hidden="true">#</a> 4.5.2 准备周二 23：00点的全备</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123 <span class="token operator">-</span>A <span class="token operator">-</span>R <span class="token comment">--triggers --set-gtid-purged=OFF --master-data=2 --single-transaction|gzip &gt; /backup/full_$(date +%F).sql.gz</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>检查备份可用性</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /backup/ ll*
<span class="token comment">#注意查看备份文件大小和时间点必要时打开文件查看是否备份正确</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-7.png" alt="检查备份完整性" tabindex="0" loading="lazy"><figcaption>检查备份完整性</figcaption></figure><br><h4 id="_4-5-3-模拟周二-23-00到周三-10点之间数据变化" tabindex="-1"><a class="header-anchor" href="#_4-5-3-模拟周二-23-00到周三-10点之间数据变化" aria-hidden="true">#</a> 4.5.3 模拟周二 23：00到周三 10点之间数据变化</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> <span class="token keyword">backup</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> t1 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t2 <span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> t2 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-5-4-模拟故障-删除表-只是模拟-不代表生产操作" tabindex="-1"><a class="header-anchor" href="#_4-5-4-模拟故障-删除表-只是模拟-不代表生产操作" aria-hidden="true">#</a> 4.5.4 模拟故障,删除表(只是模拟，不代表生产操作)</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">backup</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,55),h=s(`<br><br><h3 id="_4-6-恢复过程" tabindex="-1"><a class="header-anchor" href="#_4-6-恢复过程" aria-hidden="true">#</a> 4.6 恢复过程</h3><h4 id="_4-6-1-准备临时数据库-多实例3307" tabindex="-1"><a class="header-anchor" href="#_4-6-1-准备临时数据库-多实例3307" aria-hidden="true">#</a> 4.6.1 准备临时数据库（多实例3307）</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>systemctl <span class="token keyword">start</span> mysqld3307
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-6-2-准备备份" tabindex="-1"><a class="header-anchor" href="#_4-6-2-准备备份" aria-hidden="true">#</a> 4.6.2 准备备份</h4><p>（1）准备全备：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /backup
gunzip full_2018-10-14.sql.gz 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）截取二进制日志</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> 
<span class="token comment">-- CHANGE MASTER TO MASTER_LOG_FILE=&#39;mysql-bin.000002&#39;, MASTER_LOG_POS=753;</span>
起点 <span class="token number">753</span>
<span class="token keyword">show</span> master <span class="token keyword">status</span><span class="token punctuation">;</span> <span class="token comment">--查看日志 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-8.png" alt="查找日志起点" tabindex="0" loading="lazy"><figcaption>查找日志起点</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#找终点 </span>

<span class="token keyword">show</span> binlog event <span class="token operator">in</span> <span class="token string">&quot;mysql-bin.000002&quot;</span> 
 
<span class="token comment">#找到终点为：1519 </span>
 
<span class="token comment">#截取日志</span>
mysqlbinlog <span class="token comment">--skip-gtids  --start-position=753 --stop-position=1519 /data/binlog/mysql-bin.000002 &gt;/backup/bin.sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-6-3-恢复备份到临时库" tabindex="-1"><a class="header-anchor" href="#_4-6-3-恢复备份到临时库" aria-hidden="true">#</a> 4.6.3 恢复备份到临时库</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock
<span class="token keyword">set</span> sql_log_bin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">--关闭二进制日志</span>
source <span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>full_2019<span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">15.</span><span class="token keyword">sql</span>
source <span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>bin<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-6-4-将故障表导出并恢复到生产" tabindex="-1"><a class="header-anchor" href="#_4-6-4-将故障表导出并恢复到生产" aria-hidden="true">#</a> 4.6.4 将故障表导出并恢复到生产</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysqldump  <span class="token operator">-</span>S <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span><span class="token number">3307</span><span class="token operator">/</span>mysql<span class="token punctuation">.</span>sock <span class="token operator">-</span>B <span class="token keyword">backup</span> <span class="token operator">&gt;</span><span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>bak<span class="token punctuation">.</span><span class="token keyword">sql</span>
mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123 
<span class="token keyword">set</span> sql_log_bin<span class="token operator">=</span><span class="token number">0</span>
source <span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span>bak<span class="token punctuation">.</span><span class="token keyword">sql</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),v=s(`<br><br><h2 id="_5-恢复练习" tabindex="-1"><a class="header-anchor" href="#_5-恢复练习" aria-hidden="true">#</a> 5.恢复练习</h2><h4 id="_5-1-创建一个数据库-test001" tabindex="-1"><a class="header-anchor" href="#_5-1-创建一个数据库-test001" aria-hidden="true">#</a> 5.1 创建一个数据库 test001</h4><p><strong>检查日志是否开启</strong> ： <code>select @@sql_log_bin;</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> test001 <span class="token keyword">charset</span> utf8mb4<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-2-在test001下创建一张表t1" tabindex="-1"><a class="header-anchor" href="#_5-2-在test001下创建一张表t1" aria-hidden="true">#</a> 5.2 在test001下创建一张表t1</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> test001<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> t1 <span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-3-插入5行任意数据" tabindex="-1"><a class="header-anchor" href="#_5-3-插入5行任意数据" aria-hidden="true">#</a> 5.3 插入5行任意数据</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">insert</span> <span class="token keyword">into</span> ti <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-4-进行全备" tabindex="-1"><a class="header-anchor" href="#_5-4-进行全备" aria-hidden="true">#</a> 5.4 进行全备</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /backup/ 
mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123</span> <span class="token parameter variable">-A</span> --master-data<span class="token operator">=</span><span class="token number">2</span> --single-transaction <span class="token parameter variable">-R</span> <span class="token parameter variable">-E</span> <span class="token parameter variable">--triggers</span> <span class="token operator">&gt;</span> /backup/full.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-5-检查备份完整性" tabindex="-1"><a class="header-anchor" href="#_5-5-检查备份完整性" aria-hidden="true">#</a> 5.5 检查备份完整性</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> full.sql  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-9.png" alt="查看日志完整性" tabindex="0" loading="lazy"><figcaption>查看日志完整性</figcaption></figure><h4 id="_5-6-插入两行数据-任意修改3行数据-删除1行数据" tabindex="-1"><a class="header-anchor" href="#_5-6-插入两行数据-任意修改3行数据-删除1行数据" aria-hidden="true">#</a> 5.6 插入两行数据，任意修改3行数据，删除1行数据</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> t1 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
<span class="token keyword">update</span> t1 <span class="token keyword">set</span> id<span class="token operator">=</span><span class="token number">10</span> <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">5</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> t1 <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-7-删除所有数据" tabindex="-1"><a class="header-anchor" href="#_5-7-删除所有数据" aria-hidden="true">#</a> 5.7 删除所有数据</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> t1<span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-8-再t1中又插入5行新数据-修改3行数据" tabindex="-1"><a class="header-anchor" href="#_5-8-再t1中又插入5行新数据-修改3行数据" aria-hidden="true">#</a> 5.8 再t1中又插入5行新数据，修改3行数据</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> t1 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
<span class="token keyword">update</span> t1 <span class="token keyword">set</span> id<span class="token operator">=</span><span class="token number">10</span> <span class="token keyword">where</span> id<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">commit</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>需求</strong>：跳过第六步恢复表数据，（第六步为错误插入数据 需要排除）</p><p><strong>确认</strong>：1-5 步操作 是日志 12 -17 号 跳过第六步是15号</p><figure><img src="https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section7-1-10.png" alt="跳过第六步恢复表数据" tabindex="0" loading="lazy"><figcaption>跳过第六步恢复表数据</figcaption></figure><h4 id="_5-9-按照需求恢复数据" tabindex="-1"><a class="header-anchor" href="#_5-9-按照需求恢复数据" aria-hidden="true">#</a> 5.9 按照需求恢复数据</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">set</span> sql_log_bin<span class="token operator">=</span><span class="token number">0</span>  <span class="token comment">--关闭日志</span>
 source <span class="token operator">/</span><span class="token keyword">backup</span><span class="token operator">/</span><span class="token keyword">full</span><span class="token punctuation">.</span><span class="token keyword">sql</span> <span class="token comment">--恢复全备</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-扩展参数" tabindex="-1"><a class="header-anchor" href="#_6-扩展参数" aria-hidden="true">#</a> 6.扩展参数</h2><p>在构建主从时,使用 AUTO/ON</p><p><code>--set-gtid-purged=AUTO/ON</code></p><p>仅是做普通的本机备份恢复时,可以添加</p><p><code>--set-gtid-purged=OFF</code></p><p><code>SET @@GLOBAL.GTID_PURGED=&#39;aa648280-a6a6-11e9-949f-000c294a1b3b:1-11&#39;;</code></p><p><code>--max_allowed_packet=128M</code> 控制的是备份时传输数据包的大小.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123</span> <span class="token parameter variable">-A</span> <span class="token parameter variable">-R</span> <span class="token parameter variable">--max_allowed_packet</span><span class="token operator">=</span>128M <span class="token parameter variable">--triggers</span> --set-gtid-purged<span class="token operator">=</span>OFF --master-data<span class="token operator">=</span><span class="token number">2</span> --single-transaction<span class="token operator">|</span><span class="token function">gzip</span> <span class="token operator">&gt;</span> /backup/full_<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>.sql.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,34);function _(y,x){return e(),t("div",null,[i,a(),l,a(),o,a(),r,a(),c,a(),d,a(),u,a(),k,a(),b,a(),m,a(),g,a(),h,a(),v])}const q=n(p,[["render",_],["__file","dba07.html.vue"]]);export{q as default};
