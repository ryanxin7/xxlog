import{_ as t,V as l,W as o,Y as s,Z as n,a0 as e,X as i,C as p}from"./framework-8eb1d601.js";const c={},r=s("p",null,"etcd是CoreOS团队于2013年6月发起的开源项目，它的目标是构建一个高可用的分 布式键值(key-value)数据库。etcd内部采用raft协议作为-致性算法，etcd基于Go语言实现。",-1),d={href:"https://etcd.io",target:"_blank",rel:"noopener noreferrer"},u=s("br",null,null,-1),k={href:"https://github.com/etcd-io/etcd",target:"_blank",rel:"noopener noreferrer"},m=s("br",null,null,-1),v={href:"https://etcd.io/docs/v3.4/op-guide/hardware/",target:"_blank",rel:"noopener noreferrer"},b=i(`<p>为什么k8s使用etcd？ <br><strong>Etcd 特有优势</strong></p><blockquote><p><strong>完全复制:</strong> 集群中的每个节点都可以使用完整的存档<br><strong>高可用性</strong>: Etcd可用于避免硬件的单点故障或网络问题<br><strong>一致性</strong>: 每次读取都会返回跨多主机的最新写入<br><strong>简单</strong>: 包括一个定义良好、面向用户的API (gRPC)<br><strong>安全</strong>: 实现了带有可选的客户端证书身份验证的自动化TLS<br><strong>快速</strong>: 每秒10000次写入的基准速度<br><strong>可靠</strong>: 使用Raft算法实现了存储的合理分布Etcd的工作原理</p></blockquote><p>etcd 存储这k8s整个集群的数据，一定要做好定期备份</p><p>因为etcd数据存储在硬盘上，读写IO速度关系着集群中pod的运行，etcd集群最好使用固态硬盘并且内存要大一点。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>中间件：
复制式集群
   mysql 集群 zookeeper etcd redis 哨兵
 
分片式：
   redis cluster kafka elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>启动脚本参数:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@k8s-etcd1:-<span class="token comment"># cat /etc/systemd/system/etcd. service</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Etcd Server
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target
<span class="token assign-left variable">After</span><span class="token operator">=</span>network-online.target
<span class="token assign-left variable">Wants</span><span class="token operator">=</span>network-online.target
<span class="token assign-left variable">Documentation</span><span class="token operator">=</span>https://github.com/coreos
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>notify
<span class="token assign-left variable">WorkingDirectory</span><span class="token operator">=</span>/var/lib/etcd/ <span class="token comment">#数据保存目录ExecStart=/usr/local/bin/etcd \\ #二进制文件路径</span>
<span class="token parameter variable">--name</span><span class="token operator">=</span>etcd1 <span class="token punctuation">\\</span> <span class="token comment">#当前node 名称</span>
--cert-file<span class="token operator">=</span>/etc/etcd/ssl/etcd.pem
--key-file<span class="token operator">=</span>/etc/etcd/ssl/etcd-key.pem
--peer-cert-file<span class="token operator">=</span>/etc/etcd/ssl/etcd.pem
--peer-key-file<span class="token operator">=</span>/etc/etcd/ssl/etcd-key.pem
--trusted-ca-file<span class="token operator">=</span>/etc/kubernetes/ssl/ca.pem
--peer-trusted-ca-file<span class="token operator">=</span>/etc/kubernetes/ssl/ca.pem
--initial-advertise-peer-urls<span class="token operator">=</span>https://192.168.7.101:2380 <span class="token punctuation">\\</span> <span class="token comment">#通告自己的集群端口</span>
--listen-peer-urls<span class="token operator">=</span>https://192.168.7.101:2380 <span class="token punctuation">\\</span> <span class="token comment">#集群之间通讯端口</span>
--listen-client-urls<span class="token operator">=</span>https://192.168.7.101:2379,http://127.0.0.1:2379 <span class="token punctuation">\\</span> <span class="token comment">#客户端访问地址</span>
--advertise-client-urls<span class="token operator">=</span>https://192.168.7.101:2379 <span class="token punctuation">\\</span> <span class="token comment">#通告自己的客户端端口</span>
--initial-cluster-token<span class="token operator">=</span>etcd-cluster-0 <span class="token punctuation">\\</span> <span class="token comment">#创建集群使用的token，一个集群内的节点保持一致</span>
--initial-cluster<span class="token operator">=</span>etcd1<span class="token operator">=</span>https://192.168.7.101:2380,etcd2<span class="token operator">=</span>https://192.168.7.102:2380,etcd3<span class="token operator">=</span>https://192.168.7.103:2380 <span class="token punctuation">\\</span> <span class="token comment">#集群所有的节点信息 </span>
--initial-cluster-state<span class="token operator">=</span>new <span class="token punctuation">\\</span> <span class="token comment">#新建集群的时候的值为new,如果是已经存在的集群为existing。</span>
--data-dir<span class="token operator">=</span>/var/lib/etcd <span class="token comment">#数据目录路径</span>
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>on-failure
<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span><span class="token number">5</span>
<span class="token assign-left variable">LimitNOFILE</span><span class="token operator">=</span><span class="token number">65536</span>


<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="VCN6E"></a></p><h3 id="验证当前etcd所有成员状态" tabindex="-1"><a class="header-anchor" href="#验证当前etcd所有成员状态" aria-hidden="true">#</a> 验证当前etcd所有成员状态</h3><p><a name="oXhMz"></a></p><h4 id="_1-心跳信息" tabindex="-1"><a class="header-anchor" href="#_1-心跳信息" aria-hidden="true">#</a> 1.心跳信息</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#export NODE_IPS=&quot;172.31.7.101 172.31.7.102 172.31.7.103&quot;</span>
<span class="token comment"># for ip in \${NODE_IPS}; do   ETCDCTL_API=3 /usr/local/bin/etcdctl   --endpoints=https://\${ip}:2379 --cacert=/etc/kubernetes/ssl/ca.pem   --cert=/etc/kubernetes/ssl/etcd.pem   --key=/etc/kubernetes/ssl/etcd-key.pem   endpoint health; done</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="j1SDg"></a></p><h4 id="_2-显示集群成员信息" tabindex="-1"><a class="header-anchor" href="#_2-显示集群成员信息" aria-hidden="true">#</a> 2. 显示集群成员信息</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> /usr/local/bin/etcdctl --write-out<span class="token operator">=</span>table member list   <span class="token parameter variable">--endpoints</span><span class="token operator">=</span>https://172.31.7.101:2379 <span class="token parameter variable">--cacert</span><span class="token operator">=</span>/etc/kubernetes/ssl/ca.pem   <span class="token parameter variable">--cert</span><span class="token operator">=</span>/etc/kubernetes/ssl/etcd.pem <span class="token parameter variable">--key</span><span class="token operator">=</span>/etc/kubernetes/ssl/etcd-key.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a name="tfn5J"></a></p><h4 id="_3-以表格方式显示节点详细状态" tabindex="-1"><a class="header-anchor" href="#_3-以表格方式显示节点详细状态" aria-hidden="true">#</a> 3.以表格方式显示节点详细状态</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">NODE_IPS</span><span class="token operator">=</span><span class="token string">&quot;172.31.7.101 172.31.7.102 172.31.7.103&quot;</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">ip</span> <span class="token keyword">in</span> <span class="token variable">\${NODE_IPS}</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> /usr/local/bin/etcdctl --write-out<span class="token operator">=</span>table endpoint status <span class="token parameter variable">--endpoints</span><span class="token operator">=</span>https://<span class="token variable">\${ip}</span>:2379 <span class="token parameter variable">--cacert</span><span class="token operator">=</span>/etc/kubernetes/ssl/ca.pem <span class="token parameter variable">--cert</span><span class="token operator">=</span>/etc/kubernetes/ssl/etcd.pem <span class="token parameter variable">--key</span><span class="token operator">=</span>/etc/kubernetes/ssl/etcd-key.pem<span class="token punctuation">;</span> <span class="token keyword">done</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="oGjHS"></a></p><h2 id="查看etcd数据信息" tabindex="-1"><a class="header-anchor" href="#查看etcd数据信息" aria-hidden="true">#</a> 查看etcd数据信息</h2><p>查看etcd集群中保存的数据 <a name="HBd80"></a></p><h3 id="_1-查看所有key" tabindex="-1"><a class="header-anchor" href="#_1-查看所有key" aria-hidden="true">#</a> 1.查看所有key</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> etcdctl get / <span class="token parameter variable">--prefix</span> --keys-only <span class="token comment">#以路径的方式所有key信息</span>

<span class="token comment">#pod信息</span>
<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> etcdctl get / <span class="token parameter variable">--prefix</span> --keys-only <span class="token operator">|</span> <span class="token function">grep</span>  pod

<span class="token comment">#namespace信息</span>
<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> etcdctl get / <span class="token parameter variable">--prefix</span> --keys-only <span class="token operator">|</span> <span class="token function">grep</span> namespaces

<span class="token comment">#控制器信息</span>
<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> etcdctl get / <span class="token parameter variable">--prefix</span> --keys-only <span class="token operator">|</span> <span class="token function">grep</span> deployment

<span class="token comment">#calico组件信息</span>
<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> etcdctl get / <span class="token parameter variable">--prefix</span> --keys-only <span class="token operator">|</span> <span class="token function">grep</span> calico

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="JbVo3"></a></p><h3 id="_2-查看指定key" tabindex="-1"><a class="header-anchor" href="#_2-查看指定key" aria-hidden="true">#</a> 2.查看指定key</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@etcd01:~<span class="token comment"># ETCDCTL_API=3 etcdctl get /calico/ipam/v2/assignment/ipv4/block/10.20.241.64-26</span>
/calico/ipam/v2/assignment/ipv4/block/10.20.241.64-26
<span class="token punctuation">{</span><span class="token string">&quot;cidr&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;10.20.241.64/26&quot;</span>,<span class="token string">&quot;affinity&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;host:master01&quot;</span>,<span class="token string">&quot;allocations&quot;</span>:<span class="token punctuation">[</span><span class="token number">0</span>,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null<span class="token punctuation">]</span>,<span class="token string">&quot;unallocated&quot;</span>:<span class="token punctuation">[</span><span class="token number">1,2</span>,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63<span class="token punctuation">]</span>,<span class="token string">&quot;attributes&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;handle_id&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;ipip-tunnel-addr-master01&quot;</span>,<span class="token string">&quot;secondary&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;node&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;master01&quot;</span>,<span class="token string">&quot;type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;ipipTunnelAddress&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">&quot;deleted&quot;</span>:false<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="nqwmr"></a></p><h3 id="_3-查看所有calico的数据" tabindex="-1"><a class="header-anchor" href="#_3-查看所有calico的数据" aria-hidden="true">#</a> 3.查看所有calico的数据</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@etcd01:~<span class="token comment"># ETCDCTL_API=3 etcdctl get /calico --keys-only --prefix | grep calico</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a name="z2OjX"></a></p><h3 id="etcd增删改查数据" tabindex="-1"><a class="header-anchor" href="#etcd增删改查数据" aria-hidden="true">#</a> etcd增删改查数据</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#添加数据</span>

root@etcd01:~<span class="token comment"># etcdctl put /name &quot;xin&quot;</span>

<span class="token comment">#查询数据</span>
root@etcd01:~<span class="token comment"># etcdctl get /name</span>
/name
xin

<span class="token comment">#直接覆盖就是更新数据</span>
root@etcd01:~<span class="token comment"># etcdctl get /name</span>
/name
xxx

<span class="token comment">#删除数据</span>
root@etcd01:~<span class="token comment"># etcdctl del /name</span>
<span class="token number">1</span>
root@etcd01:~<span class="token comment"># etcdctl get /name</span>

<span class="token comment">#删除pod</span>
root@etcd01:~<span class="token comment"># etcdctl del /registry/pods/default/net-test1</span>
<span class="token number">1</span>

root@master02:~<span class="token comment"># kubectl get pods -A |grep net-test1</span>
default                net-test1                                   <span class="token number">1</span>/1     Running   <span class="token number">0</span>             24h
root@master02:~<span class="token comment"># kubectl get pods -A |grep net-test1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="RnsDa"></a></p><h2 id="etcd数据watch机制" tabindex="-1"><a class="header-anchor" href="#etcd数据watch机制" aria-hidden="true">#</a> etcd数据watch机制</h2><p>基于不断监看数据，发生变化就主动触发通知客户端，Etcd v3 的watch机制支持watch某个固定的key，也支持watch一个范围。</p><p>在etcd node1上watch一个key ，在etcdnode2修改数据，验证etcdnode1是否能够发现数据变化</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@etcd02:~<span class="token comment"># etcdctl put /data/name xin123</span>
OK
root@etcd01:~<span class="token comment"># etcdctl watch /data/name </span>
PUT
/data/name
xin123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="dmxFs"></a></p><h2 id="etcd-数据手动备份与恢复" tabindex="-1"><a class="header-anchor" href="#etcd-数据手动备份与恢复" aria-hidden="true">#</a> etcd 数据手动备份与恢复<br><br></h2><p>WAL是<strong>write ahead log</strong>的缩写，顾名思义，也就是在执行真正的写操作之前先写一个日志，预写日志。<br><strong>wal</strong>: 存放预写式日志,最大的作用是记录了整个数据变化的全部历程。<br>在etcd中，所有数据的修改在提交前，都要先写入到WAL中。 <a name="tChBx"></a></p><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> <br></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#V3版本备份数据</span>
root@etcd01:~<span class="token comment"># ETCDCTL_API=3 etcdctl snapshot save etcd-xin-0105.db</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;info&quot;</span>,<span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2023-01-05T15:15:28.192+0800&quot;</span>,<span class="token string">&quot;caller&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;snapshot/v3_snapshot.go:65&quot;</span>,<span class="token string">&quot;msg&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;created temporary db file&quot;</span>,<span class="token string">&quot;path&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;etcd-xin-0105.db.part&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;info&quot;</span>,<span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2023-01-05T15:15:28.195+0800&quot;</span>,<span class="token string">&quot;logger&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;client&quot;</span>,<span class="token string">&quot;caller&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;v3/maintenance.go:211&quot;</span>,<span class="token string">&quot;msg&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;opened snapshot stream; downloading&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;info&quot;</span>,<span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2023-01-05T15:15:28.195+0800&quot;</span>,<span class="token string">&quot;caller&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;snapshot/v3_snapshot.go:73&quot;</span>,<span class="token string">&quot;msg&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;fetching snapshot&quot;</span>,<span class="token string">&quot;endpoint&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;127.0.0.1:2379&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;info&quot;</span>,<span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2023-01-05T15:15:28.227+0800&quot;</span>,<span class="token string">&quot;logger&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;client&quot;</span>,<span class="token string">&quot;caller&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;v3/maintenance.go:219&quot;</span>,<span class="token string">&quot;msg&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;completed snapshot read; closing&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;info&quot;</span>,<span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2023-01-05T15:15:28.245+0800&quot;</span>,<span class="token string">&quot;caller&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;snapshot/v3_snapshot.go:88&quot;</span>,<span class="token string">&quot;msg&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;fetched snapshot&quot;</span>,<span class="token string">&quot;endpoint&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;127.0.0.1:2379&quot;</span>,<span class="token string">&quot;size&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;3.0 MB&quot;</span>,<span class="token string">&quot;took&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;now&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&quot;level&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;info&quot;</span>,<span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;2023-01-05T15:15:28.245+0800&quot;</span>,<span class="token string">&quot;caller&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;snapshot/v3_snapshot.go:97&quot;</span>,<span class="token string">&quot;msg&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;saved&quot;</span>,<span class="token string">&quot;path&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;etcd-xin-0105.db&quot;</span><span class="token punctuation">}</span>
Snapshot saved at etcd-xin-0105.db

<span class="token comment">#V3版本数据恢复</span>
--data-dir 数据存储目录
root@etcd01:~<span class="token comment"># ETCDCTL_API=3 etcdctl snapshot restore etcd-xin-0105.db --data-dir=/tmp/etcd</span>

root@etcd01:~<span class="token comment"># mkdir /data/etcd-backup-dir/ -p</span>
root@etcd01:~<span class="token comment"># cat  script.sh </span>
<span class="token comment">#!/bin/bash</span>
<span class="token builtin class-name">source</span> /etc/profile
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +%Y-%m-%d_%H-%M-%S<span class="token variable">\`</span></span>
<span class="token assign-left variable">ETCDCTL_API</span><span class="token operator">=</span><span class="token number">3</span> /usr/local/bin/etcdctl  snapshot save  /data/etcd-backup-dir/etcd-snapshot-<span class="token variable">\${DATE}</span>.db

<span class="token number">0</span>  */12 * * * /bin/bash /root/etcd-backup.sh <span class="token operator">&amp;&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="Yzl4t"></a></p><h3 id="使用kubeasz-备份与恢复数据" tabindex="-1"><a class="header-anchor" href="#使用kubeasz-备份与恢复数据" aria-hidden="true">#</a> 使用kubeasz 备份与恢复数据</h3><p><strong>恢复数据期间master 节点 <strong>kube-apiserver/scheduler/controller-manager 服务</strong>不可用</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./ezctl backup k8s-01

kubectl delete pod net-test1

./ezctl restore k8s-01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="NFIJJ"></a></p><h3 id="etcd-数据恢复流程" tabindex="-1"><a class="header-anchor" href="#etcd-数据恢复流程" aria-hidden="true">#</a> ETCD 数据恢复流程</h3><p>当etcd集群宕机数量超过集群总节点数一半以上的时候(如总数为三台宕机两台)，就会导致整合集群宕机，后期需要重新恢复数据，则恢复流程如下:</p><ol><li>恢复服务器系统</li><li>重新部署ETCD集群</li><li>停止<code>kube-apiserver/controller-manager/scheduler/kubelet/kube-proxy</code></li><li>停止ETCD集群</li><li>各ETCD节点恢复同一份备份数据</li><li>启动各节点并验证ETCD集群</li><li>启动<code>kube-apiserver/controller-manager/scheduler/kubelet/kube-proxy</code></li><li>验证k8s master状态及pod数据</li></ol>`,50);function g(h,q){const a=p("ExternalLinkIcon");return l(),o("div",null,[r,s("p",null,[n("官方网站："),s("a",d,[n("https://etcd.io"),e(a)]),u,n("github地址: "),s("a",k,[n("https://github.com/etcd-io/etcd"),e(a)]),m,n("官方硬件推荐："),s("a",v,[n("https://etcd.io/docs/v3.4/op-guide/hardware/"),e(a)])]),b])}const _=t(c,[["render",g],["__file","kubernetes-2.html.vue"]]);export{_ as default};
