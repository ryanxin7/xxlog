export const data = JSON.parse("{\"key\":\"v-43436750\",\"path\":\"/zookeeper/log/zookeeper-01.html\",\"title\":\"zookeeper 基础与安装\",\"lang\":\"zh-CN\",\"frontmatter\":{\"Author\":\"Ryan\",\"title\":\"zookeeper 基础与安装\",\"tag\":[\"中间件\"],\"category\":[\"zookeeper\"],\"date\":\"2021-10-05T21:13:01.000Z\",\"description\":\"ZooKeeper 基础与安装 基础知识 开发框架 开发框架 ORM - 一台主机承载所有的业务应用 MVC - 多台主机分别承载业务应用的不同功能，通过简单的网络通信实现业务的正常访问 RPC - 应用业务拆分、多应用共用功能、核心业务功能 独立部署，基于远程过程调用技术(RPC)的分布式服 务框架 提高业务功能复用及项目的整合 SOA - 粗放型的RPC分布式实现了大量的资源浪费，提高机器利用率的 资源调度和治理中心(SOA) ，基于 现有资源的高效利用，进一步提高服务的能力 微服务 - 随着互联网的发展、各种技术的平台工具出现、编程语言的升级、开发规范的标准化等因素，中小 型企业也有了相应的能力来发展更轻量级的SOA模式。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/zookeeper/log/zookeeper-01.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Ryan's Notebook\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"zookeeper 基础与安装\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"ZooKeeper 基础与安装 基础知识 开发框架 开发框架 ORM - 一台主机承载所有的业务应用 MVC - 多台主机分别承载业务应用的不同功能，通过简单的网络通信实现业务的正常访问 RPC - 应用业务拆分、多应用共用功能、核心业务功能 独立部署，基于远程过程调用技术(RPC)的分布式服 务框架 提高业务功能复用及项目的整合 SOA - 粗放型的RPC分布式实现了大量的资源浪费，提高机器利用率的 资源调度和治理中心(SOA) ，基于 现有资源的高效利用，进一步提高服务的能力 微服务 - 随着互联网的发展、各种技术的平台工具出现、编程语言的升级、开发规范的标准化等因素，中小 型企业也有了相应的能力来发展更轻量级的SOA模式。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-05-02T00:25:35.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"中间件\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2021-10-05T21:13:01.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-05-02T00:25:35.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"zookeeper 基础与安装\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2021-10-05T21:13:01.000Z\\\",\\\"dateModified\\\":\\\"2023-05-02T00:25:35.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"基础知识\",\"slug\":\"基础知识\",\"link\":\"#基础知识\",\"children\":[{\"level\":3,\"title\":\"开发框架\",\"slug\":\"开发框架\",\"link\":\"#开发框架\",\"children\":[]},{\"level\":3,\"title\":\"分布式特性\",\"slug\":\"分布式特性\",\"link\":\"#分布式特性\",\"children\":[]},{\"level\":3,\"title\":\"一致性协议\",\"slug\":\"一致性协议\",\"link\":\"#一致性协议\",\"children\":[]}]},{\"level\":2,\"title\":\"ZooKeeper 简介\",\"slug\":\"zookeeper-简介\",\"link\":\"#zookeeper-简介\",\"children\":[{\"level\":3,\"title\":\"环境安装\",\"slug\":\"环境安装\",\"link\":\"#环境安装\",\"children\":[]},{\"level\":3,\"title\":\"Zookeeper 工作机制\",\"slug\":\"zookeeper-工作机制\",\"link\":\"#zookeeper-工作机制\",\"children\":[]},{\"level\":3,\"title\":\"特点\",\"slug\":\"特点\",\"link\":\"#特点\",\"children\":[]},{\"level\":3,\"title\":\"角色\",\"slug\":\"角色\",\"link\":\"#角色\",\"children\":[]},{\"level\":3,\"title\":\"ZAB协议\",\"slug\":\"zab协议\",\"link\":\"#zab协议\",\"children\":[]},{\"level\":3,\"title\":\"事务id\",\"slug\":\"事务id\",\"link\":\"#事务id\",\"children\":[]},{\"level\":3,\"title\":\"数据结构\",\"slug\":\"数据结构\",\"link\":\"#数据结构\",\"children\":[]},{\"level\":3,\"title\":\"节点类型解析\",\"slug\":\"节点类型解析\",\"link\":\"#节点类型解析\",\"children\":[]},{\"level\":3,\"title\":\"Stat 数据结构\",\"slug\":\"stat-数据结构\",\"link\":\"#stat-数据结构\",\"children\":[]},{\"level\":3,\"title\":\"节点实践\",\"slug\":\"节点实践\",\"link\":\"#节点实践\",\"children\":[]},{\"level\":3,\"title\":\"应用场景\",\"slug\":\"应用场景\",\"link\":\"#应用场景\",\"children\":[]},{\"level\":3,\"title\":\"Watcher 事件监听器\",\"slug\":\"watcher-事件监听器\",\"link\":\"#watcher-事件监听器\",\"children\":[]},{\"level\":3,\"title\":\"监听器实践\",\"slug\":\"监听器实践\",\"link\":\"#监听器实践\",\"children\":[]},{\"level\":3,\"title\":\"基础配置\",\"slug\":\"基础配置\",\"link\":\"#基础配置\",\"children\":[]},{\"level\":3,\"title\":\"集群配置\",\"slug\":\"集群配置\",\"link\":\"#集群配置\",\"children\":[]}]}],\"readingTime\":{\"minutes\":32.79,\"words\":9838},\"filePathRelative\":\"zookeeper/log/zookeeper-01.md\",\"localizedDate\":\"2021年10月6日\",\"excerpt\":\"<h1> ZooKeeper 基础与安装</h1>\\n<h2> 基础知识</h2>\\n<h3> 开发框架</h3>\\n<figure><img src=\\\"https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-Linux/elks/kfkj.jpg\\\" alt=\\\"开发框架\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption>开发框架</figcaption></figure>\\n<ul>\\n<li>\\n<p>ORM - 一台主机承载所有的业务应用</p>\\n</li>\\n<li>\\n<p>MVC - 多台主机分别承载业务应用的不同功能，通过简单的网络通信实现业务的正常访问</p>\\n</li>\\n<li>\\n<p>RPC - 应用业务拆分、多应用共用功能、核心业务功能 独立部署，基于远程过程调用技术(RPC)的分布式服</p>\\n</li>\\n<li>\\n<p>务框架 提高业务功能复用及项目的整合</p>\\n</li>\\n<li>\\n<p>SOA - 粗放型的RPC分布式实现了大量的资源浪费，提高机器利用率的 资源调度和治理中心(SOA) ，基于</p>\\n<p>现有资源的高效利用，进一步提高服务的能力</p>\\n</li>\\n<li>\\n<p>微服务 - 随着互联网的发展、各种技术的平台工具出现、编程语言的升级、开发规范的标准化等因素，中小</p>\\n<p>型企业也有了相应的能力来发展更轻量级的SOA模式。</p>\\n</li>\\n</ul>\",\"autoDesc\":true,\"git\":{\"createdTime\":1682987135000,\"updatedTime\":1682987135000,\"contributors\":[{\"name\":\"ryanxin7\",\"email\":\"xinxincn0506@outlook.com\",\"commits\":1}]}}")
