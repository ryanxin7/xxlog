export const data = JSON.parse("{\"key\":\"v-46ad188e\",\"path\":\"/zookeeper/log/zookeeper-03.html\",\"title\":\"zookeeper 服务器动态上下线监听案例\",\"lang\":\"zh-CN\",\"frontmatter\":{\"Author\":\"Ryan\",\"title\":\"zookeeper 服务器动态上下线监听案例\",\"tag\":[\"zookeeper\"],\"category\":[\"运维技术栈\"],\"date\":\"2021-10-07T21:13:01.000Z\",\"description\":\"服务器动态上下线监听案例 某分布式系统中，主节点可以有多台，可以动态上下线，任意一台客户端都能实时感知 到主节点服务器的上下线。 代码实现 服务端代码 package com.atguigu.zkcase1; import java.io.IOException; import org.apache.zookeeper.CreateMode; import org.apache.zookeeper.WatchedEvent; import org.apache.zookeeper.Watcher; import org.apache.zookeeper.ZooKeeper; import org.apache.zookeeper.ZooDefs.Ids; public class DistributeServer { private static String connectString = \\\"hadoop102:2181,hadoop103:2181,hadoop104:2181\\\"; private static int sessionTimeout = 2000; private ZooKeeper zk = null; private String parentNode = \\\"/servers\\\"; // 创建到 zk 的客户端连接 public void getConnect() throws IOException{ zk = new ZooKeeper(connectString, sessionTimeout, new Watcher() { @Override public void process(WatchedEvent event) { } }); } // 注册服务器 public void registServer(String hostname) throws Exception{ String create = zk.create(parentNode + \\\"/server\\\", hostname.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL); System.out.println(hostname +\\\" is online \\\"+ create); } // 业务功能 public void business(String hostname) throws Exception{ System.out.println(hostname + \\\" is working ...\\\"); Thread.sleep(Long.MAX_VALUE); } public static void main(String[] args) throws Exception { // 1 获取 zk 连接 DistributeServer server = new DistributeServer(); server.getConnect(); // 2 利用 zk 连接注册服务器信息 server.registServer(args[0]); // 3 启动业务功能 server.business(args[0]); } }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/zookeeper/log/zookeeper-03.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Ryan's Notebook\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"zookeeper 服务器动态上下线监听案例\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"服务器动态上下线监听案例 某分布式系统中，主节点可以有多台，可以动态上下线，任意一台客户端都能实时感知 到主节点服务器的上下线。 代码实现 服务端代码 package com.atguigu.zkcase1; import java.io.IOException; import org.apache.zookeeper.CreateMode; import org.apache.zookeeper.WatchedEvent; import org.apache.zookeeper.Watcher; import org.apache.zookeeper.ZooKeeper; import org.apache.zookeeper.ZooDefs.Ids; public class DistributeServer { private static String connectString = \\\"hadoop102:2181,hadoop103:2181,hadoop104:2181\\\"; private static int sessionTimeout = 2000; private ZooKeeper zk = null; private String parentNode = \\\"/servers\\\"; // 创建到 zk 的客户端连接 public void getConnect() throws IOException{ zk = new ZooKeeper(connectString, sessionTimeout, new Watcher() { @Override public void process(WatchedEvent event) { } }); } // 注册服务器 public void registServer(String hostname) throws Exception{ String create = zk.create(parentNode + \\\"/server\\\", hostname.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL); System.out.println(hostname +\\\" is online \\\"+ create); } // 业务功能 public void business(String hostname) throws Exception{ System.out.println(hostname + \\\" is working ...\\\"); Thread.sleep(Long.MAX_VALUE); } public static void main(String[] args) throws Exception { // 1 获取 zk 连接 DistributeServer server = new DistributeServer(); server.getConnect(); // 2 利用 zk 连接注册服务器信息 server.registServer(args[0]); // 3 启动业务功能 server.business(args[0]); } }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-05-02T00:25:35.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"zookeeper\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2021-10-07T21:13:01.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-05-02T00:25:35.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"zookeeper 服务器动态上下线监听案例\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2021-10-07T21:13:01.000Z\\\",\\\"dateModified\\\":\\\"2023-05-02T00:25:35.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"代码实现\",\"slug\":\"代码实现\",\"link\":\"#代码实现\",\"children\":[{\"level\":3,\"title\":\"服务端代码\",\"slug\":\"服务端代码\",\"link\":\"#服务端代码\",\"children\":[]},{\"level\":3,\"title\":\"客户端代码\",\"slug\":\"客户端代码\",\"link\":\"#客户端代码\",\"children\":[]}]}],\"readingTime\":{\"minutes\":1.71,\"words\":513},\"filePathRelative\":\"zookeeper/log/zookeeper-03.md\",\"localizedDate\":\"2021年10月8日\",\"excerpt\":\"<h1> 服务器动态上下线监听案例</h1>\\n<p>某分布式系统中，主节点可以有多台，可以动态上下线，任意一台客户端都能实时感知 到主节点服务器的上下线。</p>\\n<br>\\n<h2> <strong>代码实现</strong></h2>\\n<h3> 服务端代码</h3>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">package</span> <span class=\\\"token namespace\\\">com<span class=\\\"token punctuation\\\">.</span>atguigu<span class=\\\"token punctuation\\\">.</span>zkcase1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">java<span class=\\\"token punctuation\\\">.</span>io<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">IOException</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>zookeeper<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">CreateMode</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>zookeeper<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">WatchedEvent</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>zookeeper<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">Watcher</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>zookeeper<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">ZooKeeper</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token import\\\"><span class=\\\"token namespace\\\">org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>zookeeper<span class=\\\"token punctuation\\\">.</span></span><span class=\\\"token class-name\\\">ZooDefs</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">Ids</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">DistributeServer</span> <span class=\\\"token punctuation\\\">{</span>\\n <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token class-name\\\">String</span> connectString <span class=\\\"token operator\\\">=</span> \\n<span class=\\\"token string\\\">\\\"hadoop102:2181,hadoop103:2181,hadoop104:2181\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">int</span> sessionTimeout <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">;</span>\\n <span class=\\\"token keyword\\\">private</span> <span class=\\\"token class-name\\\">ZooKeeper</span> zk <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n <span class=\\\"token keyword\\\">private</span> <span class=\\\"token class-name\\\">String</span> parentNode <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"/servers\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 创建到 zk 的客户端连接</span>\\n <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">getConnect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">IOException</span><span class=\\\"token punctuation\\\">{</span>\\n\\n    zk <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ZooKeeper</span><span class=\\\"token punctuation\\\">(</span>connectString<span class=\\\"token punctuation\\\">,</span> sessionTimeout<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">new</span> \\n<span class=\\\"token class-name\\\">Watcher</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">process</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">WatchedEvent</span> event<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// 注册服务器</span>\\n <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">registServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span> hostname<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">Exception</span><span class=\\\"token punctuation\\\">{</span>\\n \\n    <span class=\\\"token class-name\\\">String</span> create <span class=\\\"token operator\\\">=</span> zk<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span>parentNode <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"/server\\\"</span><span class=\\\"token punctuation\\\">,</span> \\nhostname<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getBytes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token class-name\\\">Ids</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">OPEN_ACL_UNSAFE</span><span class=\\\"token punctuation\\\">,</span> \\n<span class=\\\"token class-name\\\">CreateMode</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">EPHEMERAL_SEQUENTIAL</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span>hostname <span class=\\\"token operator\\\">+</span><span class=\\\"token string\\\">\\\" is online \\\"</span><span class=\\\"token operator\\\">+</span> create<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// 业务功能</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">business</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span> hostname<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">Exception</span><span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token class-name\\\">System</span><span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span>hostname <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" is working ...\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n   \\n   <span class=\\\"token class-name\\\">Thread</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sleep</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">Long</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">MAX_VALUE</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">Exception</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n<span class=\\\"token comment\\\">// 1 获取 zk 连接</span>\\n    <span class=\\\"token class-name\\\">DistributeServer</span> server <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">DistributeServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    server<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getConnect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 2 利用 zk 连接注册服务器信息</span>\\n    server<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">registServer</span><span class=\\\"token punctuation\\\">(</span>args<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 3 启动业务功能</span>\\n    server<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">business</span><span class=\\\"token punctuation\\\">(</span>args<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true,\"git\":{\"createdTime\":1682987135000,\"updatedTime\":1682987135000,\"contributors\":[{\"name\":\"ryanxin7\",\"email\":\"xinxincn0506@outlook.com\",\"commits\":1}]}}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
