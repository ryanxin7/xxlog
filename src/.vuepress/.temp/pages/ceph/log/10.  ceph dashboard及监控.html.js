export const data = JSON.parse("{\"key\":\"v-2a2f3343\",\"path\":\"/ceph/log/10.%20%20ceph%20dashboard%E5%8F%8A%E7%9B%91%E6%8E%A7.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"Ceph dashboard是通过一个 web界面，对已经运行的ceph集群进行状态查看及功能配置等功能，早期ceph使用的是第三方的dashboard组件，如: **Calamari: **Calamari 对外提供了十分漂亮的Web管理和监控界面，以及一套改进的REST API接口(不同于Ceph自身的REST API)，在一定程度上简化了Ceph的管理，最初Calamari是作为 Inktank公司的Ceph企业级商业产品来销售，红帽2015年收购Inktank 后为了更好地推动Ceph的发展，对外宣布Calamari 开源https://github.com/ceph/calamari优点:\"},\"headers\":[{\"level\":2,\"title\":\"10.1 启用dashboard插件\",\"slug\":\"_10-1-启用dashboard插件\",\"link\":\"#_10-1-启用dashboard插件\",\"children\":[{\"level\":3,\"title\":\"10.1.2 启用dashboard模块\",\"slug\":\"_10-1-2-启用dashboard模块\",\"link\":\"#_10-1-2-启用dashboard模块\",\"children\":[]},{\"level\":3,\"title\":\"10.1.3 在mgr节点验证端口与进程\",\"slug\":\"_10-1-3-在mgr节点验证端口与进程\",\"link\":\"#_10-1-3-在mgr节点验证端口与进程\",\"children\":[]},{\"level\":3,\"title\":\"10.1.4 dashboard访问验证\",\"slug\":\"_10-1-4-dashboard访问验证\",\"link\":\"#_10-1-4-dashboard访问验证\",\"children\":[]},{\"level\":3,\"title\":\"10.1.5 设置dashboard账户及密码\",\"slug\":\"_10-1-5-设置dashboard账户及密码\",\"link\":\"#_10-1-5-设置dashboard账户及密码\",\"children\":[]},{\"level\":3,\"title\":\"10.1.7 dashboard SSL\",\"slug\":\"_10-1-7-dashboard-ssl\",\"link\":\"#_10-1-7-dashboard-ssl\",\"children\":[]}]},{\"level\":2,\"title\":\"10.2 通过prometheus监控ceph node节点\",\"slug\":\"_10-2-通过prometheus监控ceph-node节点\",\"link\":\"#_10-2-通过prometheus监控ceph-node节点\",\"children\":[{\"level\":3,\"title\":\"10.2.1 部署prometheus\",\"slug\":\"_10-2-1-部署prometheus\",\"link\":\"#_10-2-1-部署prometheus\",\"children\":[]},{\"level\":3,\"title\":\"10.2.2 访问prometheus\",\"slug\":\"_10-2-2-访问prometheus\",\"link\":\"#_10-2-2-访问prometheus\",\"children\":[]},{\"level\":3,\"title\":\"10.2.3 部署node_exporter\",\"slug\":\"_10-2-3-部署node-exporter\",\"link\":\"#_10-2-3-部署node-exporter\",\"children\":[]},{\"level\":3,\"title\":\"10.2.4 配置prometheus server数据并验证\",\"slug\":\"_10-2-4-配置prometheus-server数据并验证\",\"link\":\"#_10-2-4-配置prometheus-server数据并验证\",\"children\":[]}]},{\"level\":2,\"title\":\"10.3 通过prometheus监控ceph服务\",\"slug\":\"_10-3-通过prometheus监控ceph服务\",\"link\":\"#_10-3-通过prometheus监控ceph服务\",\"children\":[{\"level\":3,\"title\":\"10.3.1 启用 prometheus 监控模块\",\"slug\":\"_10-3-1-启用-prometheus-监控模块\",\"link\":\"#_10-3-1-启用-prometheus-监控模块\",\"children\":[]},{\"level\":3,\"title\":\"10.3.2 验证manager 数据\",\"slug\":\"_10-3-2-验证manager-数据\",\"link\":\"#_10-3-2-验证manager-数据\",\"children\":[]},{\"level\":3,\"title\":\"10.3.3 配置Prometheus 采集数据\",\"slug\":\"_10-3-3-配置prometheus-采集数据\",\"link\":\"#_10-3-3-配置prometheus-采集数据\",\"children\":[]},{\"level\":3,\"title\":\"10.3.4 验证数据\",\"slug\":\"_10-3-4-验证数据\",\"link\":\"#_10-3-4-验证数据\",\"children\":[]}]},{\"level\":2,\"title\":\"10.4 通过grafana显示监控数据\",\"slug\":\"_10-4-通过grafana显示监控数据\",\"link\":\"#_10-4-通过grafana显示监控数据\",\"children\":[{\"level\":3,\"title\":\"10.4.1 安装grafana\",\"slug\":\"_10-4-1-安装grafana\",\"link\":\"#_10-4-1-安装grafana\",\"children\":[]},{\"level\":3,\"title\":\"10.4.2 登陆 grafana\",\"slug\":\"_10-4-2-登陆-grafana\",\"link\":\"#_10-4-2-登陆-grafana\",\"children\":[]},{\"level\":3,\"title\":\"10.4.3 添加数据源\",\"slug\":\"_10-4-3-添加数据源\",\"link\":\"#_10-4-3-添加数据源\",\"children\":[]},{\"level\":3,\"title\":\"10.4.4 导入模板\",\"slug\":\"_10-4-4-导入模板\",\"link\":\"#_10-4-4-导入模板\",\"children\":[]}]}],\"readingTime\":{\"minutes\":8.62,\"words\":2587},\"filePathRelative\":\"ceph/log/10.  ceph dashboard及监控.md\",\"excerpt\":\"<p><strong>Ceph dashboard</strong>是通过一个 web界面，对已经运行的ceph集群进行状态查看及功能配置等功能，早期ceph使用的是第三方的dashboard组件，如:</p>\\n<p>**Calamari: **<br><strong>Calamari</strong> 对外提供了十分漂亮的Web管理和监控界面，以及一套改进的REST API接口(不同于Ceph自身的REST API)，在一定程度上简化了Ceph的管理，最初Calamari是作为 Inktank公司的Ceph企业级商业产品来销售，红帽2015年收购Inktank 后为了更好地推动Ceph的发展，对外宣布Calamari 开源<br><a href=\\\"https://github.com/ceph/calamari\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://github.com/ceph/calamari</a><br><strong>优点:</strong></p>\",\"autoDesc\":true,\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]}}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
