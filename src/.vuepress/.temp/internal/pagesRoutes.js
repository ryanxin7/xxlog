export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","t":"濼鑫的知识库","i":"home"},["/index.html","/README.md"]],
  ["v-2e3eac9e","/slides.html",{"e":"<!-- markdownlint-disable MD024 MD033 MD051 -->\n","y":"s","t":"Slide page","i":"slides"},["/slides","/slides.md"]],
  ["v-74bc627b","/about/",{"d":"2020-07-28T11:27:08.000Z","l":"2020年7月28日","e":"<br>\n<p><strong>2020</strong> 年毕业后为了“混口饭吃”便开启了运维开发的升级之路，在升级的过程中，我发现我很喜欢“<strong>折腾</strong>”🤔。</p>\n<p>发现了自己对技术的兴趣和热爱，也喜欢不断地尝试新的东西和探索未知的领域。</p>\n<p>在这之后，我也遇到了一些问题。由于我经常尝试新的东西，有时候会忘记之前的一些技术细节，导致下次用到时需要重新学习和探索。其次，在我想要向朋友证明自己的实力和能力的时候，但很难找到合适的证据😂。</p>\n<p>最后，我也想通过自己的技术水平找到一份好的工作。同时，我也希望能够与其他人交流和分享自己的经验和心得🙈。</p>","y":"a","t":"关于"},["/about/index.html","/about/README.md"]],
  ["v-1465b23c","/ceph/",{"d":"2023-01-01T12:12:22.000Z","l":"2023年1月1日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph 是一个开源的分布式存储系统，同时支持对象存储、块设备、文件系统。</strong><br>ceph 是一个对象(object)式存储系统，它把每一个待管理的数据流(文件等数据)切分为一到多个固定大小(默认 4 兆)的对象数据,，并以其为原子单元(原子是构成元素的最小单元)完成数据的读写。<br>对象数据的底层存储服务是由多个存储主机(host)组成的存储集群，该集群也被称之为<strong>RADOS(reliable automatic distributed obiect store</strong>)存储集群，即可靠的、自动化的、分布式的对象存储系统。<br><strong>librados</strong> 是 RADOS 存储集群的 API，支持 C/C++/JAVA/python/ruby/php/go等编程语言客户端</p>","y":"a","t":"Ceph"},["/ceph/index.html","/ceph/README.md"]],
  ["v-4a0dc89a","/haproxy/",{"g":["HAproxy"],"e":"<p><a name=\"rwDmz\"></a></p>\n<h2> 一、负载均衡简介 <br></h2>\n<p>负载均衡(Load Balance，简称LB)是一种服务或基于硬件设备等实现的高可用反向代理技术，负载均衡将特定的业务(web服务、网络流量等)分担给指定的一个或多个后端特定的服务器或设备，从而提高了公司业务的并发处理能力、保证了业务的高可用性、方便了业务后期的水平动态扩展 。</p>\n<p><a name=\"yfLnN\"></a></p>\n<h3> 1.1 为什么使用负载均衡 <br></h3>\n<ul>\n<li>Web服务器的动态水平扩展--&gt;对用户无感知</li>\n<li>增加业务并发访问及处理能力--&gt;解决单服务器瓶颈问题</li>\n<li>节约公网IP地址--&gt;降低IT支出成本</li>\n<li>隐藏内部服务器IP--&gt;提高内部服务器安全性</li>\n<li>配置简单--&gt;固定格式的配置文件</li>\n<li>功能丰富--&gt;支持四层和七层，支持动态下线主机</li>\n<li>性能较强--&gt;并发数万甚至数十万 <br> <br>\n<a name=\"EO2f2\"></a></li>\n</ul>","y":"a","t":"HAProxy","i":"fuzaijunheng"},["/haproxy/index.html","/haproxy/README.md"]],
  ["v-74465a84","/elk/",{"d":"2021-10-02T21:13:01.000Z","l":"2021年10月3日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集"],"u":2,"e":"<p>两三年前ELK还是一套日志分析平台的解决方案 ，它是由Elastic公司开发，管理和维护的三款开源产品Elasticsearch，Logstash和Kibana的首字母缩写，随着该套解决方案的软件生态逐渐壮大，其组件和功能也渐渐多了起来，尤其是Beats组件的引入，逐渐形成了这个系列的四大支柱，然后公司将这套解决方案重新命名为：Elastic Stack，最新版本7.X。</p>\n","y":"a","t":"ELK日志收集系统"},["/elk/index.html","/elk/README.md"]],
  ["v-dc384366","/redis/",{"d":"2020-08-01T21:11:31.000Z","l":"2020年8月2日","e":"<p>用户访问的过程中会产生各种各样的数据，为了让网站能够正常的运行，并且高效的让用户精准的看到相应的数据，我们就会在不同业务功能场景中采用各种各样的数据类型来进行承载。</p>\n","y":"a","t":"Redis"},["/redis/index.html","/redis/README.md"]],
  ["v-03082396","/statuspage/",{"c":["Guide"],"g":["disable"],"e":"<p>内容更新中。。。</p>\n","y":"a","t":"updating","i":"config","O":3},["/statuspage/index.html","/statuspage/README.md"]],
  ["v-b8d923aa","/xj/git.html",{"d":"2022-06-02T12:12:22.000Z","l":"2022年6月2日","c":["持续集成"],"g":["Git"],"n":true,"y":"a","t":"Git常用命令与常见问题"},["/xj/git","/xj/git.md"]],
  ["v-2d0acde4","/xj/",{"c":["Guide"],"g":["disable"],"n":true,"y":"a","t":"小记","i":"exercise","O":3},["/xj/index.html","/xj/README.md"]],
  ["v-2d0acf77","/xw/",{"e":"<h2> 12期英语应试技巧提升直播课</h2>\n<p>1.<a href=\"/xw/yd/\" target=\"blank\">阅读理解</a></p>\n<p><a href=\"/xw/yf/\" target=\"blank\">2.语法与结构</a></p>\n<p><a href=\"/xw/wx/\" target=\"blank\">3.完型填空</a></p>\n<p><a href=\"/xw/yyh/\" target=\"blank\">4.汉译英</a></p>\n<p><a href=\"/xw/xw/tc/\" target=\"blank\">5.挑错</a></p>\n<p><a href=\"/xw/yxh/\" target=\"blank\">6.英译汉</a></p>","y":"a","t":"知识点","i":"creative"},["/xw/index.html","/xw/README.md"]],
  ["v-303233fa","/zookeeper/zookeeper-02.html",{"d":"2021-10-06T22:13:01.000Z","l":"2021年10月7日","c":["zookeeper"],"g":["中间件"],"e":"<h1> 集群部署</h1>\n<p>Zookeeper为了更好的实现生产的业务场景，一般都会采用分布式的集群架构。集群通常由2n+1台Server节点组成，每个Server都知道彼此的存在。每个server都维护的内存状态镜像以及持久化存储的事务日志和快照。</p>\n<br>\n<p>对于2n+1台server，只要有&gt;=(n+1)台server节点可用，整个Zookeeper系统保持可用。</p>\n<p>为了维护集群内部所有主机信息的一致性，他们自己参考Paxos协议自己设计了一个更加轻量级的协议:Zab(Zookeeper Atomic Broadcast)来解决集群数据一致性的问题。</p>","y":"a","t":"zookeeper 集群部署"},["/zookeeper/zookeeper-02","/zookeeper/zookeeper-02.md"]],
  ["v-7ae5b7e8","/ceph/log/1.Ceph%E7%AE%80%E4%BB%8B.html",{"d":"2023-01-01T12:12:22.000Z","l":"2023年1月1日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph 是一个开源的分布式存储系统，同时支持对象存储、块设备、文件系统。</strong><br></p>\n<br>\n<p>ceph 是一个对象(object)式存储系统，它把每一个待管理的数据流(文件等数据)切分为一到多个固定大小(默认 4 兆)的对象数据,，并以其为原子单元(原子是构成元素的最小单元)完成数据的读写。<br></p>\n<br>\n<p>对象数据的底层存储服务是由多个存储主机(host)组成的存储集群，该集群也被称之为<strong>RADOS(reliable automatic distributed obiect store</strong>)存储集群，即可靠的、自动化的、分布式的对象存储系统。<br></p>","y":"a","t":"1.Ceph 简介"},["/ceph/log/1.Ceph简介.html","/ceph/log/1.Ceph%E7%AE%80%E4%BB%8B","/ceph/log/1.Ceph简介.md","/ceph/log/1.Ceph%E7%AE%80%E4%BB%8B.md"]],
  ["v-6620d428","/ceph/log/10.%20ceph-dashboard%E5%8F%8A%E7%9B%91%E6%8E%A7.html",{"d":"2023-01-11T12:12:22.000Z","l":"2023年1月11日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph dashboard</strong>是通过一个 web界面，对已经运行的ceph集群进行状态查看及功能配置等功能，早期ceph使用的是第三方的dashboard组件，如:</p>\n<p>**Calamari: **<br><strong>Calamari</strong> 对外提供了十分漂亮的Web管理和监控界面，以及一套改进的REST API接口(不同于Ceph自身的REST API)，在一定程度上简化了Ceph的管理，最初Calamari是作为 Inktank公司的Ceph企业级商业产品来销售，红帽2015年收购Inktank 后为了更好地推动Ceph的发展，对外宣布Calamari 开源<br><a href=\"https://github.com/ceph/calamari\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/ceph/calamari</a><br><strong>优点:</strong></p>","y":"a","t":"10.Ceph Dashboard及监控"},["/ceph/log/10. ceph-dashboard及监控.html","/ceph/log/10.%20ceph-dashboard%E5%8F%8A%E7%9B%91%E6%8E%A7","/ceph/log/10. ceph-dashboard及监控.md","/ceph/log/10.%20ceph-dashboard%E5%8F%8A%E7%9B%91%E6%8E%A7.md"]],
  ["v-f56deeac","/ceph/log/3.Ceph-FS%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8.html",{"d":"2023-01-02T12:12:22.000Z","l":"2023年1月2日","c":["Ceph"],"g":["分布式存储"],"e":"<p><a href=\"https://docs.ceph.com/en/latest/cephfs/\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.ceph.com/en/latest/cephfs/</a><br><a href=\"https://docs.ceph.com/en/latest/cephfs/\" target=\"_blank\" rel=\"noopener noreferrer\">链接</a></p>\n<blockquote>\n<p>Ceph FS即<strong>Ceph Filesy Stem</strong>,可以实现文件系统共享功能,客户端通过ceph协议挂载并使用ceph集群作为数据存储服务器。</p>\n</blockquote>","y":"a","t":"3.Ceph-FS 文件存储"},["/ceph/log/3.Ceph-FS文件存储.html","/ceph/log/3.Ceph-FS%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8","/ceph/log/3.Ceph-FS文件存储.md","/ceph/log/3.Ceph-FS%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8.md"]],
  ["v-3d902164","/ceph/log/4.Ceph%E9%9B%86%E7%BE%A4%E7%BB%B4%E6%8A%A4.html",{"d":"2023-01-03T12:12:22.000Z","l":"2023年1月3日","c":["Ceph"],"g":["分布式存储"],"e":"<p>ceph集群配置、部署与运维<br><a href=\"http://docs.ceph.org.cn/rados/\" target=\"_blank\" rel=\"noopener noreferrer\">http://docs.ceph.org.cn/rados/</a></p>\n<h2> 4.1:通过套接字进行单机管理</h2>\n<p>每个node节点上都有不同数量的OSD数量</p>\n<p>启动osd进程会在 /var/run/ceph下生成soke文件</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">ls</span> /var/run/ceph\nceph-osd.0.asok<span class=\"token operator\">=</span>\nceph-osd.1.asok<span class=\"token operator\">=</span>\nceph-osd.2.asok<span class=\"token operator\">=</span>\nceph-osd.3.asok<span class=\"token operator\">=</span>\nceph-osd.4.asok<span class=\"token operator\">=</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"4.Ceph 集群维护"},["/ceph/log/4.Ceph集群维护.html","/ceph/log/4.Ceph%E9%9B%86%E7%BE%A4%E7%BB%B4%E6%8A%A4","/ceph/log/4.Ceph集群维护.md","/ceph/log/4.Ceph%E9%9B%86%E7%BE%A4%E7%BB%B4%E6%8A%A4.md"]],
  ["v-080856db","/ceph/log/5.%20CephX%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6.html",{"d":"2023-01-04T12:12:22.000Z","l":"2023年1月4日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph使用cephx协议对客户端进行身份认证</strong><br>cephx用于对ceph保存的数据进行认证访问和授权，用于对访问ceph的请求进行认证和授权检测，与mon通信的请求都要经过ceph认证通过，但是也可以在mon节点关闭cephx认证，但是关闭认证之后任何访问都将被允许，因此无法保证数据的安全性,</p>\n<h3> 5.1 授权流程</h3>\n<p>每个mon节点都可以对客户端进行身份认证并分发秘钥，因此多个mon节点就不存在单点故障和认证性能瓶颈。<br>mon节点会返回用于身份认证的数据结构，其中包含获取ceph服务时用到的<strong>session key</strong>,<br><strong>session key</strong>通过客户端秘钥进行加密，秘钥是在客户端提前配置好的，<br><code>/etc/ceph/ceph.client.admin.keyring</code></p>","y":"a","t":"5.CephX 认证机制"},["/ceph/log/5. CephX认证机制.html","/ceph/log/5.%20CephX%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6","/ceph/log/5. CephX认证机制.md","/ceph/log/5.%20CephX%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6.md"]],
  ["v-67455c97","/ceph/log/6.%20Ceph-RBD%E4%BD%BF%E7%94%A8.html",{"d":"2023-01-05T12:12:22.000Z","l":"2023年1月5日","c":["Ceph"],"g":["分布式存储"],"e":"<h2> 6.1 RBD架构图</h2>\n<p>Ceph可以同时提供对象存储<strong>RADOSGW</strong> 、<strong>块存储RBD</strong>、<strong>文件系统存储Ceph FS</strong><br>RBD即<strong>RADOS Block Device</strong>的简称，RIBD 块存储是常用的存储类型之一，RBD块设备类似磁盘可以被挂载，RBD 块设备具有快照、多副本、克隆和一致性等特性，数据以条带化的方式存储在Ceph集群的多个OSD中，<br><strong>条带化技术</strong>就是一种自动的将1/0 的负载均衡到多个物理磁盘上的技术，条带化技术就是将一块连续的数据分成很多小部分并把他们分别存储到不同磁盘上去.这就能使多个进程同时访问数据的多个不同部分而不会造成磁盘冲突，而且在需要对这种数据进行顺序访问的时候可以获得最大程度上的/O并行能力，从而获得非常好的性能。</p>","y":"a","t":"6.Ceph RBD"},["/ceph/log/6. Ceph-RBD使用.html","/ceph/log/6.%20Ceph-RBD%E4%BD%BF%E7%94%A8","/ceph/log/6. Ceph-RBD使用.md","/ceph/log/6.%20Ceph-RBD%E4%BD%BF%E7%94%A8.md"]],
  ["v-1900f781","/ceph/log/7.%20Ceph-FS%E4%BD%BF%E7%94%A8.html",{"d":"2023-01-06T12:12:22.000Z","l":"2023年1月6日","c":["Ceph"],"g":["分布式存储"],"e":"<p>ceph FS即<strong>ceph filesystem</strong>，<strong>可以实现文件系统共享功能</strong>，客户端通过ceph协议挂载并使用ceph集群作为数据存储服务器。 （类似NFS）</p>\n<p><strong>Ceph FS需要运行Meta Data Services(MDS)服务</strong>，其守护进程为<strong>ceph-mds</strong>, <strong>ceph-mds</strong><br>进程管理与Ceph FS上存储的文件相关的元数据，并协调对ceph存储集群的访问。<br><a href=\"http://docs.ceph.org.cn/cephfs/\" target=\"_blank\" rel=\"noopener noreferrer\">http://docs.ceph.org.cn/cephfs/</a><br><strong>Ceph FS</strong>的元数据使用的动态子树分区,把元数据划分名称空间对应到不同的mds,写入元数据的时候将元数据按照名称保存到不同主mds上，有点类似于nginx中的缓存目录分层一样。但是最终元数据都会保存在ceph 元数据池中。</p>","y":"a","t":"7.Ceph FS"},["/ceph/log/7. Ceph-FS使用.html","/ceph/log/7.%20Ceph-FS%E4%BD%BF%E7%94%A8","/ceph/log/7. Ceph-FS使用.md","/ceph/log/7.%20Ceph-FS%E4%BD%BF%E7%94%A8.md"]],
  ["v-62950d28","/ceph/log/8.%20%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%BD%91%E5%85%B3RGW.html",{"d":"2023-01-07T12:12:22.000Z","l":"2023年1月7日","c":["Ceph"],"g":["分布式存储"],"e":"<p>Ceph中独立的服务如果不用可以不启用。 类似阿里云OSS对象存储。遵循亚马逊S3标准数据存在bucket中</p>\n<p>官方文档：<code>http:/docs.ceph.org.cn/radosgw/</code><br>数据不需要放置在目录层次结构中，而是存在于平面地址空间内的同一级别，<br>应用通过唯一地址来识别每个单独数据对象。访问的时候传递的URL是固定的。<br>每个对象可包含有助于检索的元数据通过<strong>RESTful API</strong>在应用级别(而非用户级别)进行访问</p>\n<figure><img src=\"http://cdn1.ryanxin.live/xxlog/1670115995731-8365768d-7000-4b53-bb69-720c439963c1.png\" alt=\"image.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>image.png</figcaption></figure>","y":"a","t":"8.RGW对象存储网关"},["/ceph/log/8. 对象存储网关RGW.html","/ceph/log/8.%20%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%BD%91%E5%85%B3RGW","/ceph/log/8. 对象存储网关RGW.md","/ceph/log/8.%20%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%BD%91%E5%85%B3RGW.md"]],
  ["v-070e3d0e","/ceph/log/9.%20ceph-crush%E8%BF%9B%E9%98%B6.html",{"d":"2023-01-07T12:12:22.000Z","l":"2023年1月7日","c":["Ceph"],"g":["分布式存储"],"e":"<p>场景：集群内有固态和机械硬盘 如何让不重要的业务放到机械盘。 <br><img src=\"http://cdn1.ryanxin.live/xxlog/1670239925327-b0a6d81f-d49f-457f-ab71-329245a2c645.png\" alt=\"image.png\" loading=\"lazy\"></p>\n<p><strong>Ceph 集群中由 mon 服务器维护的的五种运行图</strong>:</p>\n<ul>\n<li>Monitor map  监视器运行图</li>\n<li>OSD map  OSD运行图   各个每隔6s汇报状态同时监控其他OSD的状态，超过20秒就会被踢出去</li>\n<li>PG map  PG运行图   （一个存储池有哪些pg）</li>\n<li>Crush map  (Controllers replication under scalable hashing)  可控的、可复制的、可伸缩的一致性hash算法。crush运行图，当新建存储池时会基于OSD map创建出新的PG组合列表用于存储数据</li>\n<li>MDS map  cephfs metadata运行图</li>\n</ul>","y":"a","t":"9.Ceph crush算法进阶"},["/ceph/log/9. ceph-crush进阶.html","/ceph/log/9.%20ceph-crush%E8%BF%9B%E9%98%B6","/ceph/log/9. ceph-crush进阶.md","/ceph/log/9.%20ceph-crush%E8%BF%9B%E9%98%B6.md"]],
  ["v-1715ae3e","/haproxy/log/Haproxy-1.html",{"d":"2023-02-04T12:12:22.000Z","l":"2023年2月4日","e":"<h2> 三、HAProxy安装及基础配置</h2>\n<p>介绍HAProxy的基础安装及基础配置</p>\n<p><a name=\"lz77Z\"></a></p>\n<h3> 3.1 源码包安装</h3>\n<p>官方提供了Ubuntu和Debian的包，没有Centos的包<br><img src=\"http://cdn1.ryanxin.live/1675997727329-efbe55ed-cb1e-4446-b7d2-40fd13d1031b.png\" alt=\"\" loading=\"lazy\"></p>\n<hr>\n<figure><img src=\"http://cdn1.ryanxin.live/xxlog/1675997822880-a7a98a7a-9d66-4040-902e-4575f17bcaf5.png\" alt=\"image.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>image.png</figcaption></figure>","y":"a","t":"1.HAProxy-安装及基础配置"},["/haproxy/log/Haproxy-1","/haproxy/log/Haproxy-1.md"]],
  ["v-18ca86dd","/haproxy/log/Haproxy-2.html",{"d":"2023-02-05T12:12:22.000Z","l":"2023年2月5日","e":"<h2> 四、基础配置详解</h2>\n<p>官方文档：<a href=\"http://cbonte.github.io/haproxy-dconv/2.6/configuration.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://cbonte.github.io/haproxy-dconv/2.6/configuration.html</a></p>\n<p>HAProxy 的配置文件<strong>haproxy.cfg</strong>由两大部分组成，分别是<strong>global</strong>和<strong>proxies</strong>部分</p>","y":"a","t":"2.HAProxy-基础配置详解"},["/haproxy/log/Haproxy-2","/haproxy/log/Haproxy-2.md"]],
  ["v-1a7f5f7c","/haproxy/log/Haproxy-3.html",{"d":"2023-02-06T12:12:22.000Z","l":"2023年2月6日","e":"<h2> 五、HAProxy调度算法</h2>\n<p>HAProxy通过固定参数  **balance ** 指明对后端服务器的调度算法，该参数可以配置在listen或backend选项中。  <br> HAProxy的调度算法分为静态和动态调度算法，但是有些算法可以根据参数在静态和动态算法中相互转换。</p>\n<p>官方文档：<a href=\"http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#balance\" target=\"_blank\" rel=\"noopener noreferrer\">http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#balance</a></p>","y":"a","t":"3.HAProxy-调度算法"},["/haproxy/log/Haproxy-3","/haproxy/log/Haproxy-3.md"]],
  ["v-1c34381b","/haproxy/log/Haproxy-4.html",{"d":"2023-02-07T12:12:22.000Z","l":"2023年2月7日","e":"<p><a name=\"PyKn5\"></a></p>\n<h2> 六、HAProxy https实现</h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token comment\">#配置HAProxy支持https协议，支持ssl会话；</span>\n<span class=\"token builtin class-name\">bind</span> *:443 ssl crt /<span class=\"token environment constant\">PATH</span>/TO/SOME_PEM_FILE   \n\n<span class=\"token comment\">#crt 后证书文件为PEM格式，且同时包含证书和所有私钥   </span>\n <span class=\"token function\">cat</span>  demo.crt demo.key <span class=\"token operator\">&gt;</span> demo.pem \n\n<span class=\"token comment\">#把80端口的请求重向定443</span>\n<span class=\"token builtin class-name\">bind</span> *:80\nredirect scheme https <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">{</span> ssl_fc <span class=\"token punctuation\">}</span>    \n\n<span class=\"token comment\">#向后端传递用户请求的协议和端口（frontend或backend）</span>\nhttp_request set-header X-Forwarded-Port %<span class=\"token punctuation\">[</span>dst_port<span class=\"token punctuation\">]</span>\nhttp_request add-header X-Forwared-Proto https <span class=\"token keyword\">if</span> <span class=\"token punctuation\">{</span> ssl_fc <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"4.HAProxy-https实现"},["/haproxy/log/Haproxy-4","/haproxy/log/Haproxy-4.md"]],
  ["v-3d00cf9e","/haproxy/log/",{"g":["HAproxy"],"e":"<p><a name=\"rwDmz\"></a></p>\n<h2> 一、负载均衡简介 <br></h2>\n<p>负载均衡(Load Balance，简称LB)是一种服务或基于硬件设备等实现的高可用反向代理技术，负载均衡将特定的业务(web服务、网络流量等)分担给指定的一个或多个后端特定的服务器或设备，从而提高了公司业务的并发处理能力、保证了业务的高可用性、方便了业务后期的水平动态扩展 。</p>\n<p><a name=\"yfLnN\"></a></p>\n<h3> 1.1 为什么使用负载均衡 <br></h3>\n<ul>\n<li>Web服务器的动态水平扩展--&gt;对用户无感知</li>\n<li>增加业务并发访问及处理能力--&gt;解决单服务器瓶颈问题</li>\n<li>节约公网IP地址--&gt;降低IT支出成本</li>\n<li>隐藏内部服务器IP--&gt;提高内部服务器安全性</li>\n<li>配置简单--&gt;固定格式的配置文件</li>\n<li>功能丰富--&gt;支持四层和七层，支持动态下线主机</li>\n<li>性能较强--&gt;并发数万甚至数十万 <br> <br>\n<a name=\"EO2f2\"></a></li>\n</ul>","y":"a","t":"简介"},["/haproxy/log/index.html","/haproxy/log/README.md"]],
  ["v-699a12d4","/elk/log/elk-Elasticsearch.html",{"d":"2021-10-02T21:13:01.000Z","l":"2021年10月3日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集"],"u":2,"e":"<p>两三年前ELK还是一套日志分析平台的解决方案 ，它是由Elastic公司开发，管理和维护的三款开源产品Elasticsearch，Logstash和Kibana的首字母缩写，随着该套解决方案的软件生态逐渐壮大，其组件和功能也渐渐多了起来，尤其是Beats组件的引入，逐渐形成了这个系列的四大支柱，然后公司将这套解决方案重新命名为：Elastic Stack，最新版本7.X。</p>\n","y":"a","t":"ELK-Elasticsearch"},["/elk/log/elk-Elasticsearch","/elk/log/elk-Elasticsearch.md"]],
  ["v-190de184","/elk/log/elk-experiment.html",{"d":"2021-10-06T20:11:56.000Z","l":"2021年10月7日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集"],"e":"<h1> ELK 综合实践</h1>\n<h2> 实践案例</h2>\n<p>项目实现效果图</p>\n<figure><img src=\"https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-Linux/elks/image-20211116154018274.png\" alt=\"image-20211116154018274\" tabindex=\"0\" loading=\"lazy\"><figcaption>image-20211116154018274</figcaption></figure>\n<br>\n<h3> 需求简介</h3>","y":"a","t":"ELK-experiment"},["/elk/log/elk-experiment","/elk/log/elk-experiment.md"]],
  ["v-6c6a3d4f","/elk/log/elk-Filebeat.html",{"d":"2021-10-06T21:13:24.000Z","l":"2021年10月7日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集"],"e":"<p><strong>轻量型数据采集器</strong> Beats 是一个免费且开放的平台，集合了多种单一用途数据采集器。它们从成百上千或成千上万台机器和系统向 Logstash 或 Elasticsearch 发送数据。Beats 是数据采集的得力工具。将 Beats 和您的容器一起置于服务器上，或者将 Beats 作为功能加以部署，然后便可在 Elasticsearch 中集中处理数据。Beats 能够采集符合 <a href=\"https://www.elastic.co/guide/en/ecs/current/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">Elastic Common Schema (ECS)</a> 要求的数据，如果您希望拥有更加强大的处理能力，Beats 能够将数据转发至 Logstash 进行转换和解析。</p>\n","y":"a","t":"ELK-beats"},["/elk/log/elk-Filebeat","/elk/log/elk-Filebeat.md"]],
  ["v-1205ce9e","/elk/log/elk-Kibana.html",{"d":"2021-10-05T21:11:31.000Z","l":"2021年10月6日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集"],"e":"<p><strong>一张图片胜过千万行日志</strong>，Kibana 让您能够自由地选择如何呈现自己的数据。Kibana 是一个免费且开放的用户界面，能够让您对 Elasticsearch 数据进行可视化，并让您在 Elastic Stack 中进行导航。您可以进行各种操作，从跟踪查询负载，到理解请求如何流经您的整个应用，都能轻松完成。</p>\n","y":"a","t":"ELK-Kibana"},["/elk/log/elk-Kibana","/elk/log/elk-Kibana.md"]],
  ["v-32d63760","/elk/log/elk-logstash.html",{"d":"2021-10-03T21:15:34.000Z","l":"2021年10月4日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集"],"e":"<p><strong>Logstash</strong> 能够动态地采集、转换和传输数据，不受格式或复杂度的影响。Logstash 采用可插拔框架，拥有 200 多个插件。您可以将不同的输入选择、过滤器和输出选择混合搭配、精心安排，让它们在管道中和谐地运行。利用 Grok 从非结构化数据中派生出结构，从 IP 地址解码出地理坐标，匿名化或排除敏感字段，并简化整体处理过程。Logstash 提供<a href=\"https://www.elastic.co/guide/en/logstash/current/output-plugins.html\" target=\"_blank\" rel=\"noopener noreferrer\">众多输出选择</a>，您可以将数据发送到您要指定的地方，并且能够灵活地解锁众多下游用例。</p>\n","y":"a","t":"ELK-Logstash"},["/elk/log/elk-logstash","/elk/log/elk-logstash.md"]],
  ["v-3d6c55f4","/elk/log/elk-practice.html",{"d":"2021-10-19T15:13:02.000Z","l":"2021年10月19日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集","等保2.0"],"e":"<p>在等保2.0 测评单位对业务系统进行评测后，给出整改意见中提出：</p>\n<p>应启用安全审计功能，审计覆盖到每个用户，对重要的用户行为和重要安全事件进行审计；建议对启用安全审计功能，对所有用户操作行为及系统安全事件进行审计记录。</p>\n<p>应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等。建议定期对审计记录进行备份，保证审计记录不会受到未预期的删除、修改或覆盖。</p>\n","y":"a","t":"等保2.0项目-日志收集实践"},["/elk/log/elk-practice","/elk/log/elk-practice.md"]],
  ["v-691c70df","/elk/log/Grok-patterns.html",{"d":"2021-10-21T15:13:02.000Z","l":"2021年10月21日","c":["ElasticStack"],"g":["Ubuntu","运维实战","日志收集"],"e":"<p>一般系统或服务生成的日志都是一大长串。每个字段之间用空格隔开。logstash在获取日志是整个一串获取，如果把日志中每个字段代表的意思分割开来在传给elasticsearch。这样呈现出来的数据更加清晰，而且也能让kibana更方便的绘制图形。</p>\n<p>Grok 是 Logstash 最重要的插件。它的主要作用就是将文本格式的字符串，转换成为具体的结构化的数据，配合正则表达式使用。</p>\n","y":"a","t":"日志处理-Grok正则捕获"},["/elk/log/Grok-patterns","/elk/log/Grok-patterns.md"]],
  ["v-0489d04a","/elk/log/h3c-mirroring-port.html",{"d":"2021-09-29T19:24:11.000Z","l":"2021年9月30日","c":["运维技术栈"],"g":["运维实战","h3c"],"e":"<h1> 核心交换机数据引流</h1>\n<h3> 镜像源</h3>\n<p>镜像源是指被监控的对象，该对象可以是端口或单板上的 CPU，我们将之依次称为源端口和源 CPU。 经由被监控的对象收发的报文会被复制一份到与数据监测设备相连的端口，用户就可以对这些报文 （称为镜像报文）进行监控和分析了。镜像源所在的设备就称为源设备。</p>\n<br>\n<h3> 镜像目的</h3>\n<p>镜像目的是指镜像报文所要到达的目的地，即与数据监测设备相连的那个端口，我们称之为目的端口，目的端口所在的设备就称为目的设备。目的端口会将镜像报文转发给与之相连的数据监测设备。 由于一个目的端口可以同时监控多个镜像源，因此在某些组网环境下，目的端口可能收到对同一报 文的多份拷贝。例如，目的端口 Port 1 同时监控同一台设备上的源端口 Port 2 和 Port 3 收发的报文， 如果某报文从 Port 2 进入该设备后又从 Port 3 发送出去，那么该报文将被复制两次给 Port 1。</p>","y":"a","t":"核心交换机数据引流"},["/elk/log/h3c-mirroring-port","/elk/log/h3c-mirroring-port.md"]],
  ["v-55c04c62","/k8s/log/kubernetes-1.html",{"d":"2022-06-01T12:12:22.000Z","l":"2022年6月1日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a href=\"https://www.yuque.com/attachments/yuque/0/2023/pdf/33538388/1672721011349-4455b094-61ee-4956-a375-07ad6fc387a1.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">k8s-实战案例_v1.21.x-部署.pdf</a></p>\n<p><a name=\"lXlPc\"></a></p>\n<h2> 1.基础环境配置</h2>\n<p><a name=\"jRBYX\"></a></p>\n<h3> 1.1 时间同步</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n\n<span class=\"token function\">cat</span> /etc/default/locale\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>en_US.UTF-8\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">LC_TIME</span></span><span class=\"token operator\">=</span>en_DK.UTF-8 \n\n\n*/5 * * * * /usr/sbin/ntpdate time1.aliyun.com <span class=\"token operator\">&amp;&gt;</span> /dev/null <span class=\"token operator\">&amp;&amp;</span> hwclock -w/usr/sbin/ntpdate\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"1.kubernetes 二进制部署"},["/k8s/log/kubernetes-1","/k8s/log/kubernetes-1.md"]],
  ["v-627c4440","/k8s/log/kubernetes-10.html",{"d":"2022-06-10T12:12:22.000Z","l":"2022年6月10日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a href=\"https://cn.wordpress.org/download/releases/\" target=\"_blank\" rel=\"noopener noreferrer\">https://cn.wordpress.org/download/releases/</a></p>\n<p><a name=\"m05Oo\"></a></p>\n<h2> 1.准备PHP镜像</h2>\n<p><a name=\"q3lxf\"></a></p>\n<h3> 官方PHP镜像</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code>root@harbor01<span class=\"token punctuation\">[</span>09:20:39<span class=\"token punctuation\">]</span>/dockerfile/web/wordpress <span class=\"token comment\">#:docker pull php:5.6.40-fpm</span>\n\nroot@harbor01<span class=\"token punctuation\">[</span>09:21:35<span class=\"token punctuation\">]</span>/dockerfile/web/wordpress <span class=\"token comment\">#:docker tag php:5.6.40-fpm harbor.ceamg.com/baseimages/php-fpm:5.6.40</span>\nroot@harbor01<span class=\"token punctuation\">[</span>09:23:12<span class=\"token punctuation\">]</span>/dockerfile/web/wordpress <span class=\"token comment\">#:docker push harbor.ceamg.com/baseimages/php-fpm:5.6.40</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"10.实战案例-WordPress"},["/k8s/log/kubernetes-10","/k8s/log/kubernetes-10.md"]],
  ["v-64311cdf","/k8s/log/kubernetes-11.html",{"d":"2022-06-11T12:12:22.000Z","l":"2022年6月11日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p>Apache Dubbo 最初在 2008 年由 Alibaba 捐献开源，很快成为了国内开源服务框架选型的事实标准框架 ，得到了各行各业的广泛应用。在 2017 年，Dubbo 正式捐献到 Apache 软件基金会并成为 Apache 顶级项目 。</p>\n<p>Apache Dubbo 是一款 RPC 服务开发框架，用于解决微服务架构下的服务治理与通信问题，官方提供了 Java、Golang 等多语言 SDK 实现。使用 Dubbo 开发的微服务原生具备相互之间的远程地址发现与通信能力， 利用 Dubbo 提供的丰富服务治理特性，可以实现诸如服务发现、负载均衡、流量调度等服务治理诉求。Dubbo 被设计为高度可扩展，用户可以方便的实现流量拦截、选址的各种定制逻辑。</p>","y":"a","t":"11.实战案例-基于zookeeper实现微服务动态注册和发现"},["/k8s/log/kubernetes-11","/k8s/log/kubernetes-11.md"]],
  ["v-65e5f57e","/k8s/log/kubernetes-12.html",{"d":"2022-06-12T12:12:22.000Z","l":"2022年6月12日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"qARQK\"></a></p>\n<h2> Ingress和Ingress控制器介绍</h2>\n<p>在k8s中将一个服务暴露出去通常会使用NodePort或LoadBalancer类型的Service，但随着服务数量的增多，使用NodePort会存在一些问题，可用作NodePort的端口是一个有限的范围，不容易记忆，不好管理。另外， 如果在公有云使用LoadBalancer类型的Service上会产生额外的成本。</p>\n<p>所以k8s提供了另一种方式，使用Ingress和Ingress控制器来对外暴露服务，Ingress控制器作为统一的流量入口，管理内部各种必要的服务，并通过Ingress资源来描述如何区分流量及内部的路由逻辑。有了Ingress和Ingress控制器，就可以通过定义路由流量的规则来实现服务发布，而无需创建NodePort或LoadBalancer类型的Service，并且流量也会由Ingress控制器直达Pod，不需要再由Service转发。</p>","y":"a","t":"12.ingress 实现基于域名的多虚拟主机,URL转发及多域名HTTPS实现案例"},["/k8s/log/kubernetes-12","/k8s/log/kubernetes-12.md"]],
  ["v-679ace1d","/k8s/log/kubernetes-13.html",{"d":"2022-06-13T12:12:22.000Z","l":"2022年6月13日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"aiJuT\"></a></p>\n<h2> 1.HPA简介</h2>\n<p>HPA（Horizontal Pod Autoscaler），Pod水平自动缩放器，可以根据Pod的负载动态调整Pod的副本数量，业务高峰期自动扩容Pod副本以满足业务请求。在业务低峰期自动缩容Pod，实现节约资源的目的。</p>\n<p>与HPA相对的是VPA （Vertical Pod Autoscaler），Pod垂直自动缩放器，可以基于Pod的资源利用率，调整对单个Pod的最大资源限制，不能与HPA同时使用。</p>\n<p>HPA隶属于autoscaling API群组目前主要有v1和v2两个版本：</p>","y":"a","t":"13.HPA自动伸缩pod数量"},["/k8s/log/kubernetes-13","/k8s/log/kubernetes-13.md"]],
  ["v-694fa6bc","/k8s/log/kubernetes-14.html",{"d":"2022-06-14T12:12:22.000Z","l":"2022年6月14日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<h2> 1.发布方式解读</h2>\n<h3> 1.1 金丝雀发布</h3>\n<p>金丝雀发布这个术语源自20世纪初期，当时英国的煤矿工人在下井采矿之前，会把笼养的金丝雀携带到矿井中，如果矿井中一氧化碳等有毒气体的浓度过高，在影响矿工之前，金丝雀相比人类表现的更加敏感快速，金丝雀中毒之后，煤矿工人就知道该立刻撤离。<br>金丝雀发布是在将整个软件的新版本发布给所有用户之前，先发布给部分用户，用真实的客户流量来测试，以保证软件不会出现严重问题，降低发布风险。</p>\n<p>在实践中，金丝雀发布一般会先发布到一个小比例的机器，比如 2% 的服务器做流量验证，然后从中快速获得反馈，根据反馈决定是扩大发布还是回滚。金丝雀发布通常会结合监控系统，通过监控指标，观察金丝雀机器的健康状况。如果金丝雀测试通过，则把剩余的机器全部升级成新版本，否则回滚代码。</p>","y":"a","t":"14.K8S 持续集成与部署"},["/k8s/log/kubernetes-14","/k8s/log/kubernetes-14.md"]],
  ["v-57752501","/k8s/log/kubernetes-2.html",{"d":"2022-06-02T12:12:22.000Z","l":"2022年6月2日","c":["k8s","etcd"],"g":["k8s进阶训练营"],"e":"<p>etcd是CoreOS团队于2013年6月发起的开源项目，它的目标是构建一个高可用的分 布式键值(key-value)数据库。etcd内部采用raft协议作为-致性算法，etcd基于Go语言实现。</p>\n<p>官方网站：<a href=\"https://etcd.io\" target=\"_blank\" rel=\"noopener noreferrer\">https://etcd.io</a><br>github地址: <a href=\"https://github.com/etcd-io/etcd\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/etcd-io/etcd</a><br>官方硬件推荐：<a href=\"https://etcd.io/docs/v3.4/op-guide/hardware/\" target=\"_blank\" rel=\"noopener noreferrer\">https://etcd.io/docs/v3.4/op-guide/hardware/</a></p>","y":"a","t":"2.etcd 客户端使用、数据备份与恢复"},["/k8s/log/kubernetes-2","/k8s/log/kubernetes-2.md"]],
  ["v-5929fda0","/k8s/log/kubernetes-3.html",{"d":"2022-06-03T12:12:22.000Z","l":"2022年6月3日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"OkmdV\"></a></p>\n<h2> 1. yaml格式</h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code>人员名单:\n  张三:\n    年龄: <span class=\"token number\">18</span> <span class=\"token comment\">#</span>\n    职业: Linux运维工程师\n    爱好:\n      - 看书\n      - 学习\n      - 加班\n     \n  李四:\n    年龄: <span class=\"token number\">20</span>\n    职业: Java开发工程师 <span class=\"token comment\"># 这是职业</span>\n    爱好:\n      - 开源技术\n      - 微服务\n      - 分布式存储\n\n\n大小写敏感\n使用缩进表示层级关系\n 缩进时不允许使用Tal键，只允许使用空格\n 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可\n 使用”<span class=\"token comment\">#” 表示注释，从这个字符一直到行尾，都会被解析器忽略</span>\n 比json更适用于配置文件\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"3. yaml文件语法基础"},["/k8s/log/kubernetes-3","/k8s/log/kubernetes-3.md"]],
  ["v-5aded63f","/k8s/log/kubernetes-4.html",{"d":"2022-06-04T12:12:22.000Z","l":"2022年6月4日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<figure><img src=\"http://cdn1.ryanxin.live/1673335368520-3d26b509-0ef8-42a6-8744-fcce0df96dee.png\" alt=\"资源对象\" tabindex=\"0\" loading=\"lazy\"><figcaption>资源对象</figcaption></figure>\n<p><a name=\"jzmM9\"></a></p>\n<h2> 常用命令</h2>\n<figure><img src=\"http://cdn1.ryanxin.live/1673335468699-d16c69d0-45ec-4c1e-8088-800238d2db49.png\" alt=\"常用命令\" tabindex=\"0\" loading=\"lazy\"><figcaption>常用命令</figcaption></figure>","y":"a","t":"4.kubernetesAPI资源对象"},["/k8s/log/kubernetes-4","/k8s/log/kubernetes-4.md"]],
  ["v-5c93aede","/k8s/log/kubernetes-5.html",{"d":"2022-06-05T12:12:22.000Z","l":"2022年6月5日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"Ti5Lf\"></a></p>\n<h2> 自定义镜像-运行nginx与tomcat实现动静分离</h2>\n<figure><img src=\"http://cdn1.ryanxin.live/1673526070905-fa3a6810-3329-4dbd-9896-e1da10114b61.png\" alt=\"构建流程图\" tabindex=\"0\" loading=\"lazy\"><figcaption>构建流程图</figcaption></figure>\n<p><a name=\"IRPqD\"></a></p>\n<h3> 1. 系统基础镜像</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>harbor.ceamg.com/baseimages/centos:7.8.2003\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","y":"a","t":"5.k8s实战案例-nginx与tomcat实现动静分离"},["/k8s/log/kubernetes-5","/k8s/log/kubernetes-5.md"]],
  ["v-5e48877d","/k8s/log/kubernetes-6.html",{"d":"2022-06-06T12:12:22.000Z","l":"2022年6月6日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"nlbOU\"></a></p>\n<h2> rbd结合k8s提供存储卷及动态存储卷使用案例</h2>\n<blockquote>\n<p><strong>目的：</strong>\n让k8s 中的 pod 可以访问 ceph中rbd 提供的镜像作为存储设备。</p>\n</blockquote>\n<p>需要在 ceph 创建rbd并且让 k8s node 节点能够通过 ceph 的认证k8s在使用 ceph 作为动态存储卷的时候，需要 **kube-controller-manager **组件能够访问ceph，因此需要在包括k8s master及 node节点在内的每一个node 同步认证文件。</p>","y":"a","t":"6.k8s使用ceph实现数据持久化"},["/k8s/log/kubernetes-6","/k8s/log/kubernetes-6.md"]],
  ["v-5ffd601c","/k8s/log/kubernetes-7.html",{"d":"2022-06-07T12:12:22.000Z","l":"2022年6月7日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><strong>Pod状态</strong><br><img src=\"http://cdn1.ryanxin.live/1674895053415-2477036f-d642-41c9-90c7-942d1a238360.png\" alt=\"Pod状态\" loading=\"lazy\"></p>\n<blockquote>\n<p>**第一阶段 **</p>\n<ol>\n<li>**Pending  **正在创建Pod但是Pod中的容器还没有全部被创建完成=[处于此状态的Pod应该检查Pod依赖的存储是否有权限挂载、镜像是否可以下载、调度是否正常等。</li>\n<li>**Failed **Pod中有容器启动失败而导致pod工作异常。</li>\n<li>**Unknown **由于某种原因无法获得pod的当前状态，通常是由于与pod所在的node节点通信错误。</li>\n<li><strong>Succeeded</strong> Pod中的所有容器都被成功终止即pod里所有的containers均已terminated.</li>\n</ol>\n</blockquote>","y":"a","t":"7.Pod的状态和探针"},["/k8s/log/kubernetes-7","/k8s/log/kubernetes-7.md"]],
  ["v-61b238bb","/k8s/log/kubernetes-8.html",{"d":"2022-06-08T12:12:22.000Z","l":"2022年6月8日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a href=\"https://kubernetes.io/zh-cn/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/\" target=\"_blank\" rel=\"noopener noreferrer\">https://kubernetes.io/zh-cn/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/</a><br>Pod调度运⾏时，如果应⽤不需要任何稳定的标示、有序的部署、删除和扩展，则应该使⽤⼀组⽆状态副本的控制<br>器来部署应⽤，例如 Deployment 或 ReplicaSet更适合⽆状态服务需求，⽽StatefulSet适合管理所有有状态的服<br>务，⽐如MySQL、 MongoDB集群等。</p>","y":"a","t":"8.实战案例-基于StatefulSetMySQL主从架构"},["/k8s/log/kubernetes-8","/k8s/log/kubernetes-8.md"]],
  ["v-6367115a","/k8s/log/kubernetes-9.html",{"d":"2022-06-09T12:12:22.000Z","l":"2022年6月9日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p>本次以jenkins.war 包部署⽅式为例运⾏ ，java war包或jar包，且要求jenkins的数据保存⾄外部存储(NFS或者PVC)，其他java应⽤看实际需求是否需要将数据保存⾄外部存储。 <br></p>\n<p><a name=\"PyFag\"></a></p>\n<h2> 构建镜像</h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token comment\">#Jenkins Version 2.319.3</span>\nFROM harbor.ceamg.com/pub-images/jdk8:3411\n\nMAINTAINER zcc zcc@qq.com\n\nADD jenkins-2.319.3.war /apps/jenkins/\nADD run_jenkins.sh /usr/bin/\n\nEXPOSE <span class=\"token number\">8080</span>\n\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"/usr/bin/run_jenkins.sh\"</span><span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"9.实战案例-运行java应用"},["/k8s/log/kubernetes-9","/k8s/log/kubernetes-9.md"]],
  ["v-c9abf226","/k8s/log/",{"g":["K8S 训练营"],"e":"<figure><img src=\"http://cdn1.ryanxin.live/image.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p><img src=\"http://cdn1.ryanxin.live/1672103988640-94e7cad6-e070-4b5f-be58-2ed79f41d965.png\" alt=\"\" loading=\"lazy\">\n<a name=\"jhzMg\"></a></p>\n<h2> kubernetes API Server简介</h2>\n","y":"a","t":"K8S 简介","i":"creative"},["/k8s/log/index.html","/k8s/log/README.md"]],
  ["v-310cc71e","/linux/log/kafka01.html",{"d":"2021-12-04T21:12:31.000Z","l":"2021年12月5日","c":["中间件"],"g":["Kafka","Zookeeper"],"e":"<h1> Kafka 集群实战与原理分析线上问题优化</h1>\n<h2> 一、为什么使用消息队列?</h2>\n<h3> 1.Kafka知识点思维导图</h3>\n<figure><img src=\"https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-LinuxKafka集群实战.jpg\" alt=\"Kafka集群实战\" tabindex=\"0\" loading=\"lazy\"><figcaption>Kafka集群实战</figcaption></figure>\n<p>以电商为业务背景</p>\n<p>消息队列解决的具体问题是什么？  -- 通信问题。</p>","y":"a","t":"Kafka 集群实战与原理分析线上问题优化"},["/linux/log/kafka01","/linux/log/kafka01.md"]],
  ["v-a1e2ac04","/linux/log/Keepalived.html",{"d":"2019-11-20T23:45:01.000Z","l":"2019年11月21日","c":["linux"],"g":["Linux 学习之旅","高可用","Linux 服务"],"e":"<h2> Keepalived 高可用服务部署</h2>\n<br>\nKeepalived 软件最早是配合 LVS 负载均衡软件而设计的，\n用来管理并监控LVS集群系统中各个服务节点的状态，后来又加入了VRRP 协议可以实现高可用的功能。\n<br>\nKeepalived软件主要是通过 VRRP 协议实现高可用功能的。VRRP 是Virtual Router Redundancy Protocol（虚拟路由器冗余协议）的缩写，VRRP出现的目的就是为了解决静态路由单点故障问题的，它能够保证当个别节点宕机时，整个网络可以不间断地运行\n<h2> Keepalived 软件工作原理</h2>\n<br>\n        期初 VRRP 的出现是为了解决静态路由的单点故障。\n    VRRP 是用过IP多播的方式实现高可用对之间通信的。\n    工作时主服务器节点发包，备服务器节点接包，当备服务器节点接收不到主服务器节点发的数据包的时候，\n    就启动接管程序接管主服务器节点的资源。备服务器节点可以有多个，通过优先级竞选。优先级数值越大优先级越大。\n","y":"a","t":"Keepalived 高可用服务部署"},["/linux/log/Keepalived","/linux/log/Keepalived.md"]],
  ["v-2186dafc","/linux/log/Linux-basics.html",{"d":"2019-11-21T23:45:01.000Z","l":"2019年11月22日","g":["Linux 学习之旅"],"e":"<h1> Linux的目录结构特点</h1>\n<br>\n<h2> 目录结构特点</h2>\n<br>\n<ul>\n<li>\n<p>一切从根root 开始</p>\n</li>\n<li>\n<p>Linux中每个设备可以挂在任何目录上面</p>\n</li>\n<li>\n<p>Linux下面设备没有挂载无法使用</p>\n</li>\n<li>\n<p>linux中一切皆文件</p>\n</li>\n</ul>\n<br>\n<h2> 什么是挂载？</h2>\n<br>\n把苹果挂载到树上 `mount`\n给磁盘分区 开了一个入口 进入到光盘中 入口=挂载点=目录<br>\n<p><strong>举例：在 linux 系统下面使用光盘</strong>\n<br>\n<br></p>","y":"a","t":"Linux的目录结构特点"},["/linux/log/Linux-basics","/linux/log/Linux-basics.md"]],
  ["v-7007a743","/linux/log/linux-network.html",{"d":"2019-11-20T21:45:01.000Z","l":"2019年11月21日","c":["linux"],"g":["Linux学习之旅","Network","集群架构"],"e":"<h1> 网卡文件配置文件详解</h1>\n<h5> 文件路径：</h5>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>//etc/sysconfig/network-scripts/ifcfg-eth0  为网卡文件路径 \n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><br>\n<table>\n<thead>\n<tr>\n<th>配置参数</th>\n<th>参数详解</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DEVICE=eth0</td>\n<td>网卡名字</td>\n</tr>\n<tr>\n<td><strong>HWADDR=00:0c:29:bc:1f:24</strong></td>\n<td>Hardware address 硬件地址</td>\n</tr>\n<tr>\n<td><strong>TYPE=Ethernet</strong></td>\n<td>网络类型 因特网</td>\n</tr>\n<tr>\n<td>UUID=1c340c4c-e0ec-4672-81e7-a5f4110dd1f9</td>\n<td>UUID系统中唯一的标识</td>\n</tr>\n<tr>\n<td>ONBOOT=yes</td>\n<td>boot on 在重启时候是否开启网卡 自动运行</td>\n</tr>\n<tr>\n<td>NM_CONTROLLED=yes</td>\n<td>是否通过network软件进行管理</td>\n</tr>\n<tr>\n<td>BOOTPROTO=none</td>\n<td>网卡获取IP地址的方式 static ip地址固 dhcp 自动获取</td>\n</tr>\n<tr>\n<td>IPADDR=10.0.0.200</td>\n<td>IP地址</td>\n</tr>\n<tr>\n<td>NETMASK=255.255.255.0</td>\n<td>子网掩码</td>\n</tr>\n<tr>\n<td>GATEWAY=10.0.0.2</td>\n<td>网关 默认的出口</td>\n</tr>\n<tr>\n<td>USERCTL=no</td>\n<td>是否允许普通用户管理网卡  开 关 重启</td>\n</tr>\n<tr>\n<td>PEERDNS=yes</td>\n<td>DNS 优先性</td>\n</tr>\n<tr>\n<td>IPV6INIT=no</td>\n<td>IPv6</td>\n</tr>\n<tr>\n<td>DNS1=223.5.5.5</td>\n<td>DNS地址</td>\n</tr>\n<tr>\n<td>DNS2=223.6.6.6</td>\n<td>DNS地址</td>\n</tr>\n</tbody>\n</table>","y":"a","t":"網卡文件配置文件詳解"},["/linux/log/linux-network","/linux/log/linux-network.md"]],
  ["v-7a4ccc4c","/linux/log/linux-technology-stack.html",{"d":"2019-11-11T11:11:01.000Z","l":"2019年11月11日","g":["Linux学习之旅","集群架構"],"e":"<h1> 基于 Linux 系统的服务课程笔记</h1>\n<br>\n<br>\n<p>​           互联网运维是一个融合多学科（网络、系统、开发、安全、应用架构、存储等）的综合性技术岗位，给运维工程师提供了一个很好的个人能力与技术的发展空间。运维工作的相关经验将会变得非常重要，而且也将成为个人的核心竞争力，优秀的运维工程师具备很好的各层面问题的解决能力及方案提供、全局思考的能力等。由于运维岗位所接触的知识面非常广阔，更容易培养或发挥出个人某些方面的特长或爱好，如内核、网络、开发、数据库等方面，可以做得非常深入精通、成为这方面的专家。</p>\n<br>\n<br>\n<br>\n<h2> Linux 运维工程师技术图谱</h2>","y":"a","t":"基于 Linux 系统的服务课程笔记"},["/linux/log/linux-technology-stack","/linux/log/linux-technology-stack.md"]],
  ["v-1504327d","/linux/log/linux1.html",{"d":"2019-11-20T23:45:01.000Z","l":"2019年11月21日","c":["linux"],"g":["Linux 学习之旅"],"e":"<h1> Linux 基础</h1>\n<p>Linux，全称GNU/Linux，是一套免费使用和自由传播的<a href=\"https://baike.baidu.com/item/%E7%B1%BBUNIX/9032872\" target=\"_blank\" rel=\"noopener noreferrer\">类UNIX</a>操作系统，其内核由<a href=\"https://baike.baidu.com/item/%E6%9E%97%E7%BA%B3%E6%96%AF%C2%B7%E6%9C%AC%E7%BA%B3%E7%AC%AC%E5%85%8B%E7%89%B9%C2%B7%E6%89%98%E7%93%A6%E5%85%B9/1034429\" target=\"_blank\" rel=\"noopener noreferrer\">林纳斯·本纳第克特·托瓦兹</a>于1991年第一次释出，它主要受到Minix和Unix思想的启发，是一个基于<a href=\"https://baike.baidu.com/item/POSIX\" target=\"_blank\" rel=\"noopener noreferrer\">POSIX</a>和Unix的多用户、<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1/1011764\" target=\"_blank\" rel=\"noopener noreferrer\">多任务</a>、支持<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1190404\" target=\"_blank\" rel=\"noopener noreferrer\">多线程</a>和多<a href=\"https://baike.baidu.com/item/CPU\" target=\"_blank\" rel=\"noopener noreferrer\">CPU</a>的操作系统。它能运行主要的Unix工具软件、应用程序和网络协议。它支持<a href=\"https://baike.baidu.com/item/32%E4%BD%8D/5812218\" target=\"_blank\" rel=\"noopener noreferrer\">32位</a>和<a href=\"https://baike.baidu.com/item/64%E4%BD%8D\" target=\"_blank\" rel=\"noopener noreferrer\">64位</a>硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。Linux有上百种不同的发行版，如基于社区开发的<a href=\"https://baike.baidu.com/item/debian/748667\" target=\"_blank\" rel=\"noopener noreferrer\">debian</a>、<a href=\"https://baike.baidu.com/item/archlinux/10857530\" target=\"_blank\" rel=\"noopener noreferrer\">archlinux</a>，和基于商业开发的[Red Hat Enterprise Linux](<a href=\"https://baike.baidu.com/item/Red\" target=\"_blank\" rel=\"noopener noreferrer\">https://baike.baidu.com/item/Red</a> Hat Enterprise Linux/10770503)、<a href=\"https://baike.baidu.com/item/SUSE/60409\" target=\"_blank\" rel=\"noopener noreferrer\">SUSE</a>、[oracle linux](<a href=\"https://baike.baidu.com/item/oracle\" target=\"_blank\" rel=\"noopener noreferrer\">https://baike.baidu.com/item/oracle</a>  linux/6876458)等。</p>","y":"a","t":"Linux 基础知识"},["/linux/log/linux1","/linux/log/linux1.md"]],
  ["v-16b90b1c","/linux/log/linux2.html",{"d":"2019-11-20T23:45:01.000Z","l":"2019年11月21日","c":["linux"],"g":["Linux 学习之旅","Linux 服务"],"e":"<h1> 远程管理服务知识介绍</h1>\n<h2> 一、SSH远程登录服务介绍说明</h2>\n<p>SSH是Secure Shell Protocol的简写，由 IETF 网络工作小组（Network Working Group）制定；在进行数据传输之前，SSH先对联机数据包通过加密技术进行加密处理，加密后在进行数据传输。确保了传递的数据安全。\n​</p>\n<p>SSH是专为远程登录会话和其他网络服务提供的安全性协议。</p>\n<p>利用SSH协议可以有效的防止远程管理过程中的信息泄露问题，在当前的生产环境运维工作中，绝大多数企业普遍采用SSH协议服务来代替传统的不安全的远程联机服务软件，如telnet(23端口，非加密的)等。</p>","y":"a","t":"远程管理服务知识介绍"},["/linux/log/linux2","/linux/log/linux2.md"]],
  ["v-186de3bb","/linux/log/linux3.html",{"d":"2019-11-20T23:45:01.000Z","l":"2019年11月21日","c":["linux"],"g":["Linux 学习之旅","高可用","Linux 服务"],"e":"<h1> Keepalived 高可用服务部署</h1>\n<p>​    Keepalived 软件最早是配合 LVS 负载均衡软件而设计的，用来管理并监控LVS集群系统中各个服务节点的状态，后来又加入了VRRP 协议可以实现高可用的功能。</p>\n<p>软件主要是通过 VRRP 协议实现高可用功能的,VRRP 是Virtual Router Redundancy Protocol（虚拟路由器冗余协议）的缩写，VRRP出现的目的就是为了解决静态路由单点故障问题的，它能够保证当个别节点宕机时，整个网络可以不间断地运行</p>\n<h2> 一、Keepalived 软件工作原理</h2>\n<p>​</p>","y":"a","t":"Keepalived 高可用服务部署"},["/linux/log/linux3","/linux/log/linux3.md"]],
  ["v-04e26ad5","/linux/log/lnmp.html",{"d":"2019-11-21T23:45:01.000Z","l":"2019年11月22日","g":["课程实战","LNMP","Linux 服务"],"e":"<h1> LNMP网站架构实战</h1>\n\n<h2> 1. 实施步骤说明</h2>\n<br>\n<br>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">服务实施步骤</p>\n<ul>\n<li>了解LNMP架构的组成作用</li>\n<li>架构的部署</li>\n<li>架构通讯原理</li>\n<li>LNMP服务之间如何建立管理</li>\n<li>运维人员代码上线</li>\n<li>NFS服务器和Web服务器建立联系</li>\n<li>数据库、存储远端迁移</li>\n</ul>\n</div>\n<br>\n<br>\n<h3> 1.1 Nginx 模块回顾</h3>","y":"a","t":"LNMP网站架构实战"},["/linux/log/lnmp","/linux/log/lnmp.md"]],
  ["v-16a8325d","/linux/log/nfs.html",{"d":"2019-09-13T11:56:11.000Z","l":"2019年9月13日","c":["集群架构"],"g":["集群架构"],"e":"<h1> nfs共享存储</h1>\n<h2> 1.NFS基本概述</h2>\n<h3> 1.1 什么是NFS?</h3>\n<p>NFS是Network File System的缩写及网络文件系统。[ 通常我们称NFS为共享存储]</p>\n<br>\n<br>\n<h3> 1.2 NFS能干什么?</h3>\n<p>NFS的主要功能是通过局域网络让不同主机系统之间可以共享目录。</p>\n<br>\n<br>\n<h3> 1.3 为什么要使用NFS?</h3>\n<p>在网站集群架构中如果没有共享存储的情况如下:</p>\n<ol>\n<li>A用户上传图片经过负载均衡，负载均衡将上传请求调度至WEB1服务器上。</li>\n<li>B用户访问A用户上传的图片，此时B用户被负载均衡调度至WEB2_上，因为WEB2_ 上没有这张图片，所以B用户无法看到A用户传的图片。</li>\n</ol>","y":"a","t":"nfs共享存储"},["/linux/log/nfs","/linux/log/nfs.md"]],
  ["v-a14eb8b4","/mysql/log/dba01.html",{"d":"2020-07-11T22:43:01.000Z","l":"2020年7月12日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<p class=\"note note-primary\">   数据库是数据管理的有效技术，是由一批数据构成的有序集合，这些数据被存放在结构化的数据表里。数据表之间相互关联，反映客观事物间的本质联系。数据库能有效地帮助一个组织或企业科学地管理各类信息资源。数据是数据库中存储的基本对象，是按一定顺序排列组合的物理符号。\n    数据有多种表现形式，可以是数字、文字、图像，甚至是音频或视频，它们都可以经过数字化后存入计算机。数据库是数据的集合，具有统一的结构形式并存放于统一的存储介质内，是多种应用数据的集成，并可被各个应用程序所共享。</p>\n","y":"a","t":"数据库版本介绍与安装"},["/mysql/log/dba01","/mysql/log/dba01.md"]],
  ["v-9de50776","/mysql/log/dba02.html",{"d":"2020-07-12T12:43:01.000Z","l":"2020年7月12日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 体系结构及管理</h1>\n<h2> 1. MySQL C/S结构介绍</h2>\n<br>\n<p><strong>两种连接方式：</strong></p>\n<p><strong>TCP/IP：</strong><code>mysql -uroot -xin123 -h 10.0.0.51 -P3306</code></p>\n<p><strong>Socket：</strong><code>mysql -uroot -xin123 -S /tmp/mysql.sock</code></p>\n<br>\n<br>\n<h2> 2. MySQL实例的构成</h2>\n<br>\n<p><strong>举例说明：</strong></p>","y":"a","t":"体系结构及管理"},["/mysql/log/dba02","/mysql/log/dba02.md"]],
  ["v-74e35f00","/mysql/log/dba03-1.html",{"d":"2020-07-13T22:23:01.000Z","l":"2020年7月14日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> DDL 语句的应用</h1>\n<h2> 1. 对库的定义</h2>\n <br>\n<p><strong>作用：</strong> 对数据库 逻辑对象库或表的定义操作</p>\n  <br>\n  <br>\n<p><strong>创建数据库</strong></p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><pre class=\"language-sql\"><code><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> zabbix <span class=\"token keyword\">CHARSET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_bin<span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","y":"a","t":"DDL 语句的应用"},["/mysql/log/dba03-1","/mysql/log/dba03-1.md"]],
  ["v-7698379f","/mysql/log/dba03-2.html",{"d":"2020-07-14T21:13:01.000Z","l":"2020年7月15日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> DQL 查询语句与元数据</h1>\n<h2> <strong>1. DQL 介绍</strong></h2>\n<br>\n<p>主要对应操作：</p>\n<ul>\n<li><strong>select 语句</strong></li>\n<li><strong>show 元数据属性</strong></li>\n</ul>\n <br>\n<h2> 2. Select 语句的应用</h2>\n<br>\n<h3> 2.1 select 单独使用的情况</h3>\n<br>\n<p><strong>查看系统参数</strong></p>\n<div class=\"language-sql line-numbers-mode\" data-ext=\"sql\"><pre class=\"language-sql\"><code>mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> @<span class=\"token variable\">@basedir</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> @<span class=\"token variable\">@port</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> @<span class=\"token variable\">@innodb_flush_log_at_trx_commit</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">show</span> variables <span class=\"token operator\">like</span> <span class=\"token string\">'innodb%'</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">select</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"DQL 查询语句与元数据"},["/mysql/log/dba03-2","/mysql/log/dba03-2.md"]],
  ["v-9a7b5638","/mysql/log/dba03.html",{"d":"2020-07-13T02:13:01.000Z","l":"2020年7月13日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> SQL 基本概念引入</h1>\n<h2> 1. MySQL数据库的内置功能</h2>\n<br>\n<br>\n<h3> 1.1 连接数据库</h3>\n<p><strong>参数介绍</strong></p>\n<p><strong>-u</strong>    指定登录用户</p>\n<p><strong>-p</strong>   &nbsp; 指定密码</p>\n<p><strong>-S</strong>    使用Socket文件方式登录</p>\n<p><strong>-h</strong>    指定远程主机登录地址</p>\n<p><strong>-P</strong>    指定连接数据库的端口</p>","y":"a","t":"SQL 基本概念引入"},["/mysql/log/dba03","/mysql/log/dba03.md"]],
  ["v-430d3704","/mysql/log/dba04-2.html",{"d":"2020-07-15T13:13:01.000Z","l":"2020年7月15日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 索引原理介绍创建与执行计划分析</h1>\n<h2> 1.索引的作用</h2>\n<p>类似书的目录,起到优化查询的作用</p>\n<h2> <strong>2.</strong> 索引的分类(算法)</h2>\n<ul>\n<li>\n<p>B树  默认使用的索引类型</p>\n</li>\n<li>\n<p>R树 基本不用</p>\n</li>\n<li>\n<p>Hash 自适应 自动优化不需要设置</p>\n</li>\n<li>\n<p>FullText  全文索引 类似ES数据库</p>\n</li>\n<li>\n<p>GIS 索引 5.7版本 用于存储地理位置信息</p>\n</li>\n</ul>\n<h2> 3. BTREE索引算法演变</h2>","y":"a","t":"索引原理介绍创建与执行计划分析"},["/mysql/log/dba04-2","/mysql/log/dba04-2.md"]],
  ["v-9711a4fa","/mysql/log/dba04.html",{"d":"2020-07-15T03:13:01.000Z","l":"2020年7月15日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 第三章回顾 补充元数据查询部分</h1>\n<h2> 1.上节回顾</h2>\n<h3> 1.1 group by name  分组   排序 对比 去重</h3>\n<figure><img src=\"https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/day04-1.png\" alt=\"day04-1.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>day04-1.png</figcaption></figure>\n<h3> 1.2 关于group by 的sql_mode</h3>","y":"a","t":"第三章回顾 补充元数据查询部分"},["/mysql/log/dba04","/mysql/log/dba04.md"]],
  ["v-44a5b8be","/mysql/log/dba05-1.html",{"d":"2020-07-16T03:13:01.000Z","l":"2020年7月16日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> <strong>InnoDB 存储引擎物理存储结构</strong></h1>\n<p><strong>最直观的存储方式</strong></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code>ll /data/mysql/data\nibdata1：<span class=\"token comment\">#系统数据字典信息(统计信息)，UNDO表空间等数据 </span>\nib_logfile0 ~ ib_logfile1: <span class=\"token comment\">#REDO日志文件，事务日志文件。</span>\nibtmp1： <span class=\"token comment\">#临时表空间磁盘位置，存储临时表</span>\nfrm：<span class=\"token comment\">#存储表的列信息</span>\nibd：<span class=\"token comment\">#表的数据行和索引</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"InnoDB 存储引擎物理存储结构"},["/mysql/log/dba05-1","/mysql/log/dba05-1.md"]],
  ["v-465a915d","/mysql/log/dba05-2.html",{"d":"2020-07-15T23:13:01.000Z","l":"2020年7月16日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> InnoDB 核心特性</h1>\n<h2> 1. 事务</h2>\n<br>\n<p>事务保证金融交易类服务的安全性完整性和公平性。</p>\n<br>\n<h3> 1.1 事务的 ACID 特性</h3>\n<br>\n<ul>\n<li><strong>Atomic（原子性）</strong></li>\n</ul>\n<p>所有语句作为一个单元全部成功执行或全部取消。不能出现中间状态。</p>\n<ul>\n<li><strong>Consistent（一致性）</strong></li>\n</ul>\n<p>如果数据库在事务开始时处于一致状态，则在执行该事务期间将保留一致状态。</p>\n<ul>\n<li><strong>Isolated（隔离性）</strong></li>\n</ul>","y":"a","t":"InnoDB 核心特性"},["/mysql/log/dba05-2","/mysql/log/dba05-2.md"]],
  ["v-480f69fc","/mysql/log/dba05-3.html",{"d":"2020-07-15T23:33:01.000Z","l":"2020年7月16日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> InnoDB 核心参数介绍</h1>\n<h2> 1.上节知识点回顾</h2>\n<h3> 1.1 表空间说明</h3>\n<ul>\n<li>独立表空间 : 5.6 开始的默认表空间,一个表一个ibd文件,存储数据行和索引</li>\n<li>共享表空间 : 5.5 默认的模式, 所有表的行和索引都存储到ibdata1</li>\n</ul>\n<br>\n<p><strong>说明</strong>:</p>\n<ul>\n<li>从5.6 开始,不再使用共享表空间模式</li>\n<li>5.6版本  数据字典信息 ➕ UNDO ➕ TMP\n5.7版本  把 TMP 独立了\n8.0版本  把 UNDO 独立</li>\n</ul>","y":"a","t":"InnoDB 核心参数介绍"},["/mysql/log/dba05-3","/mysql/log/dba05-3.md"]],
  ["v-93a7f3bc","/mysql/log/dba05.html",{"d":"2020-07-15T02:13:01.000Z","l":"2020年7月15日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 存储引擎介绍与企业案例</h1>\n<h2> 1. 前情回顾案例补充</h2>\n<p><strong>explain (desc) 使用场景</strong></p>\n<p>相关问题：</p>\n<ul>\n<li>\n<p>你做过哪些优化?</p>\n</li>\n<li>\n<p>你用过什么优化工具? <strong>explain</strong></p>\n</li>\n<li>\n<p>你对索引这块怎么优化的?</p>\n<br>\n</li>\n</ul>\n<p><strong>题目意思: 我们公司业务慢,请你从数据库的角度分析原因</strong></p>\n<ul>\n<li><strong>mysql出现性能问题,有两种情况:</strong></li>\n</ul>","y":"a","t":"存储引擎介绍与企业案例"},["/mysql/log/dba05","/mysql/log/dba05.md"]],
  ["v-a6f234c6","/mysql/log/dba06-1.html",{"d":"2020-07-16T02:13:01.000Z","l":"2020年7月16日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> GTID 记录模式管理</h1>\n<h2> 1. GTID 介绍</h2>\n<ul>\n<li>\n<p>对于binlog中的每一个事务,都会生成一个GTID号码</p>\n</li>\n<li>\n<p>DDL ,DCL 一个event就是一个事务,就会有一个GTID号.</p>\n</li>\n<li>\n<p>DML语句来讲,begin到commit,是一个事务,就是一个GTID号</p>\n</li>\n</ul>\n<br>\n<h2> 2. GTID 组成</h2>\n<p>由两部分组成\n<strong>severi_uuid:TID</strong> 事务的号码</p>\n<p><strong>severi_uuid</strong> 在 <code>auto.cnf</code> 中查看</p>","y":"a","t":"GTID 记录模式管理"},["/mysql/log/dba06-1","/mysql/log/dba06-1.md"]],
  ["v-a3888388","/mysql/log/dba06-2.html",{"d":"2020-07-17T02:13:01.000Z","l":"2020年7月17日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 慢日志分析</h1>\n<p><strong>作用</strong>：<strong>slow-log</strong> 记录运行较慢的语句,优化过程中常用的工具日志。</p>\n<br>\n<h2> 1. 慢日志配置</h2>\n<br>\n<p><strong>开关</strong></p>\n<p><code>slow_query_log=1</code></p>\n<p><strong>文件位置及名字</strong></p>\n<p><code>slow_query_log_file=/data/mysql/slow.log</code></p>\n<p><strong>设定慢查询时间</strong></p>","y":"a","t":"慢日志分析"},["/mysql/log/dba06-2","/mysql/log/dba06-2.md"]],
  ["v-903e427e","/mysql/log/dba06.html",{"d":"2020-07-18T02:13:01.000Z","l":"2020年7月18日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 常用日志文件类型介绍</h1>\n<h2> 日志管理</h2>\n<br>\n<figure><img src=\"https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-DBA/Section6-1.png\" alt=\"日志管理1\" tabindex=\"0\" loading=\"lazy\"><figcaption>日志管理1</figcaption></figure>\n<br>\n<ul>\n<li>错误日志是用来拍错</li>\n<li>慢速查询用来调优</li>\n<li>二进制日志恢复数据另外与主从复制相关</li>\n</ul>\n<br>","y":"a","t":"常用日志文件类型介绍"},["/mysql/log/dba06","/mysql/log/dba06.md"]],
  ["v-1468127c","/mysql/log/dba07-1.html",{"d":"2020-07-19T02:13:01.000Z","l":"2020年7月19日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 物理备份与恢复 XBK</h1>\n<h2> 1.上节回顾</h2>\n<br>\n<h3> 1.1 mysqldump核心参数</h3>\n<ul>\n<li>-A  全备</li>\n<li>-B  单表备份</li>\n<li>库 表  备份</li>\n</ul>\n<p><code>--master-data=2</code></p>\n<p>(1) 以注释的形式记录二进制日志信息</p>\n<p>(2) 自动开启锁表的功能</p>\n<p>记录二进制日志在备份时的起点号 （就是到23.59分截止的binlog日志position号 ）由于备份时不开启二进制日志所以记录的是备份开始时的起点号用作恢复起点</p>","y":"a","t":"物理备份与恢复 XBK"},["/mysql/log/dba07-1","/mysql/log/dba07-1.md"]],
  ["v-8cd49140","/mysql/log/dba07.html",{"d":"2020-07-20T02:13:01.000Z","l":"2020年7月20日","c":["DBA"],"g":["DBA","RDBMS"],"e":"<h1> 逻辑备份与恢复</h1>\n<h2> 1. 上节回顾</h2>\n<br>\n<h3> 1.1  日志</h3>\n<p><strong>binlog</strong> 如何开启?</p>\n<p><code>binlog_format=row</code>    SBR 模式参数</p>\n<br>\n<p><strong>RBR 与 SBR  模式之间的区别</strong>：</p>\n<p>例如要更新大于2000的数据行 ，此时需要更新1000行数据，RBR记录每一行的变化，SBR则只记录这一条命令，但是SBR有可能会记录错误的日志，如在函数 now 当前时间的命令会有错误。</p>\n <br>","y":"a","t":"逻辑备份与恢复"},["/mysql/log/dba07","/mysql/log/dba07.md"]],
  ["v-7c493f5b","/mysql/log/dba08-1.html",{"d":"2020-07-22T02:13:01.000Z","l":"2020年7月22日","c":["DBA"],"g":["DBA","RDBMS","主从复制"],"e":"<h1> 主从复制高级进阶</h1>\n<h2> 1.上节回顾</h2>\n<h3> 1.1   binlog_format</h3>\n<ul>\n<li>\n<p>SBR   update t1 set name='zs' where id&gt;50; 更新50条数据 记录1条命令</p>\n</li>\n<li>\n<p>RBR  记录50行日志</p>\n</li>\n<li>\n<p>MBR  由系统自动选择</p>\n</li>\n</ul>\n<br>\n<br>\n<h3> 1.2  主从故障</h3>\n<br>\n<p><strong>IO线程故障</strong></p>\n<ul>\n<li>连主库\n取日志\n存到 relaylog</li>\n</ul>","y":"a","t":"主从复制高级进阶"},["/mysql/log/dba08-1","/mysql/log/dba08-1.md"]],
  ["v-896ae002","/mysql/log/dba08.html",{"d":"2020-07-21T02:13:01.000Z","l":"2020年7月21日","c":["DBA"],"g":["DBA - RDBMS - 高可用"],"e":"<h1> MySQL Replication</h1>\n<p>#高可用架构方案</p>\n<ul>\n<li>负载均衡：有一个定的高可用性</li>\n</ul>\n<p>​       LVS  Nginx</p>\n<ul>\n<li>主备系统：有高可用性，但是需要别换，是单活的构架</li>\n</ul>\n<p>​       KA ， MHA ,MMM</p>\n<ul>\n<li>真正的高可用（多活系统）</li>\n</ul>\n<p>​       NDB Cluster Oracle RAC Sysbase cluster ，InnoDB Cluster （MGR） ，PXC , MGC</p>\n<br>","y":"a","t":"高可用架构方案"},["/mysql/log/dba08","/mysql/log/dba08.md"]],
  ["v-86012ec4","/mysql/log/dba09.html",{"d":"2020-07-22T02:13:01.000Z","l":"2020年7月22日","c":["DBA"],"g":["DBA","RDBMS","MHA"],"e":"<h1> MHA 高可用部署</h1>\n<h2> 1.搭建MHA</h2>\n<br>\n<p>(1) <strong>配置关键程序软连接</strong></p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /data/mysql/bin/mysqlbinlog    /usr/bin/mysqlbinlog\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /data/mysql/bin/mysql          /usr/bin/mysql\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"MHA 高可用部署"},["/mysql/log/dba09","/mysql/log/dba09.md"]],
  ["v-58c502fb","/nginx/log/lnmp.html",{"d":"2019-11-21T23:45:01.000Z","l":"2019年11月22日","c":["linux"],"g":["课程实战","LNMP","Linux 服务"],"e":"<h1> LNMP网站架构实战</h1>\n\n<h2> 1. 实施步骤说明</h2>\n<br>\n<br>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">服务实施步骤</p>\n<ul>\n<li>了解LNMP架构的组成作用</li>\n<li>架构的部署</li>\n<li>架构通讯原理</li>\n<li>LNMP服务之间如何建立管理</li>\n<li>运维人员代码上线</li>\n<li>NFS服务器和Web服务器建立联系</li>\n<li>数据库、存储远端迁移</li>\n</ul>\n</div>\n<br>\n<br>\n<h3> 1.1 Nginx 模块回顾</h3>","y":"a","t":"LNMP网站架构实战"},["/nginx/log/lnmp","/nginx/log/lnmp.md"]],
  ["v-1c8c16e8","/nginx/log/nginx-basics.html",{"d":"2019-09-14T11:56:11.000Z","l":"2019年9月14日","c":["Nginx"],"g":["集群架构","Nginx"],"e":"<h1> Nginx基础-Http协议</h1>\n<h2> 1.Http协议介绍</h2>\n<h3> 1.1什么是URL?</h3>\n<p>通常我们在访问一个网站页面时，请求到的内容通称为\"资源\"。而”资源“这一概念非常宽泛，它可以是一份文档，一张图片，或所有其他你能够想到的格式。每个资源都由一个URI来进行标\n识;比如:<code>http://fj.xuliangwei.com/public/tt.jpeg</code>这样的资源，我们会将该其称为URL地址;\n<br></p>\n<p><strong>百度百科解释</strong>: URL 简称统一资源定位符，用来唯-地标识万维网中的某一个资源。URL由协议、主机名称、端口以及文件名几部分构成。深入理解URL的组成部分。</p>","y":"a","t":"Nginx基础-Http协议"},["/nginx/log/nginx-basics","/nginx/log/nginx-basics.md"]],
  ["v-73c18666","/nginx/log/Nginx-filestorage.html",{"d":"2020-06-01T11:11:22.000Z","l":"2020年6月1日","c":["运维技术栈"],"g":["Nginx","运维实战"],"e":"<h1> 使用Nginx构建文件仓库</h1>\n<p>使用<code>Nginx autoindex</code> 配置一个文件下载站点，将一些常用的安装包放上去，以提供用户下载，适用于公司部门内部软件分享这种类似的工作，比 FTP 配置简单，能实现限制速度等，只是上传需要手动上传到服务器。</p>\n<h2> 编译安装Nginx</h2>\n<p>服务器版本为：Ubuntu 20.4</p>\n<p>1、新建项目目录，其规划如下：</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /data/<span class=\"token punctuation\">{</span>logs,packages,services,backup,shell<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","y":"a","t":"使用Nginx构建文件仓库"},["/nginx/log/Nginx-filestorage","/nginx/log/Nginx-filestorage.md"]],
  ["v-e4b6d2ec","/nginx/log/nginx-limit.html",{"d":"2019-09-17T13:56:11.000Z","l":"2019年9月17日","c":["Nginx"],"g":["集群架构","Nginx"],"e":"<h1> 1. Nginx 访问限制</h1>\n<p><code>ngx_http_access_module</code>模块允许限制对某些客户端地址的访问。</p>\n<p>这里所说的访问限制主要就是限制来源的客户端 IP 地址，可以设置类似 IP 黑白名单一样的东西，比如某些内部的服务，我们只希望在我们办公室的 IP 能够访问，也比如有个不法分子的 IP 一直在疯狂的请求我们网站，需要把它封了，这些都需要用到该功能。</p>\n<p>Nginx 的 <code>ngx_http_access_module</code> 模块提供了这样的功能，默认编译。主要两个参数：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">allow\t允许某个 ip 或者一个 ip 段访问，如果指定 unix: ，那将允许 socket 的访问。语法：allow address</td>\n<td>CIDR</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">deny\t和 allow 相反。语法：deny address</td>\n<td>CIDR</td>\n</tr>\n</tbody>\n</table>","y":"a","t":"Nginx 访问限制"},["/nginx/log/nginx-limit","/nginx/log/nginx-limit.md"]],
  ["v-5982a191","/nginx/log/nginx-web.html",{"d":"2019-09-15T16:56:11.000Z","l":"2019年9月16日","c":["Nginx"],"g":["集群架构","Nginx"],"e":"<h1> Nginx Web快速入门</h1>\n<h2> 1.Nginx 介绍</h2>\n<h3> 1.1什么是Nginx ？</h3>\n<p><strong>Nginx</strong> 是一个开源且高性能、可靠的 Http Web 服务、代理服务。</p>\n<ul>\n<li>开源，体现在直接获取Nginx的源代码。</li>\n<li>高性能，体现在支持海量的并发。</li>\n<li>高可靠，体现在服务稳定。</li>\n</ul>\n<br>\n<br>\n<h3> 1.2为什么选择 Nginx ？</h3>\n<h4> 1.2.1高性能、高并发</h4>\n<p>通常正常情况下，单次请求会得到更快的响应。另一方面在高峰期(如有数以万计的并发请求)，Nginx可以比其他Web服务器更快地响应请求。</p>","y":"a","t":"Nginx Web快速入门"},["/nginx/log/nginx-web","/nginx/log/nginx-web.md"]],
  ["v-b9cc083c","/nginx/log/Rsyncserver.html",{"d":"2019-11-19T23:45:01.000Z","l":"2019年11月20日","c":["linux"],"g":["课程实战","Rsync","Linux 服务"],"e":"<h1> Rsync 数据镜像备份工具</h1>\n<br>\n<p><strong><a href=\"https://mirrors.aliyun.com/centos/7.8.2003/os/x86_64/Packages/rsync-3.1.2-10.el7.x86_64.rpm?spm=a2c6h.13651111.0.0.5b472f70CV6308&amp;file=rsync-3.1.2-10.el7.x86_64.rpm\" target=\"_blank\" rel=\"noopener noreferrer\">Rsync</a> 是一款实现全量及增量复制同步的软件</strong></p>","y":"a","t":"Rsync 数据镜像备份工具"},["/nginx/log/Rsyncserver","/nginx/log/Rsyncserver.md"]],
  ["v-af60f34a","/nginx/log/webserver.html",{"d":"2019-11-22T21:45:01.000Z","l":"2019年11月23日","c":["linux"],"g":["网络协议","Http","Linux 服务"],"e":"<p><strong>当用户访问一个网站时，都发生了事情？</strong></p>\n<p>用户在浏览器输入网址信息点击回车 <a href=\"www.ryanxin.com\">ryanxin.com</a>\n客户端计算机完成域名的解析过程(DNS)后直接访问相应网站服务器建立TCP三次握手过程多次发送HTTP请求报文，服务端响应客户端请求多次回复HTTP响应报文，这时用户使用浏览器可以看到网站页面，用户关掉网页结束访问网站的过程，客户端计算机完成TCP四次挥手过程，客户端与服务端断开连接。</p>\n<br>\n<h2> 1. DNS迭代查询</h2>\n<p>利用DNS服务，将输入的域名解析为相应的IP地址。</p>","y":"a","t":"HTTP 协议与网站原理介绍"},["/nginx/log/webserver","/nginx/log/webserver.md"]],
  ["v-2534b538","/redis/log/",{"d":"2020-08-01T21:11:31.000Z","l":"2020年8月2日","c":["Redis"],"g":["数据库"],"e":"<p>用户访问的过程中会产生各种各样的数据，为了让网站能够正常的运行，并且高效的让用户精准的看到相应的数据，我们就会在不同业务功能场景中采用各种各样的数据类型来进行承载。</p>\n","y":"a","t":"1.Redis 基础-数据分类"},["/redis/log/index.html","/redis/log/README.md"]],
  ["v-7e39a5b1","/redis/log/redis-2.html",{"d":"2020-08-01T21:11:31.000Z","l":"2020年8月2日","c":["Redis"],"g":["数据库"],"e":"<h1> NoSQL 基础知识</h1>\n<p>一类新出现的数据库(not only sql)</p>\n<h2> 特点</h2>\n<ul>\n<li>泛指非关系型的数据库</li>\n<li>不支持SQL语法</li>\n<li>存储结构跟传统关系型数据库中的那种关系表完全不同，nosql中存储的数据都是KV形式</li>\n<li>NoSQL的世界中没有一种通用的语言，每种nosql数据库都有自己的api和语法，以及擅长的业务场景</li>\n</ul>\n<h2> <strong>相关软件</strong></h2>\n<p><strong>Redis</strong></p>\n<p>简介：开源的内存结构数据库</p>","y":"a","t":"2.Redis 基础-NoSQL"},["/redis/log/redis-2","/redis/log/redis-2.md"]],
  ["v-7fee7e50","/redis/log/redis-3.html",{"d":"2020-08-02T20:11:31.000Z","l":"2020年8月3日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis 基础知识</h1>\n<p>Redis 是 Remote Dictionary Server(远程数据服务)的缩写，由意大利人 antirez(Salvatore\nSanfilippo) 开发的一款 内存高速缓存数据库，该软件使用 C 语言编写,它的数据模型为 key-value。</p>\n<br>\n<p><strong>官方介绍</strong>：</p>\n<p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.</p>","y":"a","t":"3.Redis 基础-环境部署"},["/redis/log/redis-3","/redis/log/redis-3.md"]],
  ["v-fcb95222","/redis/log/redis-4.html",{"d":"2020-08-02T20:11:31.000Z","l":"2020年8月3日","c":["Redis","python"],"g":["数据库","session"],"e":"<h1> 应用Redis python-Web Session实践</h1>\n<p>我们在后面是准备在python web项目中应用redis，所以我们需要在python虚拟环境中安装redis的模块插件，然后才可以正常的应用。redis-py提供两个类Redis和StrictRedis用于实现Redis的命令，StrictRedis用于实现大部分官方的命令，并使用官方的语法和命令，Redis是StrictRedis的子类，用于向后兼容旧版本的redis-py。</p>\n<br>\n<h3> <strong>环境准备</strong></h3>\n<p>需要创建一个虚拟环境，为什么要用虚拟环境呢？ 默认情况下在当前操作系统下里面，安装一个版本为3.7的Python 再安装一个版本为3.9的Python 那么就会把之前的版本覆盖掉，那么如果再当前主机中有多个项目时，每个应用都有不同的功能，一个有遗留代码依赖于2.7版本，一个依赖于3.5版本，新的项目要求3.9版本，那么现在如果想要在一个主机把三个app全部运行起来该怎么办？ 那么就需要Python虚拟环境基于目录方式实现多个python版本共存。</p>","y":"a","t":"4.Redis-共享Session实践"},["/redis/log/redis-4","/redis/log/redis-4.md"]],
  ["v-f94fa0e4","/redis/log/redis-5.html",{"d":"2020-08-04T21:12:31.000Z","l":"2020年8月5日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis 持久复制</h1>\n<p>Redis虽然是一个内存级别的缓存程序，但是其可以将内存的数据按照一定的策略保存到硬盘上，从而实现数据持久保存的目的。</p>\n<p>目前，redis支持两种不同方式的数据持久化保存机制：</p>\n<p><strong>RDB</strong></p>\n<ul>\n<li>\n<p>基于时间，生成某个时间点的快照文件，默认只保留最近的一次快照。</p>\n</li>\n<li>\n<p>恢复速度非常快，但是可能丢失之前的快照数据，非实时同步。</p>\n</li>\n</ul>\n<p><strong>AOF</strong></p>\n<ul>\n<li>AppendOnlyFile(日志追加模式),基于Redis协议格式保存信息到指定日志文件的末尾</li>\n<li>基于写时复制的机制，每隔x秒将新执行的命令同步到对应的文件中</li>\n<li>默认是禁用的，需要开启数据保存全，时间过长导致文件过大，恢复时候速度比RDB慢。</li>\n</ul>","y":"a","t":"5.Redis 持久复制"},["/redis/log/redis-5","/redis/log/redis-5.md"]],
  ["v-f5e5efa6","/redis/log/redis-6.html",{"d":"2020-08-06T19:24:11.000Z","l":"2020年8月7日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis 主从同步</h1>\n<p>redis 作为一个分布式的数据缓存平台，我们可以借助于redis的多实例机制，让多个实例间的数据，\n达成一个同步的效果，这样即使某个实例出现异常，也不影响数据整体的使用。</p>\n<h3> 基础知识</h3>\n<h4> 复制特性</h4>\n<ul>\n<li>redis 如果想要实现主从复制的效果，我们需要为它划分 主角色和从角色，实现数据 由主向从的单向传递。</li>\n<li>对于 从redis，一旦发现 主redis 更换了，那么将本地数据清空，从新主上同步数据。</li>\n<li>如果 从redis 仅仅是断开了 主redis，那么不会删除已经同步过的数据。</li>\n</ul>","y":"a","t":"6.Redis 主从同步"},["/redis/log/redis-6","/redis/log/redis-6.md"]],
  ["v-f27c3e68","/redis/log/redis-7.html",{"d":"2020-08-06T19:24:11.000Z","l":"2020年8月7日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis Sentinel（哨兵）</h1>\n<h3> 简介</h3>\n<p>主从复制奠定了Redis分布式的基础，但是普通的主从复制并不能达到高可用的状态。在普通的主从复制模式下，如果主服务器宕机，就只能通过运维人员手动切换主服务器，很显然这种方案并不可取。</p>\n<p>针对上述情况，Redis官方推出了可抵抗节点故障的高可用方案——Redis Sentinel（哨兵）。Redis Sentinel（哨兵）：由一个或多个Sentinel实例组成的Sentinel系统，它可以监视任意多个主从服务器，当监视的主服务器宕机时，自动下线主服务器，并且择优选取从服务器升级为新的主服务器。</p>","y":"a","t":"7.Redis Sentinel（哨兵）"},["/redis/log/redis-7","/redis/log/redis-7.md"]],
  ["v-f8c93f34","/xw/hyy/1.html",{"d":"2022-11-10T12:12:22.000Z","l":"2022年11月10日","y":"a","t":"汉译英技巧课1"},["/xw/hyy/1","/xw/hyy/1.md"]],
  ["v-f55f8df6","/xw/hyy/2.html",{"d":"2022-11-13T12:12:22.000Z","l":"2022年11月13日","y":"a","t":"汉译英技巧课2"},["/xw/hyy/2","/xw/hyy/2.md"]],
  ["v-03c9579e","/xw/hyy/",{"y":"a","t":"C汉译英技巧课","i":"miao"},["/xw/hyy/index.html","/xw/hyy/README.md"]],
  ["v-3683e551","/xw/tc/1.html",{"d":"2022-11-23T12:12:22.000Z","l":"2022年11月23日","y":"a","t":"挑错技巧课1"},["/xw/tc/1","/xw/tc/1.md"]],
  ["v-3838bdf0","/xw/tc/2.html",{"d":"2022-11-24T12:12:22.000Z","l":"2022年11月24日","y":"a","t":"挑错技巧课2"},["/xw/tc/2","/xw/tc/2.md"]],
  ["v-c5f2ae6e","/xw/tc/",{"y":"a","t":"D挑错","i":"miao"},["/xw/tc/index.html","/xw/tc/README.md"]],
  ["v-78c9e09f","/xw/wx/1.html",{"d":"2021-11-03T12:12:22.000Z","l":"2021年11月3日","y":"a","t":"完型技巧课1"},["/xw/wx/1","/xw/wx/1.md"]],
  ["v-7a7eb93e","/xw/wx/2.html",{"d":"2021-11-04T12:12:22.000Z","l":"2021年11月4日","y":"a","t":"完型技巧课2"},["/xw/wx/2","/xw/wx/2.md"]],
  ["v-c5f292d2","/xw/wx/",{"y":"a","t":"F完型填空","i":"miao"},["/xw/wx/index.html","/xw/wx/README.md"]],
  ["v-f8898596","/xw/yd/1.html",{"d":"2021-11-06T12:12:22.000Z","l":"2021年11月6日","y":"a","t":"阅读理解技巧课1"},["/xw/yd/1","/xw/yd/1.md"]],
  ["v-f51fd458","/xw/yd/2.html",{"d":"2021-11-07T12:12:22.000Z","l":"2021年11月7日","y":"a","t":"阅读理解技巧课2"},["/xw/yd/2","/xw/yd/2.md"]],
  ["v-c5f288a6","/xw/yd/",{"y":"a","t":"A阅读理解","i":"miao"},["/xw/yd/index.html","/xw/yd/README.md"]],
  ["v-537d96f3","/xw/yf/1.html",{"d":"2023-01-03T12:12:22.000Z","l":"2023年1月3日","e":"<h2> <strong>第一部分：时态</strong></h2>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>1.When you ____this over with her, how did she react?</p>\n<p>A. talk    B. talked    C. will talk    D. talking</p>","y":"a","t":"词汇与结构1"},["/xw/yf/1","/xw/yf/1.md"]],
  ["v-55326f92","/xw/yf/2.html",{"d":"2023-01-04T12:12:22.000Z","l":"2023年1月4日","y":"a","t":"词汇与结构2"},["/xw/yf/2","/xw/yf/2.md"]],
  ["v-c5f2882a","/xw/yf/",{"y":"a","t":"B词汇与结构","i":"miao"},["/xw/yf/index.html","/xw/yf/README.md"]],
  ["v-fc4c2a24","/xw/yf/%E6%8A%80%E5%B7%A7%E7%9B%B4%E6%92%AD%E8%AF%BE-%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%841.html",{"d":"2023-01-03T12:12:22.000Z","l":"2023年1月3日","e":"<p><a name=\"ib8ui\"></a></p>\n<h2> 第一部分：时态</h2>\n<p>1.When you        this over with her, how did she react?<br>A. talk       B. talked        C. will talk        D. talking</p>\n<p>:::success\n<strong>考点：时态前后一致</strong>，后面的句子did是过去时，前面的谓语应该用过去时 选B\n:::</p>\n<p>2.Dr. Robert went to New York, gave a few lectures and         .<br>A. visiting his daughter   B. to visit his daughter  C. visit his daughter   D. visited his daughter</p>","y":"a","t":"词汇与结构1"},["/xw/yf/技巧直播课-词汇与结构1.html","/xw/yf/%E6%8A%80%E5%B7%A7%E7%9B%B4%E6%92%AD%E8%AF%BE-%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%841","/xw/yf/技巧直播课-词汇与结构1.md","/xw/yf/%E6%8A%80%E5%B7%A7%E7%9B%B4%E6%92%AD%E8%AF%BE-%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%841.md"]],
  ["v-52f02eb4","/xw/yyh/1.html",{"d":"2023-01-08T12:12:22.000Z","l":"2023年1月8日","y":"a","t":"英译汉技巧课1"},["/xw/yyh/1","/xw/yyh/1.md"]],
  ["v-4f867d76","/xw/yyh/2.html",{"d":"2023-01-09T12:12:22.000Z","l":"2023年1月9日","y":"a","t":"英译汉技巧课2"},["/xw/yyh/2","/xw/yyh/2.md"]],
  ["v-03d10fde","/xw/yyh/",{"y":"a","t":"E英译汉","i":"miao"},["/xw/yyh/index.html","/xw/yyh/README.md"]],
  ["v-43436750","/zookeeper/log/zookeeper-01.html",{"d":"2021-10-05T21:13:01.000Z","l":"2021年10月6日","c":["zookeeper"],"g":["中间件"],"e":"<h1> ZooKeeper 基础与安装</h1>\n<h2> 基础知识</h2>\n<h3> 开发框架</h3>\n<figure><img src=\"https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-Linux/elks/kfkj.jpg\" alt=\"开发框架\" tabindex=\"0\" loading=\"lazy\"><figcaption>开发框架</figcaption></figure>\n<ul>\n<li>\n<p>ORM - 一台主机承载所有的业务应用</p>\n</li>\n<li>\n<p>MVC - 多台主机分别承载业务应用的不同功能，通过简单的网络通信实现业务的正常访问</p>\n</li>\n<li>\n<p>RPC - 应用业务拆分、多应用共用功能、核心业务功能 独立部署，基于远程过程调用技术(RPC)的分布式服</p>\n</li>\n<li>\n<p>务框架 提高业务功能复用及项目的整合</p>\n</li>\n<li>\n<p>SOA - 粗放型的RPC分布式实现了大量的资源浪费，提高机器利用率的 资源调度和治理中心(SOA) ，基于</p>\n<p>现有资源的高效利用，进一步提高服务的能力</p>\n</li>\n<li>\n<p>微服务 - 随着互联网的发展、各种技术的平台工具出现、编程语言的升级、开发规范的标准化等因素，中小</p>\n<p>型企业也有了相应的能力来发展更轻量级的SOA模式。</p>\n</li>\n</ul>","y":"a","t":"zookeeper 基础与安装"},["/zookeeper/log/zookeeper-01","/zookeeper/log/zookeeper-01.md"]],
  ["v-44f83fef","/zookeeper/log/zookeeper-02.html",{"d":"2021-10-06T22:13:01.000Z","l":"2021年10月7日","c":["zookeeper"],"g":["中间件"],"e":"<h1> 集群部署</h1>\n<p>Zookeeper为了更好的实现生产的业务场景，一般都会采用分布式的集群架构。集群通常由2n+1台Server节点组成，每个Server都知道彼此的存在。每个server都维护的内存状态镜像以及持久化存储的事务日志和快照。</p>\n<br>\n<p>对于2n+1台server，只要有&gt;=(n+1)台server节点可用，整个Zookeeper系统保持可用。</p>\n<p>为了维护集群内部所有主机信息的一致性，他们自己参考Paxos协议自己设计了一个更加轻量级的协议:Zab(Zookeeper Atomic Broadcast)来解决集群数据一致性的问题。</p>","y":"a","t":"zookeeper 集群部署"},["/zookeeper/log/zookeeper-02","/zookeeper/log/zookeeper-02.md"]],
  ["v-46ad188e","/zookeeper/log/zookeeper-03.html",{"d":"2021-10-07T21:13:01.000Z","l":"2021年10月8日","c":["运维技术栈"],"g":["zookeeper"],"e":"<h1> 服务器动态上下线监听案例</h1>\n<p>某分布式系统中，主节点可以有多台，可以动态上下线，任意一台客户端都能实时感知 到主节点服务器的上下线。</p>\n<br>\n<h2> <strong>代码实现</strong></h2>\n<h3> 服务端代码</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>zkcase1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>zookeeper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CreateMode</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>zookeeper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WatchedEvent</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>zookeeper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Watcher</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>zookeeper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ZooKeeper</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>zookeeper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ZooDefs</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Ids</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DistributeServer</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> connectString <span class=\"token operator\">=</span> \n<span class=\"token string\">\"hadoop102:2181,hadoop103:2181,hadoop104:2181\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> sessionTimeout <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">private</span> <span class=\"token class-name\">ZooKeeper</span> zk <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> parentNode <span class=\"token operator\">=</span> <span class=\"token string\">\"/servers\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建到 zk 的客户端连接</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getConnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">{</span>\n\n    zk <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZooKeeper</span><span class=\"token punctuation\">(</span>connectString<span class=\"token punctuation\">,</span> sessionTimeout<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> \n<span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WatchedEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 注册服务器</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registServer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hostname<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">{</span>\n \n    <span class=\"token class-name\">String</span> create <span class=\"token operator\">=</span> zk<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>parentNode <span class=\"token operator\">+</span> <span class=\"token string\">\"/server\"</span><span class=\"token punctuation\">,</span> \nhostname<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Ids</span><span class=\"token punctuation\">.</span><span class=\"token constant\">OPEN_ACL_UNSAFE</span><span class=\"token punctuation\">,</span> \n<span class=\"token class-name\">CreateMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EPHEMERAL_SEQUENTIAL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hostname <span class=\"token operator\">+</span><span class=\"token string\">\" is online \"</span><span class=\"token operator\">+</span> create<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 业务功能</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">business</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hostname<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">{</span>\n   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hostname <span class=\"token operator\">+</span> <span class=\"token string\">\" is working ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   \n   <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// 1 获取 zk 连接</span>\n    <span class=\"token class-name\">DistributeServer</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DistributeServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">getConnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2 利用 zk 连接注册服务器信息</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">registServer</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 3 启动业务功能</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">business</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"zookeeper 服务器动态上下线监听案例"},["/zookeeper/log/zookeeper-03","/zookeeper/log/zookeeper-03.md"]],
  ["v-4861f12d","/zookeeper/log/zookeeper-04.html",{"d":"2021-10-08T21:13:01.000Z","l":"2021年10月9日","c":["运维技术栈"],"g":["zookeeper"],"e":"<h1> ZooKeeper 分布式锁案例</h1>\n<p>什么叫做分布式锁呢？ 比如说\"进程 1\"在使用该资源的时候，会先去获得锁，\"进程 1\"获得锁以后会对该资源保持独占，这样其他进程就无法访问该资源，\"进程 1\"用完该资源以后就将锁释放掉，让其 他进程来获得锁，那么通过这个锁机制，我们就能保证了分布式系统中多个进程能够有序的 访问该临界资源。那么我们把这个分布式环境下的这个锁叫作分布式锁。</p>\n<figure><img src=\"https://xin997.oss-cn-beijing.aliyuncs.com/xinblogs/webimg-Linux/elks/image-20211221142619853.png\" alt=\"分布式锁案例\" tabindex=\"0\" loading=\"lazy\"><figcaption>分布式锁案例</figcaption></figure>","y":"a","t":"ZooKeeper 分布式锁案例"},["/zookeeper/log/zookeeper-04","/zookeeper/log/zookeeper-04.md"]],
  ["v-4a16c9cc","/zookeeper/log/zookeeper-05.html",{"d":"2021-10-09T21:13:01.000Z","l":"2021年10月10日","c":["运维技术栈"],"g":["zookeeper"],"e":"<h1> 企业面试真题（面试重点）</h1>\n<h2> 选举机制</h2>\n<p>半数机制，超过半数的投票通过，即通过。</p>\n<p>（1）第一次启动选举规则： 投票过半数时，服务器 id 大的胜出<br></p>\n<p>（2）第二次启动选举规则：<br></p>\n<p>①EPOCH 大的直接胜出 <br></p>\n<p>②EPOCH 相同，事务 id 大的胜出<br></p>\n<p>③事务 id 相同，服务器 id 大的胜出<br></p>\n<br>\n<h2> 生产集群安装多少 zk 合适？</h2>\n<p>安装奇数台。</p>\n<p>生产经验：</p>\n<p>⚫ 10 台服务器：3 台 zk；</p>","y":"a","t":"zookeeper 企业面试真题（面试重点）"},["/zookeeper/log/zookeeper-05","/zookeeper/log/zookeeper-05.md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},["/404"]],
  ["v-5dbcc21c","/zookeeper/",{"y":"p","t":"Zookeeper"},["/zookeeper/index.html"]],
  ["v-29bcf9a7","/ceph/log/",{"y":"p","t":"Log"},["/ceph/log/index.html"]],
  ["v-45ff8422","/elk/log/",{"y":"p","t":"Log"},["/elk/log/index.html"]],
  ["v-74485282","/k8s/",{"y":"p","t":"K8s"},["/k8s/index.html"]],
  ["v-4eac8d5f","/linux/log/",{"y":"p","t":"Log"},["/linux/log/index.html"]],
  ["v-f0383c18","/linux/",{"y":"p","t":"Linux"},["/linux/index.html"]],
  ["v-b2e08b1e","/mysql/log/",{"y":"p","t":"Log"},["/mysql/log/index.html"]],
  ["v-eb072ff4","/mysql/",{"y":"p","t":"Mysql"},["/mysql/index.html"]],
  ["v-d5f5db0e","/nginx/log/",{"y":"p","t":"Log"},["/nginx/log/index.html"]],
  ["v-e9a1f7e4","/nginx/",{"y":"p","t":"Nginx"},["/nginx/index.html"]],
  ["v-616dccf2","/zookeeper/log/",{"y":"p","t":"Log"},["/zookeeper/log/index.html"]],
  ["v-5bc93818","/category/",{"y":"p","t":"分类","I":0},["/category/index.html"]],
  ["v-744d024e","/tag/",{"y":"p","t":"标签","I":0},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"y":"p","t":"文章","I":0},["/article/index.html"]],
  ["v-154dc4c4","/star/",{"y":"p","t":"收藏","I":0},["/star/index.html"]],
  ["v-01560935","/timeline/",{"y":"p","t":"时间轴","I":0},["/timeline/index.html"]],
  ["v-57d0c87d","/category/ceph/",{"y":"p","t":"Ceph 分类","I":0},["/category/ceph/index.html"]],
  ["v-219da821","/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/",{"y":"p","t":"分布式存储 标签","I":0},["/tag/分布式存储/","/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/index.html"]],
  ["v-0e39bca4","/category/elasticstack/",{"y":"p","t":"ElasticStack 分类","I":0},["/category/elasticstack/index.html"]],
  ["v-dd55f3f0","/tag/haproxy/",{"y":"p","t":"HAproxy 标签","I":0},["/tag/haproxy/index.html"]],
  ["v-ac0c2a6a","/category/guide/",{"y":"p","t":"Guide 分类","I":0},["/category/guide/index.html"]],
  ["v-61be27cc","/tag/ubuntu/",{"y":"p","t":"Ubuntu 标签","I":0},["/tag/ubuntu/index.html"]],
  ["v-1cf46e7c","/category/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/",{"y":"p","t":"持续集成 分类","I":0},["/category/持续集成/","/category/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/index.html"]],
  ["v-63528cab","/tag/%E8%BF%90%E7%BB%B4%E5%AE%9E%E6%88%98/",{"y":"p","t":"运维实战 标签","I":0},["/tag/运维实战/","/tag/%E8%BF%90%E7%BB%B4%E5%AE%9E%E6%88%98/index.html"]],
  ["v-7eba6c7b","/category/zookeeper/",{"y":"p","t":"zookeeper 分类","I":0},["/category/zookeeper/index.html"]],
  ["v-96d226c2","/tag/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/",{"y":"p","t":"日志收集 标签","I":0},["/tag/日志收集/","/tag/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/index.html"]],
  ["v-f195b4ec","/category/%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E6%A0%88/",{"y":"p","t":"运维技术栈 分类","I":0},["/category/运维技术栈/","/category/%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF%E6%A0%88/index.html"]],
  ["v-c5a9e2d6","/tag/disable/",{"y":"p","t":"disable 标签","I":0},["/tag/disable/index.html"]],
  ["v-65f0f021","/category/k8s/",{"y":"p","t":"k8s 分类","I":0},["/category/k8s/index.html"]],
  ["v-b310d42a","/tag/git/",{"y":"p","t":"Git 标签","I":0},["/tag/git/index.html"]],
  ["v-57f397c7","/category/etcd/",{"y":"p","t":"etcd 分类","I":0},["/category/etcd/index.html"]],
  ["v-7876eec1","/tag/%E4%B8%AD%E9%97%B4%E4%BB%B6/",{"y":"p","t":"中间件 标签","I":0},["/tag/中间件/","/tag/%E4%B8%AD%E9%97%B4%E4%BB%B6/index.html"]],
  ["v-9d681cea","/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/",{"y":"p","t":"中间件 分类","I":0},["/category/中间件/","/category/%E4%B8%AD%E9%97%B4%E4%BB%B6/index.html"]],
  ["v-f42cb762","/tag/%E7%AD%89%E4%BF%9D2.0/",{"y":"p","t":"等保2.0 标签","I":0},["/tag/等保2.0/","/tag/%E7%AD%89%E4%BF%9D2.0/index.html"]],
  ["v-9c48d85a","/category/linux/",{"y":"p","t":"linux 分类","I":0},["/category/linux/index.html"]],
  ["v-b31184f6","/tag/h3c/",{"y":"p","t":"h3c 标签","I":0},["/tag/h3c/index.html"]],
  ["v-51b69ff6","/category/%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84/",{"y":"p","t":"集群架构 分类","I":0},["/category/集群架构/","/category/%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84/index.html"]],
  ["v-a8098304","/tag/k8s%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/",{"y":"p","t":"k8s进阶训练营 标签","I":0},["/tag/k8s进阶训练营/","/tag/k8s%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/index.html"]],
  ["v-65ee5d04","/category/dba/",{"y":"p","t":"DBA 分类","I":0},["/category/dba/index.html"]],
  ["v-3834646c","/tag/k8s-%E8%AE%AD%E7%BB%83%E8%90%A5/",{"y":"p","t":"K8S 训练营 标签","I":0},["/tag/k8s-训练营/","/tag/k8s-%E8%AE%AD%E7%BB%83%E8%90%A5/index.html"]],
  ["v-95b29426","/category/nginx/",{"y":"p","t":"Nginx 分类","I":0},["/category/nginx/index.html"]],
  ["v-257204d2","/tag/kafka/",{"y":"p","t":"Kafka 标签","I":0},["/tag/kafka/index.html"]],
  ["v-8848dfa8","/category/redis/",{"y":"p","t":"Redis 分类","I":0},["/category/redis/index.html"]],
  ["v-2671299e","/tag/zookeeper/",{"y":"p","t":"Zookeeper 标签","I":0},["/tag/zookeeper/index.html"]],
  ["v-78cbe7bb","/category/python/",{"y":"p","t":"python 分类","I":0},["/category/python/index.html"]],
  ["v-5168cad6","/tag/linux-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/",{"y":"p","t":"Linux 学习之旅 标签","I":0},["/tag/linux-学习之旅/","/tag/linux-%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/index.html"]],
  ["v-62a7ba3f","/tag/%E9%AB%98%E5%8F%AF%E7%94%A8/",{"y":"p","t":"高可用 标签","I":0},["/tag/高可用/","/tag/%E9%AB%98%E5%8F%AF%E7%94%A8/index.html"]],
  ["v-613fd344","/tag/linux-%E6%9C%8D%E5%8A%A1/",{"y":"p","t":"Linux 服务 标签","I":0},["/tag/linux-服务/","/tag/linux-%E6%9C%8D%E5%8A%A1/index.html"]],
  ["v-638b7816","/tag/linux%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/",{"y":"p","t":"Linux学习之旅 标签","I":0},["/tag/linux学习之旅/","/tag/linux%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/index.html"]],
  ["v-49627fe2","/tag/network/",{"y":"p","t":"Network 标签","I":0},["/tag/network/index.html"]],
  ["v-16161f80","/tag/%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84/",{"y":"p","t":"集群架构 标签","I":0},["/tag/集群架构/","/tag/%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84/index.html"]],
  ["v-22f79d1c","/tag/%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%A7%8B/",{"y":"p","t":"集群架構 标签","I":0},["/tag/集群架構/","/tag/%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%A7%8B/index.html"]],
  ["v-cbeda2d6","/tag/%E8%AF%BE%E7%A8%8B%E5%AE%9E%E6%88%98/",{"y":"p","t":"课程实战 标签","I":0},["/tag/课程实战/","/tag/%E8%AF%BE%E7%A8%8B%E5%AE%9E%E6%88%98/index.html"]],
  ["v-28c3d09c","/tag/lnmp/",{"y":"p","t":"LNMP 标签","I":0},["/tag/lnmp/index.html"]],
  ["v-b313c78c","/tag/dba/",{"y":"p","t":"DBA 标签","I":0},["/tag/dba/index.html"]],
  ["v-0d3d2eb2","/tag/rdbms/",{"y":"p","t":"RDBMS 标签","I":0},["/tag/rdbms/index.html"]],
  ["v-1d040e03","/tag/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/",{"y":"p","t":"主从复制 标签","I":0},["/tag/主从复制/","/tag/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/index.html"]],
  ["v-326b4600","/tag/dba---rdbms---%E9%AB%98%E5%8F%AF%E7%94%A8/",{"y":"p","t":"DBA - RDBMS - 高可用 标签","I":0},["/tag/dba---rdbms---高可用/","/tag/dba---rdbms---%E9%AB%98%E5%8F%AF%E7%94%A8/index.html"]],
  ["v-b30b6bd2","/tag/mha/",{"y":"p","t":"MHA 标签","I":0},["/tag/mha/index.html"]],
  ["v-1a8900ba","/tag/nginx/",{"y":"p","t":"Nginx 标签","I":0},["/tag/nginx/index.html"]],
  ["v-0b8180e0","/tag/rsync/",{"y":"p","t":"Rsync 标签","I":0},["/tag/rsync/index.html"]],
  ["v-ce1020a8","/tag/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/",{"y":"p","t":"网络协议 标签","I":0},["/tag/网络协议/","/tag/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/index.html"]],
  ["v-288e4719","/tag/http/",{"y":"p","t":"Http 标签","I":0},["/tag/http/index.html"]],
  ["v-25365ef3","/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/",{"y":"p","t":"数据库 标签","I":0},["/tag/数据库/","/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/index.html"]],
  ["v-3e76b6b2","/tag/session/",{"y":"p","t":"session 标签","I":0},["/tag/session/index.html"]],
]
