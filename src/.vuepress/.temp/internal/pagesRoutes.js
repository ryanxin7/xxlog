export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","t":"濼鑫的知识库","i":"home"},["/index.html","/README.md"]],
  ["v-2e3eac9e","/slides.html",{"e":"<!-- markdownlint-disable MD024 MD033 MD051 -->\n","y":"s","t":"Slide page","i":"slides"},["/slides","/slides.md"]],
  ["v-74bc627b","/about/",{"d":"2020-07-28T11:27:08.000Z","l":"2020年7月28日","e":"<br>\n<p><strong>2020</strong> 年毕业后为了“混口饭吃”便开启了运维开发的升级之路，在升级的过程中，我发现我很喜欢“<strong>折腾</strong>”🤔。</p>\n<p>结果折腾了半天遇到了一些“相当大的问题”，一是时间长了脑子记不住下次用到的时候还得折腾一遍，效率太低；二是和朋友吹水时不便于我出示证明我实力的关键证据😂，三是“有点东西”不是好找点工作吗🙈？</p>\n<p><strong>说到底，那你最终还是得卷起来啊！</strong></p>\n<br>\n<p>为捋清脑袋中无序的片段，于是我开始在此进行记录📝。</p>\n<br>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">不要在该奋斗的年纪选择安逸，在这记录了我成长的脚步。</p>\n<p>如果你喜欢，或者想与我交流，可以点击上方头像下的图标。</p>\n<p>再次感谢你的关注与阅读。</p>\n</div>","y":"a","t":"关于"},["/about/index.html","/about/README.md"]],
  ["v-1465b23c","/ceph/",{"d":"2023-01-01T12:12:22.000Z","l":"2023年1月1日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph 是一个开源的分布式存储系统，同时支持对象存储、块设备、文件系统。</strong><br>ceph 是一个对象(object)式存储系统，它把每一个待管理的数据流(文件等数据)切分为一到多个固定大小(默认 4 兆)的对象数据,，并以其为原子单元(原子是构成元素的最小单元)完成数据的读写。<br>对象数据的底层存储服务是由多个存储主机(host)组成的存储集群，该集群也被称之为<strong>RADOS(reliable automatic distributed obiect store</strong>)存储集群，即可靠的、自动化的、分布式的对象存储系统。<br><strong>librados</strong> 是 RADOS 存储集群的 API，支持 C/C++/JAVA/python/ruby/php/go等编程语言客户端</p>","y":"a","t":"Ceph"},["/ceph/index.html","/ceph/README.md"]],
  ["v-4a0dc89a","/haproxy/",{"g":["HAproxy"],"e":"<p><a name=\"rwDmz\"></a></p>\n<h2> 一、负载均衡简介 <br></h2>\n<p>负载均衡(Load Balance，简称LB)是一种服务或基于硬件设备等实现的高可用反向代理技术，负载均衡将特定的业务(web服务、网络流量等)分担给指定的一个或多个后端特定的服务器或设备，从而提高了公司业务的并发处理能力、保证了业务的高可用性、方便了业务后期的水平动态扩展 。</p>\n<p><a name=\"yfLnN\"></a></p>\n<h3> 1.1 为什么使用负载均衡 <br></h3>\n<ul>\n<li>Web服务器的动态水平扩展--&gt;对用户无感知</li>\n<li>增加业务并发访问及处理能力--&gt;解决单服务器瓶颈问题</li>\n<li>节约公网IP地址--&gt;降低IT支出成本</li>\n<li>隐藏内部服务器IP--&gt;提高内部服务器安全性</li>\n<li>配置简单--&gt;固定格式的配置文件</li>\n<li>功能丰富--&gt;支持四层和七层，支持动态下线主机</li>\n<li>性能较强--&gt;并发数万甚至数十万 <br> <br>\n<a name=\"EO2f2\"></a></li>\n</ul>","y":"a","t":"HAProxy","i":"fuzaijunheng"},["/haproxy/index.html","/haproxy/README.md"]],
  ["v-dc384366","/redis/",{"d":"2020-08-01T21:11:31.000Z","l":"2020年8月2日","e":"<p>用户访问的过程中会产生各种各样的数据，为了让网站能够正常的运行，并且高效的让用户精准的看到相应的数据，我们就会在不同业务功能场景中采用各种各样的数据类型来进行承载。</p>\n","y":"a","t":"Redis"},["/redis/index.html","/redis/README.md"]],
  ["v-03082396","/statuspage/",{"c":["Guide"],"g":["disable"],"e":"<p>施工中。。。</p>\n","y":"a","t":"updating","i":"config","O":3},["/statuspage/index.html","/statuspage/README.md"]],
  ["v-b8d923aa","/xj/git.html",{"d":"2022-06-02T12:12:22.000Z","l":"2022年6月2日","c":["持续集成"],"g":["Git"],"n":true,"y":"a","t":"Git常用命令与常见问题"},["/xj/git","/xj/git.md"]],
  ["v-2d0acde4","/xj/",{"c":["Guide"],"g":["disable"],"n":true,"y":"a","t":"小记","i":"exercise","O":3},["/xj/index.html","/xj/README.md"]],
  ["v-2d0acf77","/xw/",{"e":"<h2> 12期英语应试技巧提升直播课</h2>\n<p>1.<a href=\"/xw/yd/\" target=\"blank\">阅读理解</a></p>\n<p><a href=\"/xw/yf/\" target=\"blank\">2.语法与结构</a></p>\n<p><a href=\"/xw/wx/\" target=\"blank\">3.完型填空</a></p>\n<p><a href=\"/xw/yyh/\" target=\"blank\">4.汉译英</a></p>\n<p><a href=\"/xw/xw/tc/\" target=\"blank\">5.挑错</a></p>\n<p><a href=\"/xw/yxh/\" target=\"blank\">6.英译汉</a></p>","y":"a","t":"知识点","i":"creative"},["/xw/index.html","/xw/README.md"]],
  ["v-7ae5b7e8","/ceph/log/1.Ceph%E7%AE%80%E4%BB%8B.html",{"d":"2023-01-01T12:12:22.000Z","l":"2023年1月1日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph 是一个开源的分布式存储系统，同时支持对象存储、块设备、文件系统。</strong><br></p>\n<br>\n<p>ceph 是一个对象(object)式存储系统，它把每一个待管理的数据流(文件等数据)切分为一到多个固定大小(默认 4 兆)的对象数据,，并以其为原子单元(原子是构成元素的最小单元)完成数据的读写。<br></p>\n<br>\n<p>对象数据的底层存储服务是由多个存储主机(host)组成的存储集群，该集群也被称之为<strong>RADOS(reliable automatic distributed obiect store</strong>)存储集群，即可靠的、自动化的、分布式的对象存储系统。<br></p>","y":"a","t":"1.Ceph 简介"},["/ceph/log/1.Ceph简介.html","/ceph/log/1.Ceph%E7%AE%80%E4%BB%8B","/ceph/log/1.Ceph简介.md","/ceph/log/1.Ceph%E7%AE%80%E4%BB%8B.md"]],
  ["v-6620d428","/ceph/log/10.%20ceph-dashboard%E5%8F%8A%E7%9B%91%E6%8E%A7.html",{"d":"2023-01-11T12:12:22.000Z","l":"2023年1月11日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph dashboard</strong>是通过一个 web界面，对已经运行的ceph集群进行状态查看及功能配置等功能，早期ceph使用的是第三方的dashboard组件，如:</p>\n<p>**Calamari: **<br><strong>Calamari</strong> 对外提供了十分漂亮的Web管理和监控界面，以及一套改进的REST API接口(不同于Ceph自身的REST API)，在一定程度上简化了Ceph的管理，最初Calamari是作为 Inktank公司的Ceph企业级商业产品来销售，红帽2015年收购Inktank 后为了更好地推动Ceph的发展，对外宣布Calamari 开源<br><a href=\"https://github.com/ceph/calamari\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/ceph/calamari</a><br><strong>优点:</strong></p>","y":"a","t":"10.Ceph Dashboard及监控"},["/ceph/log/10. ceph-dashboard及监控.html","/ceph/log/10.%20ceph-dashboard%E5%8F%8A%E7%9B%91%E6%8E%A7","/ceph/log/10. ceph-dashboard及监控.md","/ceph/log/10.%20ceph-dashboard%E5%8F%8A%E7%9B%91%E6%8E%A7.md"]],
  ["v-f56deeac","/ceph/log/3.Ceph-FS%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8.html",{"d":"2023-01-02T12:12:22.000Z","l":"2023年1月2日","c":["Ceph"],"g":["分布式存储"],"e":"<p><a href=\"https://docs.ceph.com/en/latest/cephfs/\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.ceph.com/en/latest/cephfs/</a><br><a href=\"https://docs.ceph.com/en/latest/cephfs/\" target=\"_blank\" rel=\"noopener noreferrer\">链接</a></p>\n<blockquote>\n<p>Ceph FS即<strong>Ceph Filesy Stem</strong>,可以实现文件系统共享功能,客户端通过ceph协议挂载并使用ceph集群作为数据存储服务器。</p>\n</blockquote>","y":"a","t":"3.Ceph-FS 文件存储"},["/ceph/log/3.Ceph-FS文件存储.html","/ceph/log/3.Ceph-FS%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8","/ceph/log/3.Ceph-FS文件存储.md","/ceph/log/3.Ceph-FS%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8.md"]],
  ["v-3d902164","/ceph/log/4.Ceph%E9%9B%86%E7%BE%A4%E7%BB%B4%E6%8A%A4.html",{"d":"2023-01-03T12:12:22.000Z","l":"2023年1月3日","c":["Ceph"],"g":["分布式存储"],"e":"<p>ceph集群配置、部署与运维<br><a href=\"http://docs.ceph.org.cn/rados/\" target=\"_blank\" rel=\"noopener noreferrer\">http://docs.ceph.org.cn/rados/</a></p>\n<h2> 4.1:通过套接字进行单机管理</h2>\n<p>每个node节点上都有不同数量的OSD数量</p>\n<p>启动osd进程会在 /var/run/ceph下生成soke文件</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">ls</span> /var/run/ceph\nceph-osd.0.asok<span class=\"token operator\">=</span>\nceph-osd.1.asok<span class=\"token operator\">=</span>\nceph-osd.2.asok<span class=\"token operator\">=</span>\nceph-osd.3.asok<span class=\"token operator\">=</span>\nceph-osd.4.asok<span class=\"token operator\">=</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"4.Ceph 集群维护"},["/ceph/log/4.Ceph集群维护.html","/ceph/log/4.Ceph%E9%9B%86%E7%BE%A4%E7%BB%B4%E6%8A%A4","/ceph/log/4.Ceph集群维护.md","/ceph/log/4.Ceph%E9%9B%86%E7%BE%A4%E7%BB%B4%E6%8A%A4.md"]],
  ["v-080856db","/ceph/log/5.%20CephX%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6.html",{"d":"2023-01-04T12:12:22.000Z","l":"2023年1月4日","c":["Ceph"],"g":["分布式存储"],"e":"<p><strong>Ceph使用cephx协议对客户端进行身份认证</strong><br>cephx用于对ceph保存的数据进行认证访问和授权，用于对访问ceph的请求进行认证和授权检测，与mon通信的请求都要经过ceph认证通过，但是也可以在mon节点关闭cephx认证，但是关闭认证之后任何访问都将被允许，因此无法保证数据的安全性,</p>\n<h3> 5.1 授权流程</h3>\n<p>每个mon节点都可以对客户端进行身份认证并分发秘钥，因此多个mon节点就不存在单点故障和认证性能瓶颈。<br>mon节点会返回用于身份认证的数据结构，其中包含获取ceph服务时用到的<strong>session key</strong>,<br><strong>session key</strong>通过客户端秘钥进行加密，秘钥是在客户端提前配置好的，<br><code>/etc/ceph/ceph.client.admin.keyring</code></p>","y":"a","t":"5.CephX 认证机制"},["/ceph/log/5. CephX认证机制.html","/ceph/log/5.%20CephX%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6","/ceph/log/5. CephX认证机制.md","/ceph/log/5.%20CephX%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6.md"]],
  ["v-67455c97","/ceph/log/6.%20Ceph-RBD%E4%BD%BF%E7%94%A8.html",{"d":"2023-01-05T12:12:22.000Z","l":"2023年1月5日","c":["Ceph"],"g":["分布式存储"],"e":"<h2> 6.1 RBD架构图</h2>\n<p>Ceph可以同时提供对象存储<strong>RADOSGW</strong> 、<strong>块存储RBD</strong>、<strong>文件系统存储Ceph FS</strong><br>RBD即<strong>RADOS Block Device</strong>的简称，RIBD 块存储是常用的存储类型之一，RBD块设备类似磁盘可以被挂载，RBD 块设备具有快照、多副本、克隆和一致性等特性，数据以条带化的方式存储在Ceph集群的多个OSD中，<br><strong>条带化技术</strong>就是一种自动的将1/0 的负载均衡到多个物理磁盘上的技术，条带化技术就是将一块连续的数据分成很多小部分并把他们分别存储到不同磁盘上去.这就能使多个进程同时访问数据的多个不同部分而不会造成磁盘冲突，而且在需要对这种数据进行顺序访问的时候可以获得最大程度上的/O并行能力，从而获得非常好的性能。</p>","y":"a","t":"6.Ceph RBD"},["/ceph/log/6. Ceph-RBD使用.html","/ceph/log/6.%20Ceph-RBD%E4%BD%BF%E7%94%A8","/ceph/log/6. Ceph-RBD使用.md","/ceph/log/6.%20Ceph-RBD%E4%BD%BF%E7%94%A8.md"]],
  ["v-1900f781","/ceph/log/7.%20Ceph-FS%E4%BD%BF%E7%94%A8.html",{"d":"2023-01-06T12:12:22.000Z","l":"2023年1月6日","c":["Ceph"],"g":["分布式存储"],"e":"<p>ceph FS即<strong>ceph filesystem</strong>，<strong>可以实现文件系统共享功能</strong>，客户端通过ceph协议挂载并使用ceph集群作为数据存储服务器。 （类似NFS）</p>\n<p><strong>Ceph FS需要运行Meta Data Services(MDS)服务</strong>，其守护进程为<strong>ceph-mds</strong>, <strong>ceph-mds</strong><br>进程管理与Ceph FS上存储的文件相关的元数据，并协调对ceph存储集群的访问。<br><a href=\"http://docs.ceph.org.cn/cephfs/\" target=\"_blank\" rel=\"noopener noreferrer\">http://docs.ceph.org.cn/cephfs/</a><br><strong>Ceph FS</strong>的元数据使用的动态子树分区,把元数据划分名称空间对应到不同的mds,写入元数据的时候将元数据按照名称保存到不同主mds上，有点类似于nginx中的缓存目录分层一样。但是最终元数据都会保存在ceph 元数据池中。</p>","y":"a","t":"7.Ceph FS"},["/ceph/log/7. Ceph-FS使用.html","/ceph/log/7.%20Ceph-FS%E4%BD%BF%E7%94%A8","/ceph/log/7. Ceph-FS使用.md","/ceph/log/7.%20Ceph-FS%E4%BD%BF%E7%94%A8.md"]],
  ["v-62950d28","/ceph/log/8.%20%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%BD%91%E5%85%B3RGW.html",{"d":"2023-01-07T12:12:22.000Z","l":"2023年1月7日","c":["Ceph"],"g":["分布式存储"],"e":"<p>Ceph中独立的服务如果不用可以不启用。 类似阿里云OSS对象存储。遵循亚马逊S3标准数据存在bucket中</p>\n<p>官方文档：<code>http:/docs.ceph.org.cn/radosgw/</code><br>数据不需要放置在目录层次结构中，而是存在于平面地址空间内的同一级别，<br>应用通过唯一地址来识别每个单独数据对象。访问的时候传递的URL是固定的。<br>每个对象可包含有助于检索的元数据通过<strong>RESTful API</strong>在应用级别(而非用户级别)进行访问</p>\n<figure><img src=\"https://cdn.nlark.com/yuque/0/2022/png/33538388/1670115995731-8365768d-7000-4b53-bb69-720c439963c1.png#averageHue=%23dfead6&amp;clientId=u70cd63aa-3a6c-4&amp;from=paste&amp;height=528&amp;id=uf8f0801a&amp;originHeight=528&amp;originWidth=700&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=154497&amp;status=done&amp;style=none&amp;taskId=ucb4fde10-b7b8-4251-8792-b0219aaecf6&amp;title=&amp;width=700\" alt=\"image.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>image.png</figcaption></figure>","y":"a","t":"8.RGW对象存储网关"},["/ceph/log/8. 对象存储网关RGW.html","/ceph/log/8.%20%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%BD%91%E5%85%B3RGW","/ceph/log/8. 对象存储网关RGW.md","/ceph/log/8.%20%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%BD%91%E5%85%B3RGW.md"]],
  ["v-070e3d0e","/ceph/log/9.%20ceph-crush%E8%BF%9B%E9%98%B6.html",{"d":"2023-01-07T12:12:22.000Z","l":"2023年1月7日","c":["Ceph"],"g":["分布式存储"],"e":"<p>场景：集群内有固态和机械硬盘 如何让不重要的业务放到机械盘。 <br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/33538388/1670239925327-b0a6d81f-d49f-457f-ab71-329245a2c645.png#averageHue=%23393b32&amp;clientId=ufb959e2a-6a7c-4&amp;from=paste&amp;height=597&amp;id=u46e8ba1b&amp;originHeight=597&amp;originWidth=627&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=570319&amp;status=done&amp;style=none&amp;taskId=uf860e4b3-a99e-4ee3-9a9d-e44aecef7e5&amp;title=&amp;width=627\" alt=\"image.png\" loading=\"lazy\"></p>","y":"a","t":"9.Ceph crush算法进阶"},["/ceph/log/9. ceph-crush进阶.html","/ceph/log/9.%20ceph-crush%E8%BF%9B%E9%98%B6","/ceph/log/9. ceph-crush进阶.md","/ceph/log/9.%20ceph-crush%E8%BF%9B%E9%98%B6.md"]],
  ["v-1715ae3e","/haproxy/log/Haproxy-1.html",{"d":"2023-02-04T12:12:22.000Z","l":"2023年2月4日","e":"<h2> 三、HAProxy安装及基础配置</h2>\n<p>介绍HAProxy的基础安装及基础配置</p>\n<p><a name=\"lz77Z\"></a></p>\n<h3> 3.1 源码包安装</h3>\n<p>官方提供了Ubuntu和Debian的包，没有Centos的包<br><img src=\"http://cdn1.ryanxin.live/1675997727329-efbe55ed-cb1e-4446-b7d2-40fd13d1031b.png\" alt=\"\" loading=\"lazy\"></p>\n<hr>\n<figure><img src=\"https://cdn.nlark.com/yuque/0/2023/png/33538388/1675997822880-a7a98a7a-9d66-4040-902e-4575f17bcaf5.png#averageHue=%23dedddc&amp;clientId=u5305db92-c2f2-4&amp;from=paste&amp;height=717&amp;id=u17b5b1fb&amp;name=image.png&amp;originHeight=717&amp;originWidth=1001&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=94764&amp;status=done&amp;style=none&amp;taskId=u6a352590-2238-493b-a951-644948b1a6e&amp;title=&amp;width=1001\" alt=\"image.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>image.png</figcaption></figure>","y":"a","t":"1.HAProxy-安装及基础配置"},["/haproxy/log/Haproxy-1","/haproxy/log/Haproxy-1.md"]],
  ["v-18ca86dd","/haproxy/log/Haproxy-2.html",{"d":"2023-02-05T12:12:22.000Z","l":"2023年2月5日","e":"<h2> 四、基础配置详解</h2>\n<p>官方文档：<a href=\"http://cbonte.github.io/haproxy-dconv/2.6/configuration.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://cbonte.github.io/haproxy-dconv/2.6/configuration.html</a></p>\n<p>HAProxy 的配置文件<strong>haproxy.cfg</strong>由两大部分组成，分别是<strong>global</strong>和<strong>proxies</strong>部分</p>","y":"a","t":"2.HAProxy-基础配置详解"},["/haproxy/log/Haproxy-2","/haproxy/log/Haproxy-2.md"]],
  ["v-1a7f5f7c","/haproxy/log/Haproxy-3.html",{"d":"2023-02-06T12:12:22.000Z","l":"2023年2月6日","e":"<h2> 五、HAProxy调度算法</h2>\n<p>HAProxy通过固定参数  **balance ** 指明对后端服务器的调度算法，该参数可以配置在listen或backend选项中。  <br> HAProxy的调度算法分为静态和动态调度算法，但是有些算法可以根据参数在静态和动态算法中相互转换。</p>\n<p>官方文档：<a href=\"http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#balance\" target=\"_blank\" rel=\"noopener noreferrer\">http://cbonte.github.io/haproxy-dconv/2.6/configuration.html#balance</a></p>","y":"a","t":"3.HAProxy-调度算法"},["/haproxy/log/Haproxy-3","/haproxy/log/Haproxy-3.md"]],
  ["v-1c34381b","/haproxy/log/Haproxy-4.html",{"d":"2023-02-07T12:12:22.000Z","l":"2023年2月7日","e":"<p><a name=\"PyKn5\"></a></p>\n<h2> 六、HAProxy https实现</h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token comment\">#配置HAProxy支持https协议，支持ssl会话；</span>\n<span class=\"token builtin class-name\">bind</span> *:443 ssl crt /<span class=\"token environment constant\">PATH</span>/TO/SOME_PEM_FILE   \n\n<span class=\"token comment\">#crt 后证书文件为PEM格式，且同时包含证书和所有私钥   </span>\n <span class=\"token function\">cat</span>  demo.crt demo.key <span class=\"token operator\">&gt;</span> demo.pem \n\n<span class=\"token comment\">#把80端口的请求重向定443</span>\n<span class=\"token builtin class-name\">bind</span> *:80\nredirect scheme https <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">{</span> ssl_fc <span class=\"token punctuation\">}</span>    \n\n<span class=\"token comment\">#向后端传递用户请求的协议和端口（frontend或backend）</span>\nhttp_request set-header X-Forwarded-Port %<span class=\"token punctuation\">[</span>dst_port<span class=\"token punctuation\">]</span>\nhttp_request add-header X-Forwared-Proto https <span class=\"token keyword\">if</span> <span class=\"token punctuation\">{</span> ssl_fc <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"4.HAProxy-https实现"},["/haproxy/log/Haproxy-4","/haproxy/log/Haproxy-4.md"]],
  ["v-3d00cf9e","/haproxy/log/",{"g":["HAproxy"],"e":"<p><a name=\"rwDmz\"></a></p>\n<h2> 一、负载均衡简介 <br></h2>\n<p>负载均衡(Load Balance，简称LB)是一种服务或基于硬件设备等实现的高可用反向代理技术，负载均衡将特定的业务(web服务、网络流量等)分担给指定的一个或多个后端特定的服务器或设备，从而提高了公司业务的并发处理能力、保证了业务的高可用性、方便了业务后期的水平动态扩展 。</p>\n<p><a name=\"yfLnN\"></a></p>\n<h3> 1.1 为什么使用负载均衡 <br></h3>\n<ul>\n<li>Web服务器的动态水平扩展--&gt;对用户无感知</li>\n<li>增加业务并发访问及处理能力--&gt;解决单服务器瓶颈问题</li>\n<li>节约公网IP地址--&gt;降低IT支出成本</li>\n<li>隐藏内部服务器IP--&gt;提高内部服务器安全性</li>\n<li>配置简单--&gt;固定格式的配置文件</li>\n<li>功能丰富--&gt;支持四层和七层，支持动态下线主机</li>\n<li>性能较强--&gt;并发数万甚至数十万 <br> <br>\n<a name=\"EO2f2\"></a></li>\n</ul>","y":"a","t":"简介"},["/haproxy/log/index.html","/haproxy/log/README.md"]],
  ["v-55c04c62","/k8s/log/kubernetes-1.html",{"d":"2022-06-01T12:12:22.000Z","l":"2022年6月1日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a href=\"https://www.yuque.com/attachments/yuque/0/2023/pdf/33538388/1672721011349-4455b094-61ee-4956-a375-07ad6fc387a1.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">k8s-实战案例_v1.21.x-部署.pdf</a></p>\n<p><a name=\"lXlPc\"></a></p>\n<h2> 1.基础环境配置</h2>\n<p><a name=\"jRBYX\"></a></p>\n<h3> 1.1 时间同步</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n\n<span class=\"token function\">cat</span> /etc/default/locale\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>en_US.UTF-8\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">LC_TIME</span></span><span class=\"token operator\">=</span>en_DK.UTF-8 \n\n\n*/5 * * * * /usr/sbin/ntpdate time1.aliyun.com <span class=\"token operator\">&amp;&gt;</span> /dev/null <span class=\"token operator\">&amp;&amp;</span> hwclock -w/usr/sbin/ntpdate\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"1.kubernetes 二进制部署"},["/k8s/log/kubernetes-1","/k8s/log/kubernetes-1.md"]],
  ["v-627c4440","/k8s/log/kubernetes-10.html",{"d":"2022-06-10T12:12:22.000Z","l":"2022年6月10日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a href=\"https://cn.wordpress.org/download/releases/\" target=\"_blank\" rel=\"noopener noreferrer\">https://cn.wordpress.org/download/releases/</a></p>\n<p><a name=\"m05Oo\"></a></p>\n<h2> 1.准备PHP镜像</h2>\n<p><a name=\"q3lxf\"></a></p>\n<h3> 官方PHP镜像</h3>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code>root@harbor01<span class=\"token punctuation\">[</span>09:20:39<span class=\"token punctuation\">]</span>/dockerfile/web/wordpress <span class=\"token comment\">#:docker pull php:5.6.40-fpm</span>\n\nroot@harbor01<span class=\"token punctuation\">[</span>09:21:35<span class=\"token punctuation\">]</span>/dockerfile/web/wordpress <span class=\"token comment\">#:docker tag php:5.6.40-fpm harbor.ceamg.com/baseimages/php-fpm:5.6.40</span>\nroot@harbor01<span class=\"token punctuation\">[</span>09:23:12<span class=\"token punctuation\">]</span>/dockerfile/web/wordpress <span class=\"token comment\">#:docker push harbor.ceamg.com/baseimages/php-fpm:5.6.40</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"10.实战案例-WordPress"},["/k8s/log/kubernetes-10","/k8s/log/kubernetes-10.md"]],
  ["v-64311cdf","/k8s/log/kubernetes-11.html",{"d":"2022-06-11T12:12:22.000Z","l":"2022年6月11日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p>Apache Dubbo 最初在 2008 年由 Alibaba 捐献开源，很快成为了国内开源服务框架选型的事实标准框架 ，得到了各行各业的广泛应用。在 2017 年，Dubbo 正式捐献到 Apache 软件基金会并成为 Apache 顶级项目 。</p>\n<p>Apache Dubbo 是一款 RPC 服务开发框架，用于解决微服务架构下的服务治理与通信问题，官方提供了 Java、Golang 等多语言 SDK 实现。使用 Dubbo 开发的微服务原生具备相互之间的远程地址发现与通信能力， 利用 Dubbo 提供的丰富服务治理特性，可以实现诸如服务发现、负载均衡、流量调度等服务治理诉求。Dubbo 被设计为高度可扩展，用户可以方便的实现流量拦截、选址的各种定制逻辑。</p>","y":"a","t":"11.实战案例-基于zookeeper实现微服务动态注册和发现"},["/k8s/log/kubernetes-11","/k8s/log/kubernetes-11.md"]],
  ["v-65e5f57e","/k8s/log/kubernetes-12.html",{"d":"2022-06-12T12:12:22.000Z","l":"2022年6月12日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"qARQK\"></a></p>\n<h2> Ingress和Ingress控制器介绍</h2>\n<p>在k8s中将一个服务暴露出去通常会使用NodePort或LoadBalancer类型的Service，但随着服务数量的增多，使用NodePort会存在一些问题，可用作NodePort的端口是一个有限的范围，不容易记忆，不好管理。另外， 如果在公有云使用LoadBalancer类型的Service上会产生额外的成本。</p>\n<p>所以k8s提供了另一种方式，使用Ingress和Ingress控制器来对外暴露服务，Ingress控制器作为统一的流量入口，管理内部各种必要的服务，并通过Ingress资源来描述如何区分流量及内部的路由逻辑。有了Ingress和Ingress控制器，就可以通过定义路由流量的规则来实现服务发布，而无需创建NodePort或LoadBalancer类型的Service，并且流量也会由Ingress控制器直达Pod，不需要再由Service转发。</p>","y":"a","t":"12.ingress 实现基于域名的多虚拟主机,URL转发及多域名HTTPS实现案例"},["/k8s/log/kubernetes-12","/k8s/log/kubernetes-12.md"]],
  ["v-679ace1d","/k8s/log/kubernetes-13.html",{"d":"2022-06-13T12:12:22.000Z","l":"2022年6月13日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"aiJuT\"></a></p>\n<h2> 1.HPA简介</h2>\n<p>HPA（Horizontal Pod Autoscaler），Pod水平自动缩放器，可以根据Pod的负载动态调整Pod的副本数量，业务高峰期自动扩容Pod副本以满足业务请求。在业务低峰期自动缩容Pod，实现节约资源的目的。</p>\n<p>与HPA相对的是VPA （Vertical Pod Autoscaler），Pod垂直自动缩放器，可以基于Pod的资源利用率，调整对单个Pod的最大资源限制，不能与HPA同时使用。</p>\n<p>HPA隶属于autoscaling API群组目前主要有v1和v2两个版本：</p>","y":"a","t":"13.HPA自动伸缩pod数量"},["/k8s/log/kubernetes-13","/k8s/log/kubernetes-13.md"]],
  ["v-694fa6bc","/k8s/log/kubernetes-14.html",{"d":"2022-06-14T12:12:22.000Z","l":"2022年6月14日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<h2> 1.发布方式解读</h2>\n<h3> 1.1 金丝雀发布</h3>\n<p>金丝雀发布这个术语源自20世纪初期，当时英国的煤矿工人在下井采矿之前，会把笼养的金丝雀携带到矿井中，如果矿井中一氧化碳等有毒气体的浓度过高，在影响矿工之前，金丝雀相比人类表现的更加敏感快速，金丝雀中毒之后，煤矿工人就知道该立刻撤离。<br>金丝雀发布是在将整个软件的新版本发布给所有用户之前，先发布给部分用户，用真实的客户流量来测试，以保证软件不会出现严重问题，降低发布风险。</p>\n<p>在实践中，金丝雀发布一般会先发布到一个小比例的机器，比如 2% 的服务器做流量验证，然后从中快速获得反馈，根据反馈决定是扩大发布还是回滚。金丝雀发布通常会结合监控系统，通过监控指标，观察金丝雀机器的健康状况。如果金丝雀测试通过，则把剩余的机器全部升级成新版本，否则回滚代码。</p>","y":"a","t":"14.K8S 持续集成与部署"},["/k8s/log/kubernetes-14","/k8s/log/kubernetes-14.md"]],
  ["v-57752501","/k8s/log/kubernetes-2.html",{"d":"2022-06-02T12:12:22.000Z","l":"2022年6月2日","c":["k8s","etcd"],"g":["k8s进阶训练营"],"e":"<p>etcd是CoreOS团队于2013年6月发起的开源项目，它的目标是构建一个高可用的分 布式键值(key-value)数据库。etcd内部采用raft协议作为-致性算法，etcd基于Go语言实现。</p>\n<p>官方网站：<a href=\"https://etcd.io\" target=\"_blank\" rel=\"noopener noreferrer\">https://etcd.io</a><br>github地址: <a href=\"https://github.com/etcd-io/etcd\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/etcd-io/etcd</a><br>官方硬件推荐：<a href=\"https://etcd.io/docs/v3.4/op-guide/hardware/\" target=\"_blank\" rel=\"noopener noreferrer\">https://etcd.io/docs/v3.4/op-guide/hardware/</a></p>","y":"a","t":"2.etcd 客户端使用、数据备份与恢复"},["/k8s/log/kubernetes-2","/k8s/log/kubernetes-2.md"]],
  ["v-5929fda0","/k8s/log/kubernetes-3.html",{"d":"2022-06-03T12:12:22.000Z","l":"2022年6月3日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"OkmdV\"></a></p>\n<h2> 1. yaml格式</h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code>人员名单:\n  张三:\n    年龄: <span class=\"token number\">18</span> <span class=\"token comment\">#</span>\n    职业: Linux运维工程师\n    爱好:\n      - 看书\n      - 学习\n      - 加班\n     \n  李四:\n    年龄: <span class=\"token number\">20</span>\n    职业: Java开发工程师 <span class=\"token comment\"># 这是职业</span>\n    爱好:\n      - 开源技术\n      - 微服务\n      - 分布式存储\n\n\n大小写敏感\n使用缩进表示层级关系\n 缩进时不允许使用Tal键，只允许使用空格\n 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可\n 使用”<span class=\"token comment\">#” 表示注释，从这个字符一直到行尾，都会被解析器忽略</span>\n 比json更适用于配置文件\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"3. yaml文件语法基础"},["/k8s/log/kubernetes-3","/k8s/log/kubernetes-3.md"]],
  ["v-5aded63f","/k8s/log/kubernetes-4.html",{"d":"2022-06-04T12:12:22.000Z","l":"2022年6月4日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<figure><img src=\"http://cdn1.ryanxin.live/1673335368520-3d26b509-0ef8-42a6-8744-fcce0df96dee.png\" alt=\"资源对象\" tabindex=\"0\" loading=\"lazy\"><figcaption>资源对象</figcaption></figure>\n<p><a name=\"jzmM9\"></a></p>\n<h2> 常用命令</h2>\n<figure><img src=\"http://cdn1.ryanxin.live/1673335468699-d16c69d0-45ec-4c1e-8088-800238d2db49.png\" alt=\"常用命令\" tabindex=\"0\" loading=\"lazy\"><figcaption>常用命令</figcaption></figure>","y":"a","t":"4.kubernetesAPI资源对象"},["/k8s/log/kubernetes-4","/k8s/log/kubernetes-4.md"]],
  ["v-5c93aede","/k8s/log/kubernetes-5.html",{"d":"2022-06-05T12:12:22.000Z","l":"2022年6月5日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"Ti5Lf\"></a></p>\n<h2> 自定义镜像-运行nginx与tomcat实现动静分离</h2>\n<figure><img src=\"http://cdn1.ryanxin.live/1673526070905-fa3a6810-3329-4dbd-9896-e1da10114b61.png\" alt=\"构建流程图\" tabindex=\"0\" loading=\"lazy\"><figcaption>构建流程图</figcaption></figure>\n<p><a name=\"IRPqD\"></a></p>\n<h3> 1. 系统基础镜像</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>harbor.ceamg.com/baseimages/centos:7.8.2003\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","y":"a","t":"5.k8s实战案例-nginx与tomcat实现动静分离"},["/k8s/log/kubernetes-5","/k8s/log/kubernetes-5.md"]],
  ["v-5e48877d","/k8s/log/kubernetes-6.html",{"d":"2022-06-06T12:12:22.000Z","l":"2022年6月6日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a name=\"nlbOU\"></a></p>\n<h2> rbd结合k8s提供存储卷及动态存储卷使用案例</h2>\n<blockquote>\n<p><strong>目的：</strong>\n让k8s 中的 pod 可以访问 ceph中rbd 提供的镜像作为存储设备。</p>\n</blockquote>\n<p>需要在 ceph 创建rbd并且让 k8s node 节点能够通过 ceph 的认证k8s在使用 ceph 作为动态存储卷的时候，需要 **kube-controller-manager **组件能够访问ceph，因此需要在包括k8s master及 node节点在内的每一个node 同步认证文件。</p>","y":"a","t":"6.k8s使用ceph实现数据持久化"},["/k8s/log/kubernetes-6","/k8s/log/kubernetes-6.md"]],
  ["v-5ffd601c","/k8s/log/kubernetes-7.html",{"d":"2022-06-07T12:12:22.000Z","l":"2022年6月7日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><strong>Pod状态</strong><br><img src=\"http://cdn1.ryanxin.live/1674895053415-2477036f-d642-41c9-90c7-942d1a238360.png\" alt=\"Pod状态\" loading=\"lazy\"></p>\n<blockquote>\n<p>**第一阶段 **</p>\n<ol>\n<li>**Pending  **正在创建Pod但是Pod中的容器还没有全部被创建完成=[处于此状态的Pod应该检查Pod依赖的存储是否有权限挂载、镜像是否可以下载、调度是否正常等。</li>\n<li>**Failed **Pod中有容器启动失败而导致pod工作异常。</li>\n<li>**Unknown **由于某种原因无法获得pod的当前状态，通常是由于与pod所在的node节点通信错误。</li>\n<li><strong>Succeeded</strong> Pod中的所有容器都被成功终止即pod里所有的containers均已terminated.</li>\n</ol>\n</blockquote>","y":"a","t":"7.Pod的状态和探针"},["/k8s/log/kubernetes-7","/k8s/log/kubernetes-7.md"]],
  ["v-61b238bb","/k8s/log/kubernetes-8.html",{"d":"2022-06-08T12:12:22.000Z","l":"2022年6月8日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p><a href=\"https://kubernetes.io/zh-cn/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/\" target=\"_blank\" rel=\"noopener noreferrer\">https://kubernetes.io/zh-cn/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/</a><br>Pod调度运⾏时，如果应⽤不需要任何稳定的标示、有序的部署、删除和扩展，则应该使⽤⼀组⽆状态副本的控制<br>器来部署应⽤，例如 Deployment 或 ReplicaSet更适合⽆状态服务需求，⽽StatefulSet适合管理所有有状态的服<br>务，⽐如MySQL、 MongoDB集群等。</p>","y":"a","t":"8.实战案例-基于StatefulSetMySQL主从架构"},["/k8s/log/kubernetes-8","/k8s/log/kubernetes-8.md"]],
  ["v-6367115a","/k8s/log/kubernetes-9.html",{"d":"2022-06-09T12:12:22.000Z","l":"2022年6月9日","c":["k8s"],"g":["k8s进阶训练营"],"e":"<p>本次以jenkins.war 包部署⽅式为例运⾏ ，java war包或jar包，且要求jenkins的数据保存⾄外部存储(NFS或者PVC)，其他java应⽤看实际需求是否需要将数据保存⾄外部存储。 <br></p>\n<p><a name=\"PyFag\"></a></p>\n<h2> 构建镜像</h2>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token comment\">#Jenkins Version 2.319.3</span>\nFROM harbor.ceamg.com/pub-images/jdk8:3411\n\nMAINTAINER zcc zcc@qq.com\n\nADD jenkins-2.319.3.war /apps/jenkins/\nADD run_jenkins.sh /usr/bin/\n\nEXPOSE <span class=\"token number\">8080</span>\n\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"/usr/bin/run_jenkins.sh\"</span><span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"9.实战案例-运行java应用"},["/k8s/log/kubernetes-9","/k8s/log/kubernetes-9.md"]],
  ["v-c9abf226","/k8s/log/",{"g":["K8S 训练营"],"e":"<figure><img src=\"http://cdn1.ryanxin.live/image.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>\n<p><img src=\"http://cdn1.ryanxin.live/1672103988640-94e7cad6-e070-4b5f-be58-2ed79f41d965.png\" alt=\"\" loading=\"lazy\">\n<a name=\"jhzMg\"></a></p>\n<h2> kubernetes API Server简介</h2>\n","y":"a","t":"K8S 简介","i":"creative"},["/k8s/log/index.html","/k8s/log/README.md"]],
  ["v-2534b538","/redis/log/",{"d":"2020-08-01T21:11:31.000Z","l":"2020年8月2日","c":["Redis"],"g":["数据库"],"e":"<p>用户访问的过程中会产生各种各样的数据，为了让网站能够正常的运行，并且高效的让用户精准的看到相应的数据，我们就会在不同业务功能场景中采用各种各样的数据类型来进行承载。</p>\n","y":"a","t":"1.Redis 基础-数据分类"},["/redis/log/index.html","/redis/log/README.md"]],
  ["v-7e39a5b1","/redis/log/redis-2.html",{"d":"2020-08-01T21:11:31.000Z","l":"2020年8月2日","c":["Redis"],"g":["数据库"],"e":"<h1> NoSQL 基础知识</h1>\n<p>一类新出现的数据库(not only sql)</p>\n<h2> 特点</h2>\n<ul>\n<li>泛指非关系型的数据库</li>\n<li>不支持SQL语法</li>\n<li>存储结构跟传统关系型数据库中的那种关系表完全不同，nosql中存储的数据都是KV形式</li>\n<li>NoSQL的世界中没有一种通用的语言，每种nosql数据库都有自己的api和语法，以及擅长的业务场景</li>\n</ul>\n<h2> <strong>相关软件</strong></h2>\n<p><strong>Redis</strong></p>\n<p>简介：开源的内存结构数据库</p>","y":"a","t":"2.Redis 基础-NoSQL"},["/redis/log/redis-2","/redis/log/redis-2.md"]],
  ["v-7fee7e50","/redis/log/redis-3.html",{"d":"2020-08-02T20:11:31.000Z","l":"2020年8月3日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis 基础知识</h1>\n<p>Redis 是 Remote Dictionary Server(远程数据服务)的缩写，由意大利人 antirez(Salvatore\nSanfilippo) 开发的一款 内存高速缓存数据库，该软件使用 C 语言编写,它的数据模型为 key-value。</p>\n<br>\n<p><strong>官方介绍</strong>：</p>\n<p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.</p>","y":"a","t":"3.Redis 基础-环境部署"},["/redis/log/redis-3","/redis/log/redis-3.md"]],
  ["v-fcb95222","/redis/log/redis-4.html",{"d":"2020-08-02T20:11:31.000Z","l":"2020年8月3日","c":["Redis","python"],"g":["数据库","session"],"e":"<h1> 应用Redis python-Web Session实践</h1>\n<p>我们在后面是准备在python web项目中应用redis，所以我们需要在python虚拟环境中安装redis的模块插件，然后才可以正常的应用。redis-py提供两个类Redis和StrictRedis用于实现Redis的命令，StrictRedis用于实现大部分官方的命令，并使用官方的语法和命令，Redis是StrictRedis的子类，用于向后兼容旧版本的redis-py。</p>\n<br>\n<h3> <strong>环境准备</strong></h3>\n<p>需要创建一个虚拟环境，为什么要用虚拟环境呢？ 默认情况下在当前操作系统下里面，安装一个版本为3.7的Python 再安装一个版本为3.9的Python 那么就会把之前的版本覆盖掉，那么如果再当前主机中有多个项目时，每个应用都有不同的功能，一个有遗留代码依赖于2.7版本，一个依赖于3.5版本，新的项目要求3.9版本，那么现在如果想要在一个主机把三个app全部运行起来该怎么办？ 那么就需要Python虚拟环境基于目录方式实现多个python版本共存。</p>","y":"a","t":"4.Redis-共享Session实践"},["/redis/log/redis-4","/redis/log/redis-4.md"]],
  ["v-f94fa0e4","/redis/log/redis-5.html",{"d":"2020-08-04T21:12:31.000Z","l":"2020年8月5日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis 持久复制</h1>\n<p>Redis虽然是一个内存级别的缓存程序，但是其可以将内存的数据按照一定的策略保存到硬盘上，从而实现数据持久保存的目的。</p>\n<p>目前，redis支持两种不同方式的数据持久化保存机制：</p>\n<p><strong>RDB</strong></p>\n<ul>\n<li>\n<p>基于时间，生成某个时间点的快照文件，默认只保留最近的一次快照。</p>\n</li>\n<li>\n<p>恢复速度非常快，但是可能丢失之前的快照数据，非实时同步。</p>\n</li>\n</ul>\n<p><strong>AOF</strong></p>\n<ul>\n<li>AppendOnlyFile(日志追加模式),基于Redis协议格式保存信息到指定日志文件的末尾</li>\n<li>基于写时复制的机制，每隔x秒将新执行的命令同步到对应的文件中</li>\n<li>默认是禁用的，需要开启数据保存全，时间过长导致文件过大，恢复时候速度比RDB慢。</li>\n</ul>","y":"a","t":"5.Redis 持久复制"},["/redis/log/redis-5","/redis/log/redis-5.md"]],
  ["v-f5e5efa6","/redis/log/redis-6.html",{"d":"2020-08-06T19:24:11.000Z","l":"2020年8月7日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis 主从同步</h1>\n<p>redis 作为一个分布式的数据缓存平台，我们可以借助于redis的多实例机制，让多个实例间的数据，\n达成一个同步的效果，这样即使某个实例出现异常，也不影响数据整体的使用。</p>\n<h3> 基础知识</h3>\n<h4> 复制特性</h4>\n<ul>\n<li>redis 如果想要实现主从复制的效果，我们需要为它划分 主角色和从角色，实现数据 由主向从的单向传递。</li>\n<li>对于 从redis，一旦发现 主redis 更换了，那么将本地数据清空，从新主上同步数据。</li>\n<li>如果 从redis 仅仅是断开了 主redis，那么不会删除已经同步过的数据。</li>\n</ul>","y":"a","t":"6.Redis 主从同步"},["/redis/log/redis-6","/redis/log/redis-6.md"]],
  ["v-f27c3e68","/redis/log/redis-7.html",{"d":"2020-08-06T19:24:11.000Z","l":"2020年8月7日","c":["Redis"],"g":["数据库"],"e":"<h1> Redis Sentinel（哨兵）</h1>\n<h3> 简介</h3>\n<p>主从复制奠定了Redis分布式的基础，但是普通的主从复制并不能达到高可用的状态。在普通的主从复制模式下，如果主服务器宕机，就只能通过运维人员手动切换主服务器，很显然这种方案并不可取。</p>\n<p>针对上述情况，Redis官方推出了可抵抗节点故障的高可用方案——Redis Sentinel（哨兵）。Redis Sentinel（哨兵）：由一个或多个Sentinel实例组成的Sentinel系统，它可以监视任意多个主从服务器，当监视的主服务器宕机时，自动下线主服务器，并且择优选取从服务器升级为新的主服务器。</p>","y":"a","t":"7.Redis Sentinel（哨兵）"},["/redis/log/redis-7","/redis/log/redis-7.md"]],
  ["v-f8c93f34","/xw/hyy/1.html",{"d":"2022-11-10T12:12:22.000Z","l":"2022年11月10日","y":"a","t":"汉译英技巧课1"},["/xw/hyy/1","/xw/hyy/1.md"]],
  ["v-f55f8df6","/xw/hyy/2.html",{"d":"2022-11-13T12:12:22.000Z","l":"2022年11月13日","y":"a","t":"汉译英技巧课2"},["/xw/hyy/2","/xw/hyy/2.md"]],
  ["v-03c9579e","/xw/hyy/",{"y":"a","t":"C汉译英技巧课","i":"miao"},["/xw/hyy/index.html","/xw/hyy/README.md"]],
  ["v-3683e551","/xw/tc/1.html",{"d":"2022-11-23T12:12:22.000Z","l":"2022年11月23日","y":"a","t":"挑错技巧课1"},["/xw/tc/1","/xw/tc/1.md"]],
  ["v-3838bdf0","/xw/tc/2.html",{"d":"2022-11-24T12:12:22.000Z","l":"2022年11月24日","y":"a","t":"挑错技巧课2"},["/xw/tc/2","/xw/tc/2.md"]],
  ["v-c5f2ae6e","/xw/tc/",{"y":"a","t":"D挑错","i":"miao"},["/xw/tc/index.html","/xw/tc/README.md"]],
  ["v-f8898596","/xw/yd/1.html",{"d":"2021-11-06T12:12:22.000Z","l":"2021年11月6日","y":"a","t":"阅读理解技巧课1"},["/xw/yd/1","/xw/yd/1.md"]],
  ["v-f51fd458","/xw/yd/2.html",{"d":"2021-11-07T12:12:22.000Z","l":"2021年11月7日","y":"a","t":"阅读理解技巧课2"},["/xw/yd/2","/xw/yd/2.md"]],
  ["v-c5f288a6","/xw/yd/",{"y":"a","t":"A阅读理解","i":"miao"},["/xw/yd/index.html","/xw/yd/README.md"]],
  ["v-537d96f3","/xw/yf/1.html",{"d":"2023-01-03T12:12:22.000Z","l":"2023年1月3日","e":"<h2> <strong>第一部分：时态</strong></h2>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>1.When you ____this over with her, how did she react?</p>\n<p>A. talk    B. talked    C. will talk    D. talking</p>","y":"a","t":"词汇与结构1"},["/xw/yf/1","/xw/yf/1.md"]],
  ["v-55326f92","/xw/yf/2.html",{"d":"2023-01-04T12:12:22.000Z","l":"2023年1月4日","y":"a","t":"词汇与结构2"},["/xw/yf/2","/xw/yf/2.md"]],
  ["v-c5f2882a","/xw/yf/",{"y":"a","t":"B词汇与结构","i":"miao"},["/xw/yf/index.html","/xw/yf/README.md"]],
  ["v-fc4c2a24","/xw/yf/%E6%8A%80%E5%B7%A7%E7%9B%B4%E6%92%AD%E8%AF%BE-%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%841.html",{"d":"2023-01-03T12:12:22.000Z","l":"2023年1月3日","e":"<p><a name=\"ib8ui\"></a></p>\n<h2> 第一部分：时态</h2>\n<p>1.When you        this over with her, how did she react?<br>A. talk       B. talked        C. will talk        D. talking</p>\n<p>:::success\n<strong>考点：时态前后一致</strong>，后面的句子did是过去时，前面的谓语应该用过去时 选B\n:::</p>\n<p>2.Dr. Robert went to New York, gave a few lectures and         .<br>A. visiting his daughter   B. to visit his daughter  C. visit his daughter   D. visited his daughter</p>","y":"a","t":"词汇与结构1"},["/xw/yf/技巧直播课-词汇与结构1.html","/xw/yf/%E6%8A%80%E5%B7%A7%E7%9B%B4%E6%92%AD%E8%AF%BE-%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%841","/xw/yf/技巧直播课-词汇与结构1.md","/xw/yf/%E6%8A%80%E5%B7%A7%E7%9B%B4%E6%92%AD%E8%AF%BE-%E8%AF%8D%E6%B1%87%E4%B8%8E%E7%BB%93%E6%9E%841.md"]],
  ["v-52f02eb4","/xw/yyh/1.html",{"d":"2023-01-08T12:12:22.000Z","l":"2023年1月8日","y":"a","t":"英译汉技巧课1"},["/xw/yyh/1","/xw/yyh/1.md"]],
  ["v-4f867d76","/xw/yyh/2.html",{"d":"2023-01-09T12:12:22.000Z","l":"2023年1月9日","y":"a","t":"英译汉技巧课2"},["/xw/yyh/2","/xw/yyh/2.md"]],
  ["v-03d10fde","/xw/yyh/",{"y":"a","t":"E英译汉","i":"miao"},["/xw/yyh/index.html","/xw/yyh/README.md"]],
  ["v-78c9e09f","/xw/wx/1.html",{"d":"2021-11-03T12:12:22.000Z","l":"2021年11月3日","y":"a","t":"完型技巧课1"},["/xw/wx/1","/xw/wx/1.md"]],
  ["v-7a7eb93e","/xw/wx/2.html",{"d":"2021-11-04T12:12:22.000Z","l":"2021年11月4日","y":"a","t":"完型技巧课2"},["/xw/wx/2","/xw/wx/2.md"]],
  ["v-c5f292d2","/xw/wx/",{"y":"a","t":"F完型填空","i":"miao"},["/xw/wx/index.html","/xw/wx/README.md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},["/404"]],
  ["v-29bcf9a7","/ceph/log/",{"y":"p","t":"Log"},["/ceph/log/index.html"]],
  ["v-74485282","/k8s/",{"y":"p","t":"K8s"},["/k8s/index.html"]],
  ["v-5bc93818","/category/",{"y":"p","t":"分类","I":0},["/category/index.html"]],
  ["v-744d024e","/tag/",{"y":"p","t":"标签","I":0},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"y":"p","t":"文章","I":0},["/article/index.html"]],
  ["v-154dc4c4","/star/",{"y":"p","t":"收藏","I":0},["/star/index.html"]],
  ["v-01560935","/timeline/",{"y":"p","t":"时间轴","I":0},["/timeline/index.html"]],
  ["v-57d0c87d","/category/ceph/",{"y":"p","t":"Ceph 分类","I":0},["/category/ceph/index.html"]],
  ["v-219da821","/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/",{"y":"p","t":"分布式存储 标签","I":0},["/tag/分布式存储/","/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/index.html"]],
  ["v-ac0c2a6a","/category/guide/",{"y":"p","t":"Guide 分类","I":0},["/category/guide/index.html"]],
  ["v-dd55f3f0","/tag/haproxy/",{"y":"p","t":"HAproxy 标签","I":0},["/tag/haproxy/index.html"]],
  ["v-1cf46e7c","/category/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/",{"y":"p","t":"持续集成 分类","I":0},["/category/持续集成/","/category/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/index.html"]],
  ["v-c5a9e2d6","/tag/disable/",{"y":"p","t":"disable 标签","I":0},["/tag/disable/index.html"]],
  ["v-65f0f021","/category/k8s/",{"y":"p","t":"k8s 分类","I":0},["/category/k8s/index.html"]],
  ["v-b310d42a","/tag/git/",{"y":"p","t":"Git 标签","I":0},["/tag/git/index.html"]],
  ["v-57f397c7","/category/etcd/",{"y":"p","t":"etcd 分类","I":0},["/category/etcd/index.html"]],
  ["v-a8098304","/tag/k8s%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/",{"y":"p","t":"k8s进阶训练营 标签","I":0},["/tag/k8s进阶训练营/","/tag/k8s%E8%BF%9B%E9%98%B6%E8%AE%AD%E7%BB%83%E8%90%A5/index.html"]],
  ["v-8848dfa8","/category/redis/",{"y":"p","t":"Redis 分类","I":0},["/category/redis/index.html"]],
  ["v-3834646c","/tag/k8s-%E8%AE%AD%E7%BB%83%E8%90%A5/",{"y":"p","t":"K8S 训练营 标签","I":0},["/tag/k8s-训练营/","/tag/k8s-%E8%AE%AD%E7%BB%83%E8%90%A5/index.html"]],
  ["v-78cbe7bb","/category/python/",{"y":"p","t":"python 分类","I":0},["/category/python/index.html"]],
  ["v-25365ef3","/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/",{"y":"p","t":"数据库 标签","I":0},["/tag/数据库/","/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/index.html"]],
  ["v-3e76b6b2","/tag/session/",{"y":"p","t":"session 标签","I":0},["/tag/session/index.html"]],
]
